{"ast":null,"code":"var $20aJV$reactariautils = require(\"@react-aria/utils\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"disableTextSelection\", function () {\n  return $f7e14e656343df57$export$16a4697467175487;\n});\n$parcel$export(module.exports, \"restoreTextSelection\", function () {\n  return $f7e14e656343df57$export$b0d6fa1ab32e3295;\n});\nvar $f7e14e656343df57$var$state = 'default';\nvar $f7e14e656343df57$var$savedUserSelect = '';\nvar $f7e14e656343df57$var$modifiedElementMap = new WeakMap();\nfunction $f7e14e656343df57$export$16a4697467175487(target) {\n  if ((0, $20aJV$reactariautils.isIOS)()) {\n    if ($f7e14e656343df57$var$state === 'default') {\n      var documentObject = (0, $20aJV$reactariautils.getOwnerDocument)(target);\n      $f7e14e656343df57$var$savedUserSelect = documentObject.documentElement.style.webkitUserSelect;\n      documentObject.documentElement.style.webkitUserSelect = 'none';\n    }\n    $f7e14e656343df57$var$state = 'disabled';\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    var property = 'userSelect' in target.style ? 'userSelect' : 'webkitUserSelect';\n    $f7e14e656343df57$var$modifiedElementMap.set(target, target.style[property]);\n    target.style[property] = 'none';\n  }\n}\nfunction $f7e14e656343df57$export$b0d6fa1ab32e3295(target) {\n  if ((0, $20aJV$reactariautils.isIOS)()) {\n    if ($f7e14e656343df57$var$state !== 'disabled') return;\n    $f7e14e656343df57$var$state = 'restoring';\n    setTimeout(function () {\n      (0, $20aJV$reactariautils.runAfterTransition)(function () {\n        if ($f7e14e656343df57$var$state === 'restoring') {\n          var documentObject = (0, $20aJV$reactariautils.getOwnerDocument)(target);\n          if (documentObject.documentElement.style.webkitUserSelect === 'none') documentObject.documentElement.style.webkitUserSelect = $f7e14e656343df57$var$savedUserSelect || '';\n          $f7e14e656343df57$var$savedUserSelect = '';\n          $f7e14e656343df57$var$state = 'default';\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n      if (target && $f7e14e656343df57$var$modifiedElementMap.has(target)) {\n        var targetOldUserSelect = $f7e14e656343df57$var$modifiedElementMap.get(target);\n        var property = 'userSelect' in target.style ? 'userSelect' : 'webkitUserSelect';\n        if (target.style[property] === 'none') target.style[property] = targetOldUserSelect;\n        if (target.getAttribute('style') === '') target.removeAttribute('style');\n        $f7e14e656343df57$var$modifiedElementMap.delete(target);\n      }\n    }\n}","map":{"version":3,"names":["$f7e14e656343df57$var$state","$f7e14e656343df57$var$savedUserSelect","$f7e14e656343df57$var$modifiedElementMap","WeakMap","$f7e14e656343df57$export$16a4697467175487","target","$20aJV$reactariautils","isIOS","documentObject","getOwnerDocument","documentElement","style","webkitUserSelect","HTMLElement","SVGElement","property","set","$f7e14e656343df57$export$b0d6fa1ab32e3295","setTimeout","runAfterTransition","has","targetOldUserSelect","get","getAttribute","removeAttribute","delete"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\textSelection.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getOwnerDocument, isIOS, runAfterTransition} from '@react-aria/utils';\n\n// Safari on iOS starts selecting text on long press. The only way to avoid this, it seems,\n// is to add user-select: none to the entire page. Adding it to the pressable element prevents\n// that element from being selected, but nearby elements may still receive selection. We add\n// user-select: none on touch start, and remove it again on touch end to prevent this.\n// This must be implemented using global state to avoid race conditions between multiple elements.\n\n// There are three possible states due to the delay before removing user-select: none after\n// pointer up. The 'default' state always transitions to the 'disabled' state, which transitions\n// to 'restoring'. The 'restoring' state can either transition back to 'disabled' or 'default'.\n\n// For non-iOS devices, we apply user-select: none to the pressed element instead to avoid possible\n// performance issues that arise from applying and removing user-select: none to the entire page\n// (see https://github.com/adobe/react-spectrum/issues/1609).\ntype State = 'default' | 'disabled' | 'restoring';\n\n// Note that state only matters here for iOS. Non-iOS gets user-select: none applied to the target element\n// rather than at the document level so we just need to apply/remove user-select: none for each pressed element individually\nlet state: State = 'default';\nlet savedUserSelect = '';\nlet modifiedElementMap = new WeakMap<Element, string>();\n\nexport function disableTextSelection(target?: Element): void {\n  if (isIOS()) {\n    if (state === 'default') {\n\n      const documentObject = getOwnerDocument(target);\n      savedUserSelect = documentObject.documentElement.style.webkitUserSelect;\n      documentObject.documentElement.style.webkitUserSelect = 'none';\n    }\n\n    state = 'disabled';\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, store the target's original user-select and change to user-select: none\n    // Ignore state since it doesn't apply for non iOS\n    let property = 'userSelect' in target.style ? 'userSelect' : 'webkitUserSelect';\n    modifiedElementMap.set(target, target.style[property]);\n    target.style[property] = 'none';\n  }\n}\n\nexport function restoreTextSelection(target?: Element): void {\n  if (isIOS()) {\n    // If the state is already default, there's nothing to do.\n    // If it is restoring, then there's no need to queue a second restore.\n    if (state !== 'disabled') {\n      return;\n    }\n\n    state = 'restoring';\n\n    // There appears to be a delay on iOS where selection still might occur\n    // after pointer up, so wait a bit before removing user-select.\n    setTimeout(() => {\n      // Wait for any CSS transitions to complete so we don't recompute style\n      // for the whole page in the middle of the animation and cause jank.\n      runAfterTransition(() => {\n        // Avoid race conditions\n        if (state === 'restoring') {\n\n          const documentObject = getOwnerDocument(target);\n          if (documentObject.documentElement.style.webkitUserSelect === 'none') {\n            documentObject.documentElement.style.webkitUserSelect = savedUserSelect || '';\n          }\n\n          savedUserSelect = '';\n          state = 'default';\n        }\n      });\n    }, 300);\n  } else if (target instanceof HTMLElement || target instanceof SVGElement) {\n    // If not iOS, restore the target's original user-select if any\n    // Ignore state since it doesn't apply for non iOS\n    if (target && modifiedElementMap.has(target)) {\n      let targetOldUserSelect = modifiedElementMap.get(target) as string;\n      let property = 'userSelect' in target.style ? 'userSelect' : 'webkitUserSelect';\n\n      if (target.style[property] === 'none') {\n        target.style[property] = targetOldUserSelect;\n      }\n\n      if (target.getAttribute('style') === '') {\n        target.removeAttribute('style');\n      }\n      modifiedElementMap.delete(target);\n    }\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;AA+BA,IAAIA,2BAAA,GAAe;AACnB,IAAIC,qCAAA,GAAkB;AACtB,IAAIC,wCAAA,GAAqB,IAAIC,OAAA;AAEtB,SAASC,0CAAqBC,MAAgB;EACnD,IAAI,IAAAC,qBAAA,CAAAC,KAAI,KAAK;IACX,IAAIP,2BAAA,KAAU,WAAW;MAEvB,IAAMQ,cAAA,GAAiB,IAAAF,qBAAA,CAAAG,gBAAe,EAAEJ,MAAA;MACxCJ,qCAAA,GAAkBO,cAAA,CAAeE,eAAe,CAACC,KAAK,CAACC,gBAAgB;MACvEJ,cAAA,CAAeE,eAAe,CAACC,KAAK,CAACC,gBAAgB,GAAG;IAC1D;IAEAZ,2BAAA,GAAQ;EACV,OAAO,IAAIK,MAAA,YAAkBQ,WAAA,IAAeR,MAAA,YAAkBS,UAAA,EAAY;IAGxE,IAAIC,QAAA,GAAW,gBAAgBV,MAAA,CAAOM,KAAK,GAAG,eAAe;IAC7DT,wCAAA,CAAmBc,GAAG,CAACX,MAAA,EAAQA,MAAA,CAAOM,KAAK,CAACI,QAAA,CAAS;IACrDV,MAAA,CAAOM,KAAK,CAACI,QAAA,CAAS,GAAG;EAC3B;AACF;AAEO,SAASE,0CAAqBZ,MAAgB;EACnD,IAAI,IAAAC,qBAAA,CAAAC,KAAI,KAAK;IAGX,IAAIP,2BAAA,KAAU,YACZ;IAGFA,2BAAA,GAAQ;IAIRkB,UAAA,CAAW;MAGT,IAAAZ,qBAAA,CAAAa,kBAAiB,EAAE;QAEjB,IAAInB,2BAAA,KAAU,aAAa;UAEzB,IAAMQ,cAAA,GAAiB,IAAAF,qBAAA,CAAAG,gBAAe,EAAEJ,MAAA;UACxC,IAAIG,cAAA,CAAeE,eAAe,CAACC,KAAK,CAACC,gBAAgB,KAAK,QAC5DJ,cAAA,CAAeE,eAAe,CAACC,KAAK,CAACC,gBAAgB,GAAGX,qCAAA,IAAmB;UAG7EA,qCAAA,GAAkB;UAClBD,2BAAA,GAAQ;QACV;MACF;IACF,GAAG;EACL,OAAO,IAAIK,MAAA,YAAkBQ,WAAA,IAAeR,MAAA,YAAkBS,UAAA,EAG5D;MAAA,IAAIT,MAAA,IAAUH,wCAAA,CAAmBkB,GAAG,CAACf,MAAA,GAAS;QAC5C,IAAIgB,mBAAA,GAAsBnB,wCAAA,CAAmBoB,GAAG,CAACjB,MAAA;QACjD,IAAIU,QAAA,GAAW,gBAAgBV,MAAA,CAAOM,KAAK,GAAG,eAAe;QAE7D,IAAIN,MAAA,CAAOM,KAAK,CAACI,QAAA,CAAS,KAAK,QAC7BV,MAAA,CAAOM,KAAK,CAACI,QAAA,CAAS,GAAGM,mBAAA;QAG3B,IAAIhB,MAAA,CAAOkB,YAAY,CAAC,aAAa,IACnClB,MAAA,CAAOmB,eAAe,CAAC;QAEzBtB,wCAAA,CAAmBuB,MAAM,CAACpB,MAAA;MAC5B;IAAA;AAEJ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}