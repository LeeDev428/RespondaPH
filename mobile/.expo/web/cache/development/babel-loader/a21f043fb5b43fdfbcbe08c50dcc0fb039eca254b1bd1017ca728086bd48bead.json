{"ast":null,"code":"var _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar $78605a5d7424e31b$exports = require(\"./useLayoutEffect.main.js\");\nvar $bsryd$reactdom = require(\"react-dom\");\nvar $bsryd$react = require(\"react\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useEnterAnimation\", function () {\n  return $5bd06107f98811f5$export$6d3443f2c48bfc20;\n});\n$parcel$export(module.exports, \"useExitAnimation\", function () {\n  return $5bd06107f98811f5$export$45fda7c47f93fd48;\n});\nfunction $5bd06107f98811f5$export$6d3443f2c48bfc20(ref) {\n  var isReady = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var _ref = (0, $bsryd$react.useState)(true),\n    _ref2 = _slicedToArray(_ref, 2),\n    isEntering = _ref2[0],\n    setEntering = _ref2[1];\n  var isAnimationReady = isEntering && isReady;\n  (0, $78605a5d7424e31b$exports.useLayoutEffect)(function () {\n    if (isAnimationReady && ref.current && 'getAnimations' in ref.current) {\n      for (var animation of ref.current.getAnimations()) if (animation instanceof CSSTransition) animation.cancel();\n    }\n  }, [ref, isAnimationReady]);\n  $5bd06107f98811f5$var$useAnimation(ref, isAnimationReady, (0, $bsryd$react.useCallback)(function () {\n    return setEntering(false);\n  }, []));\n  return isAnimationReady;\n}\nfunction $5bd06107f98811f5$export$45fda7c47f93fd48(ref, isOpen) {\n  var _ref3 = (0, $bsryd$react.useState)(isOpen ? 'open' : 'closed'),\n    _ref4 = _slicedToArray(_ref3, 2),\n    exitState = _ref4[0],\n    setExitState = _ref4[1];\n  switch (exitState) {\n    case 'open':\n      if (!isOpen) setExitState('exiting');\n      break;\n    case 'closed':\n    case 'exiting':\n      if (isOpen) setExitState('open');\n      break;\n  }\n  var isExiting = exitState === 'exiting';\n  $5bd06107f98811f5$var$useAnimation(ref, isExiting, (0, $bsryd$react.useCallback)(function () {\n    setExitState(function (state) {\n      return state === 'exiting' ? 'closed' : state;\n    });\n  }, []));\n  return isExiting;\n}\nfunction $5bd06107f98811f5$var$useAnimation(ref, isActive, onEnd) {\n  (0, $78605a5d7424e31b$exports.useLayoutEffect)(function () {\n    if (isActive && ref.current) {\n      if (!('getAnimations' in ref.current)) {\n        onEnd();\n        return;\n      }\n      var animations = ref.current.getAnimations();\n      if (animations.length === 0) {\n        onEnd();\n        return;\n      }\n      var canceled = false;\n      Promise.all(animations.map(function (a) {\n        return a.finished;\n      })).then(function () {\n        if (!canceled) (0, $bsryd$reactdom.flushSync)(function () {\n          onEnd();\n        });\n      }).catch(function () {});\n      return function () {\n        canceled = true;\n      };\n    }\n  }, [ref, isActive, onEnd]);\n}","map":{"version":3,"names":["$5bd06107f98811f5$export$6d3443f2c48bfc20","ref","isReady","arguments","length","undefined","_ref","$bsryd$react","useState","_ref2","_slicedToArray","isEntering","setEntering","isAnimationReady","$78605a5d7424e31b$exports","useLayoutEffect","current","animation","getAnimations","CSSTransition","cancel","$5bd06107f98811f5$var$useAnimation","useCallback","$5bd06107f98811f5$export$45fda7c47f93fd48","isOpen","_ref3","_ref4","exitState","setExitState","isExiting","state","isActive","onEnd","animations","canceled","Promise","all","map","a","finished","then","$bsryd$reactdom","flushSync","catch"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\utils\\dist\\packages\\@react-aria\\utils\\src\\animation.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {flushSync} from 'react-dom';\nimport {RefObject, useCallback, useState} from 'react';\nimport {useLayoutEffect} from './useLayoutEffect';\n\nexport function useEnterAnimation(ref: RefObject<HTMLElement | null>, isReady: boolean = true): boolean {\n  let [isEntering, setEntering] = useState(true);\n  let isAnimationReady = isEntering && isReady;\n\n  // There are two cases for entry animations:\n  // 1. CSS @keyframes. The `animation` property is set during the isEntering state, and it is removed after the animation finishes.\n  // 2. CSS transitions. The initial styles are applied during the isEntering state, and removed immediately, causing the transition to occur.\n  //\n  // In the second case, cancel any transitions that were triggered prior to the isEntering = false state (when the transition is supposed to start).\n  // This can happen when isReady starts as false (e.g. popovers prior to placement calculation).\n  useLayoutEffect(() => {\n    if (isAnimationReady && ref.current && 'getAnimations' in ref.current) {\n      for (let animation of ref.current.getAnimations()) {\n        if (animation instanceof CSSTransition) {\n          animation.cancel();\n        }\n      }\n    }\n  }, [ref, isAnimationReady]);\n\n  useAnimation(ref, isAnimationReady, useCallback(() => setEntering(false), []));\n  return isAnimationReady;\n}\n\nexport function useExitAnimation(ref: RefObject<HTMLElement | null>, isOpen: boolean): boolean {\n  let [exitState, setExitState] = useState<'closed' | 'open' | 'exiting'>(isOpen ? 'open' : 'closed');\n\n  switch (exitState) {\n    case 'open':\n      // If isOpen becomes false, set the state to exiting.\n      if (!isOpen) {\n        setExitState('exiting');\n      }\n      break;\n    case 'closed':\n    case 'exiting':\n      // If we are exiting and isOpen becomes true, the animation was interrupted.\n      // Reset the state to open.\n      if (isOpen) {\n        setExitState('open');\n      }\n      break;\n  }\n\n  let isExiting = exitState === 'exiting';\n  useAnimation(\n    ref,\n    isExiting,\n    useCallback(() => {\n      // Set the state to closed, which will cause the element to be unmounted.\n      setExitState(state => state === 'exiting' ? 'closed' : state);\n    }, [])\n  );\n\n  return isExiting;\n}\n\nfunction useAnimation(ref: RefObject<HTMLElement | null>, isActive: boolean, onEnd: () => void): void {\n  useLayoutEffect(() => {\n    if (isActive && ref.current) {\n      if (!('getAnimations' in ref.current)) {\n        // JSDOM\n        onEnd();\n        return;\n      }\n\n      let animations = ref.current.getAnimations();\n      if (animations.length === 0) {\n        onEnd();\n        return;\n      }\n\n      let canceled = false;\n      Promise.all(animations.map(a => a.finished)).then(() => {\n        if (!canceled) {\n          flushSync(() => {\n            onEnd();\n          });\n        }\n      }).catch(() => {});\n\n      return () => {\n        canceled = true;\n      };\n    }\n  }, [ref, isActive, onEnd]);\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;AAgBO,SAASA,0CAAkBC,GAAkC,EAAyB;EAAA,IAAvBC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAmB,IAAI;EAC3F,IAAAG,IAAA,GAAgC,IAAAC,YAAA,CAAAC,QAAO,EAAE;IAAAC,KAAA,GAAAC,cAAA,CAAAJ,IAAA;IAApCK,UAAA,GAAAF,KAAA;IAAYG,WAAA,GAAAH,KAAA;EACjB,IAAII,gBAAA,GAAmBF,UAAA,IAAcT,OAAA;EAQrC,IAAAY,yBAAA,CAAAC,eAAc,EAAE;IACd,IAAIF,gBAAA,IAAoBZ,GAAA,CAAIe,OAAO,IAAI,mBAAmBf,GAAA,CAAIe,OAAO,EAAE;MACrE,KAAK,IAAIC,SAAA,IAAahB,GAAA,CAAIe,OAAO,CAACE,aAAa,IAC7C,IAAID,SAAA,YAAqBE,aAAA,EACvBF,SAAA,CAAUG,MAAM;IAGtB;EACF,GAAG,CAACnB,GAAA,EAAKY,gBAAA,CAAiB;EAE1BQ,kCAAA,CAAapB,GAAA,EAAKY,gBAAA,EAAkB,IAAAN,YAAA,CAAAe,WAAU,EAAE;IAAA,OAAMV,WAAA,CAAY;EAAA,GAAQ,EAAE;EAC5E,OAAOC,gBAAA;AACT;AAEO,SAASU,0CAAiBtB,GAAkC,EAAEuB,MAAe;EAClF,IAAAC,KAAA,GAAgC,IAAAlB,YAAA,CAAAC,QAAO,EAAiCgB,MAAA,GAAS,SAAS;IAAAE,KAAA,GAAAhB,cAAA,CAAAe,KAAA;IAArFE,SAAA,GAAAD,KAAA;IAAWE,YAAA,GAAAF,KAAA;EAEhB,QAAQC,SAAA;IACN,KAAK;MAEH,IAAI,CAACH,MAAA,EACHI,YAAA,CAAa;MAEf;IACF,KAAK;IACL,KAAK;MAGH,IAAIJ,MAAA,EACFI,YAAA,CAAa;MAEf;EACJ;EAEA,IAAIC,SAAA,GAAYF,SAAA,KAAc;EAC9BN,kCAAA,CACEpB,GAAA,EACA4B,SAAA,EACA,IAAAtB,YAAA,CAAAe,WAAU,EAAE;IAEVM,YAAA,CAAa,UAAAE,KAAA;MAAA,OAASA,KAAA,KAAU,YAAY,WAAWA,KAAA;IAAA;EACzD,GAAG,EAAE;EAGP,OAAOD,SAAA;AACT;AAEA,SAASR,mCAAapB,GAAkC,EAAE8B,QAAiB,EAAEC,KAAiB;EAC5F,IAAAlB,yBAAA,CAAAC,eAAc,EAAE;IACd,IAAIgB,QAAA,IAAY9B,GAAA,CAAIe,OAAO,EAAE;MAC3B,IAAI,EAAE,mBAAmBf,GAAA,CAAIe,OAAO,CAAD,EAAI;QAErCgB,KAAA;QACA;MACF;MAEA,IAAIC,UAAA,GAAahC,GAAA,CAAIe,OAAO,CAACE,aAAa;MAC1C,IAAIe,UAAA,CAAW7B,MAAM,KAAK,GAAG;QAC3B4B,KAAA;QACA;MACF;MAEA,IAAIE,QAAA,GAAW;MACfC,OAAA,CAAQC,GAAG,CAACH,UAAA,CAAWI,GAAG,CAAC,UAAAC,CAAA;QAAA,OAAKA,CAAA,CAAEC,QAAQ;MAAA,IAAGC,IAAI,CAAC;QAChD,IAAI,CAACN,QAAA,EACH,IAAAO,eAAA,CAAAC,SAAQ,EAAE;UACRV,KAAA;QACF;MAEJ,GAAGW,KAAK,CAAC,aAAO;MAEhB,OAAO;QACLT,QAAA,GAAW;MACb;IACF;EACF,GAAG,CAACjC,GAAA,EAAK8B,QAAA,EAAUC,KAAA,CAAM;AAC3B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}