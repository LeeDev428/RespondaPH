{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSlider = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _utils = require(\"@react-aria/utils\");\nvar _utils2 = require(\"./utils\");\nvar _react = require(\"react\");\nvar _interactions = require(\"@react-aria/interactions\");\nvar _label = require(\"@react-aria/label\");\nvar _utils3 = require(\"@react-native-aria/utils\");\nvar _useMove2 = require(\"./useMove\");\nvar _excluded = [\"groupProps\"];\nfunction useSliderWeb(props, state, trackLayout, isReversed) {\n  var _labelProps$id;\n  var _useLabel = (0, _label.useLabel)(props),\n    labelProps = _useLabel.labelProps,\n    fieldProps = _useLabel.fieldProps;\n  var isVertical = props.orientation === 'vertical';\n  _utils2.sliderIds.set(state, (_labelProps$id = labelProps.id) != null ? _labelProps$id : fieldProps.id);\n  var direction = (0, _utils3.isRTL)() ? 'rtl' : undefined;\n  var _useGlobalListeners = (0, _utils.useGlobalListeners)(),\n    addGlobalListener = _useGlobalListeners.addGlobalListener,\n    removeGlobalListener = _useGlobalListeners.removeGlobalListener;\n  var realTimeTrackDraggingIndex = (0, _react.useRef)(null);\n  var stateRef = (0, _react.useRef)(null);\n  stateRef.current = state;\n  var reverseX = isReversed || direction === 'rtl';\n  var currentPosition = (0, _react.useRef)(null);\n  var _useMove = (0, _useMove2.useMove)({\n      onMoveStart: function onMoveStart() {\n        currentPosition.current = null;\n      },\n      onMove: function onMove(_ref) {\n        var deltaX = _ref.deltaX,\n          deltaY = _ref.deltaY;\n        var size = isVertical ? trackLayout.height : trackLayout.width;\n        if (currentPosition.current == null) {\n          currentPosition.current = stateRef.current.getThumbPercent(realTimeTrackDraggingIndex.current) * size;\n        }\n        var delta = isVertical ? deltaY : deltaX;\n        if (reverseX) {\n          if (!isVertical) {\n            delta = -delta;\n          }\n        } else {\n          if (isVertical) {\n            delta = -delta;\n          }\n        }\n        currentPosition.current += delta;\n        if (realTimeTrackDraggingIndex.current != null) {\n          var percent = (0, _utils.clamp)(currentPosition.current / size, 0, 1);\n          stateRef.current.setThumbPercent(realTimeTrackDraggingIndex.current, percent);\n        }\n      },\n      onMoveEnd: function onMoveEnd() {\n        if (realTimeTrackDraggingIndex.current != null) {\n          stateRef.current.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n          realTimeTrackDraggingIndex.current = null;\n        }\n      }\n    }),\n    moveProps = _useMove.moveProps;\n  var currentPointer = (0, _react.useRef)(undefined);\n  var onDownTrack = function onDownTrack(e, id, clientX, clientY) {\n    if (!props.isDisabled && state.values.every(function (_, i) {\n      return !state.isThumbDragging(i);\n    })) {\n      var size = isVertical ? trackLayout.height : trackLayout.width;\n      var trackPosition = trackLayout[isVertical ? 'top' : 'left'];\n      var clickPosition = isVertical ? clientY : clientX;\n      var offset = clickPosition - trackPosition;\n      var percent = offset / size;\n      if (reverseX) {\n        if (!isVertical) {\n          percent = 1 - percent;\n        }\n      } else {\n        if (isVertical) {\n          percent = 1 - percent;\n        }\n      }\n      var value = state.getPercentValue(percent);\n      var closestThumb;\n      var split = state.values.findIndex(function (v) {\n        return value - v < 0;\n      });\n      if (split === 0) {\n        closestThumb = split;\n      } else if (split === -1) {\n        closestThumb = state.values.length - 1;\n      } else {\n        var lastLeft = state.values[split - 1];\n        var firstRight = state.values[split];\n        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\n          closestThumb = split - 1;\n        } else {\n          closestThumb = split;\n        }\n      }\n      if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {\n        e.preventDefault();\n        realTimeTrackDraggingIndex.current = closestThumb;\n        state.setFocusedThumb(closestThumb);\n        currentPointer.current = id;\n        state.setThumbDragging(realTimeTrackDraggingIndex.current, true);\n        state.setThumbValue(closestThumb, value);\n        addGlobalListener(window, 'mouseup', _onUpTrack, false);\n        addGlobalListener(window, 'touchend', _onUpTrack, false);\n        addGlobalListener(window, 'pointerup', _onUpTrack, false);\n      } else {\n        realTimeTrackDraggingIndex.current = null;\n      }\n    }\n  };\n  var _onUpTrack = function onUpTrack(e) {\n    var _e$pointerId;\n    var _e$changedTouches;\n    var id = (_e$pointerId = e.pointerId) != null ? _e$pointerId : (_e$changedTouches = e.changedTouches) === null || _e$changedTouches === void 0 ? void 0 : _e$changedTouches[0].identifier;\n    if (id === currentPointer.current) {\n      if (realTimeTrackDraggingIndex.current != null) {\n        state.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n      removeGlobalListener(window, 'mouseup', _onUpTrack, false);\n      removeGlobalListener(window, 'touchend', _onUpTrack, false);\n      removeGlobalListener(window, 'pointerup', _onUpTrack, false);\n    }\n  };\n  if (labelProps.htmlFor !== undefined) {\n    delete labelProps.htmlFor;\n    labelProps.onClick = function () {\n      var _document$getElementB;\n      (_document$getElementB = document.getElementById((0, _utils2.getSliderThumbId)(state, 0))) === null || _document$getElementB === void 0 || _document$getElementB.focus();\n      (0, _interactions.setInteractionModality)('keyboard');\n    };\n  }\n  return {\n    labelProps: labelProps,\n    groupProps: Object.assign({\n      role: 'group'\n    }, fieldProps),\n    trackProps: (0, _utils.mergeProps)({\n      onMouseDown: function onMouseDown(e) {\n        if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n          return;\n        }\n        onDownTrack(e, undefined, e.clientX, e.clientY);\n      },\n      onPointerDown: function onPointerDown(e) {\n        if (e.pointerType === 'mouse' && (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)) {\n          return;\n        }\n        onDownTrack(e, e.pointerId, e.clientX, e.clientY);\n      },\n      onTouchStart: function onTouchStart(e) {\n        onDownTrack(e, e.changedTouches[0].identifier, e.changedTouches[0].clientX, e.changedTouches[0].clientY);\n      }\n    }, moveProps),\n    outputProps: {\n      'htmlFor': state.values.map(function (_, index) {\n        return (0, _utils2.getSliderThumbId)(state, index);\n      }).join(' '),\n      'aria-live': 'off'\n    }\n  };\n}\nvar useSlider = exports.useSlider = function useSlider(props, state, ref, isReversed) {\n  var _useSliderWeb = useSliderWeb(props, state, ref, isReversed),\n    webGroupProps = _useSliderWeb.groupProps,\n    rest = (0, _objectWithoutProperties2.default)(_useSliderWeb, _excluded);\n  var groupProps = (0, _utils3.mapDomPropsToRN)(webGroupProps);\n  var labelProps = (0, _utils3.mapDomPropsToRN)(rest.labelProps);\n  return Object.assign({\n    groupProps: groupProps\n  }, rest, {\n    labelProps: labelProps\n  });\n};","map":{"version":3,"names":["_utils","require","_utils2","_react","_interactions","_label","_utils3","_useMove2","_excluded","useSliderWeb","props","state","trackLayout","isReversed","_labelProps$id","_useLabel","useLabel","labelProps","fieldProps","isVertical","orientation","sliderIds","set","id","direction","isRTL","undefined","_useGlobalListeners","useGlobalListeners","addGlobalListener","removeGlobalListener","realTimeTrackDraggingIndex","useRef","stateRef","current","reverseX","currentPosition","_useMove","useMove","onMoveStart","onMove","_ref","deltaX","deltaY","size","height","width","getThumbPercent","delta","percent","clamp","setThumbPercent","onMoveEnd","setThumbDragging","moveProps","currentPointer","onDownTrack","e","clientX","clientY","isDisabled","values","every","_","i","isThumbDragging","trackPosition","clickPosition","offset","value","getPercentValue","closestThumb","split","findIndex","v","length","lastLeft","firstRight","Math","abs","isThumbEditable","preventDefault","setFocusedThumb","setThumbValue","window","onUpTrack","_e$pointerId","_e$changedTouches","pointerId","changedTouches","identifier","htmlFor","onClick","_document$getElementB","document","getElementById","getSliderThumbId","focus","setInteractionModality","groupProps","Object","assign","role","trackProps","mergeProps","onMouseDown","button","altKey","ctrlKey","metaKey","onPointerDown","pointerType","onTouchStart","outputProps","map","index","join","useSlider","exports","ref","_useSliderWeb","webGroupProps","rest","_objectWithoutProperties2","default","mapDomPropsToRN"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-native-aria\\slider\\src\\useSlider.web.ts"],"sourcesContent":["import { AriaSliderProps } from '@react-types/slider';\nimport { clamp, mergeProps, useGlobalListeners } from '@react-aria/utils';\nimport { getSliderThumbId, sliderIds } from './utils';\nimport React, { useRef } from 'react';\nimport { setInteractionModality } from '@react-aria/interactions';\nimport { SliderState } from '@react-stately/slider';\nimport { useLabel } from '@react-aria/label';\nimport { mapDomPropsToRN, isRTL } from '@react-native-aria/utils';\nimport { useMove } from './useMove';\n\ninterface SliderAria {\n  /** Props for the label element. */\n  labelProps: any;\n\n  /** Props for the root element of the slider component; groups slider inputs. */\n  groupProps: any;\n\n  /** Props for the track element. */\n  trackProps: any;\n\n  /** Props for the output element, displaying the value of the slider thumbs. */\n  outputProps: any;\n}\n\nfunction useSliderWeb(\n  props: AriaSliderProps,\n  state: SliderState,\n  trackLayout: {\n    height: number;\n    width: number;\n    top: number;\n    left: number;\n    x: number;\n    y: number;\n  },\n  isReversed?: boolean\n): SliderAria {\n  let { labelProps, fieldProps } = useLabel(props);\n\n  let isVertical = props.orientation === 'vertical';\n\n  // Attach id of the label to the state so it can be accessed by useSliderThumb.\n  sliderIds.set(state, labelProps.id ?? fieldProps.id);\n\n  const direction = isRTL() ? 'rtl' : undefined;\n\n  let { addGlobalListener, removeGlobalListener } = useGlobalListeners();\n\n  // When the user clicks or drags the track, we want the motion to set and drag the\n  // closest thumb.  Hence we also need to install useMove() on the track element.\n  // Here, we keep track of which index is the \"closest\" to the drag start point.\n  // It is set onMouseDown/onTouchDown; see trackProps below.\n  const realTimeTrackDraggingIndex = useRef<number | null>(null);\n\n  const stateRef = useRef<SliderState>(null);\n  stateRef.current = state;\n  const reverseX = isReversed || direction === 'rtl';\n\n  const currentPosition = useRef<number>(null);\n  const { moveProps } = useMove({\n    onMoveStart() {\n      currentPosition.current = null;\n    },\n    onMove({ deltaX, deltaY }) {\n      let size = isVertical ? trackLayout.height : trackLayout.width;\n\n      if (currentPosition.current == null) {\n        currentPosition.current =\n          stateRef.current.getThumbPercent(realTimeTrackDraggingIndex.current) *\n          size;\n      }\n\n      let delta = isVertical ? deltaY : deltaX;\n      if (reverseX) {\n        if (!isVertical) {\n          delta = -delta;\n        }\n      } else {\n        if (isVertical) {\n          delta = -delta;\n        }\n      }\n\n      currentPosition.current += delta;\n\n      if (realTimeTrackDraggingIndex.current != null) {\n        const percent = clamp(currentPosition.current / size, 0, 1);\n        stateRef.current.setThumbPercent(\n          realTimeTrackDraggingIndex.current,\n          percent\n        );\n      }\n    },\n    onMoveEnd() {\n      if (realTimeTrackDraggingIndex.current != null) {\n        stateRef.current.setThumbDragging(\n          realTimeTrackDraggingIndex.current,\n          false\n        );\n        realTimeTrackDraggingIndex.current = null;\n      }\n    },\n  });\n\n  let currentPointer = useRef<number | null | undefined>(undefined);\n  let onDownTrack = (\n    e: React.UIEvent,\n    id: number,\n    clientX: number,\n    clientY: number\n  ) => {\n    // We only trigger track-dragging if the user clicks on the track itself and nothing is currently being dragged.\n    if (\n      !props.isDisabled &&\n      state.values.every((_, i) => !state.isThumbDragging(i))\n    ) {\n      let size = isVertical ? trackLayout.height : trackLayout.width;\n      // Find the closest thumb\n      const trackPosition = trackLayout[isVertical ? 'top' : 'left'];\n      const clickPosition = isVertical ? clientY : clientX;\n      const offset = clickPosition - trackPosition;\n      let percent = offset / size;\n      if (reverseX) {\n        if (!isVertical) {\n          percent = 1 - percent;\n        }\n      } else {\n        if (isVertical) {\n          percent = 1 - percent;\n        }\n      }\n      let value = state.getPercentValue(percent);\n\n      // to find the closet thumb we split the array based on the first thumb position to the \"right/end\" of the click.\n      let closestThumb;\n      let split = state.values.findIndex((v) => value - v < 0);\n      if (split === 0) {\n        // If the index is zero then the closetThumb is the first one\n        closestThumb = split;\n      } else if (split === -1) {\n        // If no index is found they've clicked past all the thumbs\n        closestThumb = state.values.length - 1;\n      } else {\n        let lastLeft = state.values[split - 1];\n        let firstRight = state.values[split];\n        // Pick the last left/start thumb, unless they are stacked on top of each other, then pick the right/end one\n        if (Math.abs(lastLeft - value) < Math.abs(firstRight - value)) {\n          closestThumb = split - 1;\n        } else {\n          closestThumb = split;\n        }\n      }\n\n      // Confirm that the found closest thumb is editable, not disabled, and move it\n      if (closestThumb >= 0 && state.isThumbEditable(closestThumb)) {\n        // Don't unfocus anything\n        e.preventDefault();\n\n        realTimeTrackDraggingIndex.current = closestThumb;\n        state.setFocusedThumb(closestThumb);\n        currentPointer.current = id;\n\n        state.setThumbDragging(realTimeTrackDraggingIndex.current, true);\n        state.setThumbValue(closestThumb, value);\n\n        addGlobalListener(window, 'mouseup', onUpTrack, false);\n        addGlobalListener(window, 'touchend', onUpTrack, false);\n        addGlobalListener(window, 'pointerup', onUpTrack, false);\n      } else {\n        realTimeTrackDraggingIndex.current = null;\n      }\n    }\n  };\n\n  let onUpTrack = (e) => {\n    let id = e.pointerId ?? e.changedTouches?.[0].identifier;\n    if (id === currentPointer.current) {\n      if (realTimeTrackDraggingIndex.current != null) {\n        state.setThumbDragging(realTimeTrackDraggingIndex.current, false);\n        realTimeTrackDraggingIndex.current = null;\n      }\n\n      removeGlobalListener(window, 'mouseup', onUpTrack, false);\n      removeGlobalListener(window, 'touchend', onUpTrack, false);\n      removeGlobalListener(window, 'pointerup', onUpTrack, false);\n    }\n  };\n\n  //@ts-ignore\n  if (labelProps.htmlFor !== undefined) {\n    // Ideally the `for` attribute should point to the first thumb, but VoiceOver on iOS\n    // causes this to override the `aria-labelledby` on the thumb. This causes the first\n    // thumb to only be announced as the slider label rather than its individual name as well.\n    // See https://bugs.webkit.org/show_bug.cgi?id=172464.\n    //@ts-ignore\n    delete labelProps.htmlFor;\n    labelProps.onClick = () => {\n      // Safari does not focus <input type=\"range\"> elements when clicking on an associated <label>,\n      // so do it manually. In addition, make sure we show the focus ring.\n      document.getElementById(getSliderThumbId(state, 0))?.focus();\n      setInteractionModality('keyboard');\n    };\n  }\n\n  return {\n    labelProps,\n    // The root element of the Slider will have role=\"group\" to group together\n    // all the thumb inputs in the Slider.  The label of the Slider will\n    // be used to label the group.\n    groupProps: {\n      role: 'group',\n      ...fieldProps,\n    },\n    trackProps: mergeProps(\n      {\n        onMouseDown(e: React.MouseEvent<HTMLElement>) {\n          if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey) {\n            return;\n          }\n          onDownTrack(e, undefined, e.clientX, e.clientY);\n        },\n        onPointerDown(e: React.PointerEvent<HTMLElement>) {\n          if (\n            e.pointerType === 'mouse' &&\n            (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey)\n          ) {\n            return;\n          }\n          onDownTrack(e, e.pointerId, e.clientX, e.clientY);\n        },\n        onTouchStart(e: React.TouchEvent<HTMLElement>) {\n          onDownTrack(\n            e,\n            e.changedTouches[0].identifier,\n            e.changedTouches[0].clientX,\n            e.changedTouches[0].clientY\n          );\n        },\n      },\n      moveProps\n    ),\n    outputProps: {\n      'htmlFor': state.values\n        .map((_, index) => getSliderThumbId(state, index))\n        .join(' '),\n      'aria-live': 'off',\n    },\n  };\n}\n\nexport const useSlider = (\n  props: any,\n  state: any,\n  ref: any,\n  isReversed?: boolean\n) => {\n  let { groupProps: webGroupProps, ...rest } = useSliderWeb(\n    props,\n    state,\n    ref,\n    isReversed\n  );\n  let groupProps = mapDomPropsToRN(webGroupProps);\n  let labelProps = mapDomPropsToRN(rest.labelProps);\n  return { groupProps, ...rest, labelProps };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}