{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createContext = createContext;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _excluded = [\"children\"];\nfunction createContext(rootComponentName) {\n  var Context = _react.default.createContext(null);\n  function Provider(props) {\n    var children = props.children,\n      providerProps = (0, _objectWithoutProperties2.default)(props, _excluded);\n    var value = _react.default.useMemo(function () {\n      return providerProps;\n    }, Object.values(providerProps));\n    return _react.default.createElement(Context.Provider, {\n      value: value\n    }, children);\n  }\n  function useContext(consumerName) {\n    var context = _react.default.useContext(Context);\n    if (context === null) {\n      throw new Error(\"`\".concat(consumerName, \"` must be used within `\").concat(rootComponentName, \"`\"));\n    }\n    return context;\n  }\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext];\n}","map":{"version":3,"names":["_react","_interopRequireDefault","require","_excluded","createContext","rootComponentName","Context","React","Provider","props","children","providerProps","_objectWithoutProperties2","default","value","useMemo","Object","values","createElement","useContext","consumerName","context","Error","concat","displayName"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\utils\\createContext.tsx"],"sourcesContent":["import React from 'react';\n\nfunction createContext<ContextValueType extends object>(\n  rootComponentName: string\n) {\n  const Context = React.createContext<ContextValueType>(null as any);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...providerProps } = props;\n    // Only re-memoize when prop values change\n    const value = React.useMemo(\n      () => providerProps,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Object.values(providerProps)\n    ) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context === null) {\n      throw new Error(\n        `\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``\n      );\n    }\n    return context;\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\nexport { createContext };\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAA,IAAAC,SAAA;AAEA,SAASC,aAATA,CACEC,iBADF,EAEE;EACA,IAAMC,OAAO,GAAGC,cAAK,CAACH,aAAN,CAAsC,IAAtC,CAAhB;EAEA,SAASI,QAATA,CAAkBC,KAAlB,EAA2E;IACzE,IAAQC,QAAF,GAAiCD,KAAvC,CAAQC,QAAF;MAAeC,aAAA,OAAAC,yBAAA,CAAAC,OAAA,EAAkBJ,KAAvC,EAAAN,SAAA;IAEA,IAAMW,KAAK,GAAGP,cAAK,CAACQ,OAAN,CACZ;MAAA,OAAMJ,aADM;IAAA,GAGZK,MAAM,CAACC,MAAP,CAAcN,aAAd,CAHY,CAAd;IAKA,OAAOJ,cAAA,CAAAW,aAAA,CAACZ,OAAD,CAASE,QAAT;MAAkBM,KAAK,EAAEA;IAAzB,GAAiCJ,QAAjC,CAAP;EACD;EAED,SAASS,UAATA,CAAoBC,YAApB,EAA0C;IACxC,IAAMC,OAAO,GAAGd,cAAK,CAACY,UAAN,CAAiBb,OAAjB,CAAhB;IACA,IAAIe,OAAO,KAAK,IAAhB,EAAsB;MACpB,MAAM,IAAIC,KAAJ,KAAAC,MAAA,CACCH,YADD,6BAAAG,MAAA,CACyClB,iBADzC,OAAN;IAGD;IACD,OAAOgB,OAAP;EACD;EAEDb,QAAQ,CAACgB,WAAT,GAAuBnB,iBAAiB,GAAG,UAA3C;EACA,OAAO,CAACG,QAAD,EAAWW,UAAX,CAAP;AACD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}