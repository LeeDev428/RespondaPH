{"ast":null,"code":"var _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar $ecn6s$react = require(\"react\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useControlledState\", function () {\n  return $8d8fdfab47455712$export$40bfa8c7b0832715;\n});\nfunction $8d8fdfab47455712$export$40bfa8c7b0832715(value, defaultValue, onChange) {\n  var _ref = (0, $ecn6s$react.useState)(value || defaultValue),\n    _ref2 = _slicedToArray(_ref, 2),\n    stateValue = _ref2[0],\n    setStateValue = _ref2[1];\n  var isControlledRef = (0, $ecn6s$react.useRef)(value !== undefined);\n  var isControlled = value !== undefined;\n  (0, $ecn6s$react.useEffect)(function () {\n    var wasControlled = isControlledRef.current;\n    if (wasControlled !== isControlled && process.env.NODE_ENV !== 'production') console.warn(`WARN: A component changed from ${wasControlled ? 'controlled' : 'uncontrolled'} to ${isControlled ? 'controlled' : 'uncontrolled'}.`);\n    isControlledRef.current = isControlled;\n  }, [isControlled]);\n  var currentValue = isControlled ? value : stateValue;\n  var setValue = (0, $ecn6s$react.useCallback)(function (value) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    var onChangeCaller = function onChangeCaller(value) {\n      if (onChange) {\n        for (var _len2 = arguments.length, onChangeArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          onChangeArgs[_key2 - 1] = arguments[_key2];\n        }\n        if (!Object.is(currentValue, value)) onChange.apply(void 0, [value].concat(onChangeArgs));\n      }\n      if (!isControlled) currentValue = value;\n    };\n    if (typeof value === 'function') {\n      if (process.env.NODE_ENV !== 'production') console.warn('We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320');\n      var updateFunction = function updateFunction(oldValue) {\n        for (var _len3 = arguments.length, functionArgs = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n          functionArgs[_key3 - 1] = arguments[_key3];\n        }\n        var interceptedValue = value.apply(void 0, [isControlled ? currentValue : oldValue].concat(functionArgs));\n        onChangeCaller.apply(void 0, [interceptedValue].concat(args));\n        if (!isControlled) return interceptedValue;\n        return oldValue;\n      };\n      setStateValue(updateFunction);\n    } else {\n      if (!isControlled) setStateValue(value);\n      onChangeCaller.apply(void 0, [value].concat(args));\n    }\n  }, [isControlled, currentValue, onChange]);\n  return [currentValue, setValue];\n}","map":{"version":3,"names":["$8d8fdfab47455712$export$40bfa8c7b0832715","value","defaultValue","onChange","_ref","$ecn6s$react","useState","_ref2","_slicedToArray","stateValue","setStateValue","isControlledRef","useRef","undefined","isControlled","useEffect","wasControlled","current","process","env","NODE_ENV","console","warn","currentValue","setValue","useCallback","_len","arguments","length","args","Array","_key","onChangeCaller","_len2","onChangeArgs","_key2","Object","is","apply","concat","updateFunction","oldValue","_len3","functionArgs","_key3","interceptedValue"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-stately\\utils\\dist\\packages\\@react-stately\\utils\\src\\useControlledState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useEffect, useRef, useState} from 'react';\n\nexport function useControlledState<T, C = T>(value: Exclude<T, undefined>, defaultValue: Exclude<T, undefined> | undefined, onChange?: (v: C, ...args: any[]) => void): [T, (value: T, ...args: any[]) => void];\nexport function useControlledState<T, C = T>(value: Exclude<T, undefined> | undefined, defaultValue: Exclude<T, undefined>, onChange?: (v: C, ...args: any[]) => void): [T, (value: T, ...args: any[]) => void];\nexport function useControlledState<T, C = T>(value: T, defaultValue: T, onChange?: (v: C, ...args: any[]) => void): [T, (value: T, ...args: any[]) => void] {\n  let [stateValue, setStateValue] = useState(value || defaultValue);\n\n  let isControlledRef = useRef(value !== undefined);\n  let isControlled = value !== undefined;\n  useEffect(() => {\n    let wasControlled = isControlledRef.current;\n    if (wasControlled !== isControlled && process.env.NODE_ENV !== 'production') {\n      console.warn(`WARN: A component changed from ${wasControlled ? 'controlled' : 'uncontrolled'} to ${isControlled ? 'controlled' : 'uncontrolled'}.`);\n    }\n    isControlledRef.current = isControlled;\n  }, [isControlled]);\n\n  let currentValue = isControlled ? value : stateValue;\n  let setValue = useCallback((value, ...args) => {\n    let onChangeCaller = (value, ...onChangeArgs) => {\n      if (onChange) {\n        if (!Object.is(currentValue, value)) {\n          onChange(value, ...onChangeArgs);\n        }\n      }\n      if (!isControlled) {\n        // If uncontrolled, mutate the currentValue local variable so that\n        // calling setState multiple times with the same value only emits onChange once.\n        // We do not use a ref for this because we specifically _do_ want the value to\n        // reset every render, and assigning to a ref in render breaks aborted suspended renders.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        currentValue = value;\n      }\n    };\n\n    if (typeof value === 'function') {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320');\n      }\n      // this supports functional updates https://reactjs.org/docs/hooks-reference.html#functional-updates\n      // when someone using useControlledState calls setControlledState(myFunc)\n      // this will call our useState setState with a function as well which invokes myFunc and calls onChange with the value from myFunc\n      // if we're in an uncontrolled state, then we also return the value of myFunc which to setState looks as though it was just called with myFunc from the beginning\n      // otherwise we just return the controlled value, which won't cause a rerender because React knows to bail out when the value is the same\n      let updateFunction = (oldValue, ...functionArgs) => {\n        let interceptedValue = value(isControlled ? currentValue : oldValue, ...functionArgs);\n        onChangeCaller(interceptedValue, ...args);\n        if (!isControlled) {\n          return interceptedValue;\n        }\n        return oldValue;\n      };\n      setStateValue(updateFunction);\n    } else {\n      if (!isControlled) {\n        setStateValue(value);\n      }\n      onChangeCaller(value, ...args);\n    }\n  }, [isControlled, currentValue, onChange]);\n\n  return [currentValue, setValue];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}