{"ast":null,"code":"var $b6837c2f80a3c32f$exports = require(\"./useSelectableCollection.main.js\");\nvar $836f880b12dcae5c$exports = require(\"./ListKeyboardDelegate.main.js\");\nvar $lm2JY$reactariai18n = require(\"@react-aria/i18n\");\nvar $lm2JY$react = require(\"react\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useSelectableList\", function () {\n  return $bd230acee196f50c$export$b95089534ab7c1fd;\n});\nfunction $bd230acee196f50c$export$b95089534ab7c1fd(props) {\n  var selectionManager = props.selectionManager,\n    collection = props.collection,\n    disabledKeys = props.disabledKeys,\n    ref = props.ref,\n    keyboardDelegate = props.keyboardDelegate,\n    layoutDelegate = props.layoutDelegate;\n  var collator = (0, $lm2JY$reactariai18n.useCollator)({\n    usage: 'search',\n    sensitivity: 'base'\n  });\n  var disabledBehavior = selectionManager.disabledBehavior;\n  var delegate = (0, $lm2JY$react.useMemo)(function () {\n    return keyboardDelegate || new (0, $836f880b12dcae5c$exports.ListKeyboardDelegate)({\n      collection: collection,\n      disabledKeys: disabledKeys,\n      disabledBehavior: disabledBehavior,\n      ref: ref,\n      collator: collator,\n      layoutDelegate: layoutDelegate\n    });\n  }, [keyboardDelegate, layoutDelegate, collection, disabledKeys, ref, collator, disabledBehavior]);\n  var _ref = (0, $b6837c2f80a3c32f$exports.useSelectableCollection)(Object.assign({}, props, {\n      ref: ref,\n      selectionManager: selectionManager,\n      keyboardDelegate: delegate\n    })),\n    collectionProps = _ref.collectionProps;\n  return {\n    listProps: collectionProps\n  };\n}","map":{"version":3,"names":["$bd230acee196f50c$export$b95089534ab7c1fd","props","selectionManager","collection","disabledKeys","ref","keyboardDelegate","layoutDelegate","collator","$lm2JY$reactariai18n","useCollator","usage","sensitivity","disabledBehavior","delegate","$lm2JY$react","useMemo","$836f880b12dcae5c$exports","ListKeyboardDelegate","_ref","$b6837c2f80a3c32f$exports","useSelectableCollection","Object","assign","collectionProps","listProps"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\selection\\dist\\packages\\@react-aria\\selection\\src\\useSelectableList.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaSelectableCollectionOptions, useSelectableCollection} from './useSelectableCollection';\nimport {Collection, DOMAttributes, Key, KeyboardDelegate, LayoutDelegate, Node} from '@react-types/shared';\nimport {ListKeyboardDelegate} from './ListKeyboardDelegate';\nimport {useCollator} from '@react-aria/i18n';\nimport {useMemo} from 'react';\n\nexport interface AriaSelectableListOptions extends Omit<AriaSelectableCollectionOptions, 'keyboardDelegate'> {\n  /**\n   * State of the collection.\n   */\n  collection: Collection<Node<unknown>>,\n  /**\n   * A delegate object that implements behavior for keyboard focus movement.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * A delegate object that provides layout information for items in the collection.\n   * By default this uses the DOM, but this can be overridden to implement things like\n   * virtualized scrolling.\n   */\n  layoutDelegate?: LayoutDelegate,\n  /**\n   * The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\n   */\n  disabledKeys: Set<Key>\n}\n\nexport interface SelectableListAria {\n  /**\n   * Props for the option element.\n   */\n  listProps: DOMAttributes\n}\n\n/**\n * Handles interactions with a selectable list.\n */\nexport function useSelectableList(props: AriaSelectableListOptions): SelectableListAria {\n  let {\n    selectionManager,\n    collection,\n    disabledKeys,\n    ref,\n    keyboardDelegate,\n    layoutDelegate\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let disabledBehavior = selectionManager.disabledBehavior;\n  let delegate = useMemo(() => (\n    keyboardDelegate || new ListKeyboardDelegate({\n      collection,\n      disabledKeys,\n      disabledBehavior,\n      ref,\n      collator,\n      layoutDelegate\n    })\n  ), [keyboardDelegate, layoutDelegate, collection, disabledKeys, ref, collator, disabledBehavior]);\n\n  let {collectionProps} = useSelectableCollection({\n    ...props,\n    ref,\n    selectionManager,\n    keyboardDelegate: delegate\n  });\n\n  return {\n    listProps: collectionProps\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;AAiDO,SAASA,0CAAkBC,KAAgC;EAChE,IACEC,gBAAgB,GAMdD,KAAA,CAPAC,gBAAA;IAEFC,UAAU,GAKRF,KAAA,CANcE,UAAA;IAEhBC,YAAY,GAIVH,KAAA,CALQG,YAAA;IAEVC,GAAG,GAGDJ,KAAA,CAJUI,GAAA;IAEZC,gBAAgB,GAEdL,KAAA,CAHCK,gBAAA;IAEHC,cAAc,GACZN,KAAA,CAFcM,cAAA;EAMlB,IAAIC,QAAA,GAAW,IAAAC,oBAAA,CAAAC,WAAU,EAAE;IAACC,KAAA,EAAO;IAAUC,WAAA,EAAa;EAAM;EAChE,IAAIC,gBAAA,GAAmBX,gBAAA,CAAiBW,gBAAgB;EACxD,IAAIC,QAAA,GAAW,IAAAC,YAAA,CAAAC,OAAM,EAAE;IAAA,OACrBV,gBAAA,IAAoB,KAAI,GAAAW,yBAAA,CAAAC,oBAAmB,EAAE;kBAC3Cf,UAAA;oBACAC,YAAA;wBACAS,gBAAA;WACAR,GAAA;gBACAG,QAAA;sBACAD;IACF;EAAA,GACC,CAACD,gBAAA,EAAkBC,cAAA,EAAgBJ,UAAA,EAAYC,YAAA,EAAcC,GAAA,EAAKG,QAAA,EAAUK,gBAAA,CAAiB;EAEhG,IAAAM,IAAA,GAAwB,IAAAC,yBAAA,CAAAC,uBAAsB,EAAAC,MAAA,CAAAC,MAAA,KACzCtB,KAAK;WACRI,GAAA;wBACAH,gBAAA;MACAI,gBAAA,EAAkBQ;IAAA,EACpB;IALKU,eAAe,GAAAL,IAAA,CAAhBK,eAAA;EAOJ,OAAO;IACLC,SAAA,EAAWD;EACb;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}