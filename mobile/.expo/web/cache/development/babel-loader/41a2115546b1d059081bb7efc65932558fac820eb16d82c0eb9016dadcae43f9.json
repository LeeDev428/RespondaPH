{"ast":null,"code":"var _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar _excluded = [\"portalContainer\"];\nvar $d7347c25ab757295$exports = require(\"./PortalProvider.main.js\");\nvar $btuAB$react = require(\"react\");\nvar $btuAB$reactdom = require(\"react-dom\");\nvar $btuAB$reactariassr = require(\"@react-aria/ssr\");\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"ModalProvider\", function () {\n  return $0775ea8ea6a0565e$export$178405afcd8c5eb;\n});\n$parcel$export(module.exports, \"useModalProvider\", function () {\n  return $0775ea8ea6a0565e$export$d9aaed4c3ece1bc0;\n});\n$parcel$export(module.exports, \"OverlayProvider\", function () {\n  return $0775ea8ea6a0565e$export$bf688221f59024e5;\n});\n$parcel$export(module.exports, \"OverlayContainer\", function () {\n  return $0775ea8ea6a0565e$export$b47c3594eab58386;\n});\n$parcel$export(module.exports, \"useModal\", function () {\n  return $0775ea8ea6a0565e$export$33ffd74ebf07f060;\n});\nvar $0775ea8ea6a0565e$var$Context = (0, $parcel$interopDefault($btuAB$react)).createContext(null);\nfunction $0775ea8ea6a0565e$export$178405afcd8c5eb(props) {\n  var children = props.children;\n  var parent = (0, $btuAB$react.useContext)($0775ea8ea6a0565e$var$Context);\n  var _ref = (0, $btuAB$react.useState)(0),\n    _ref2 = _slicedToArray(_ref, 2),\n    modalCount = _ref2[0],\n    setModalCount = _ref2[1];\n  var context = (0, $btuAB$react.useMemo)(function () {\n    return {\n      parent: parent,\n      modalCount: modalCount,\n      addModal: function addModal() {\n        setModalCount(function (count) {\n          return count + 1;\n        });\n        if (parent) parent.addModal();\n      },\n      removeModal: function removeModal() {\n        setModalCount(function (count) {\n          return count - 1;\n        });\n        if (parent) parent.removeModal();\n      }\n    };\n  }, [parent, modalCount]);\n  return (0, $parcel$interopDefault($btuAB$react)).createElement($0775ea8ea6a0565e$var$Context.Provider, {\n    value: context\n  }, children);\n}\nfunction $0775ea8ea6a0565e$export$d9aaed4c3ece1bc0() {\n  var context = (0, $btuAB$react.useContext)($0775ea8ea6a0565e$var$Context);\n  return {\n    modalProviderProps: {\n      'aria-hidden': context && context.modalCount > 0 ? true : undefined\n    }\n  };\n}\nfunction $0775ea8ea6a0565e$var$OverlayContainerDOM(props) {\n  var _$0775ea8ea6a0565e$ex = $0775ea8ea6a0565e$export$d9aaed4c3ece1bc0(),\n    modalProviderProps = _$0775ea8ea6a0565e$ex.modalProviderProps;\n  return (0, $parcel$interopDefault($btuAB$react)).createElement(\"div\", Object.assign({\n    \"data-overlay-container\": true\n  }, props, modalProviderProps));\n}\nfunction $0775ea8ea6a0565e$export$bf688221f59024e5(props) {\n  return (0, $parcel$interopDefault($btuAB$react)).createElement($0775ea8ea6a0565e$export$178405afcd8c5eb, null, (0, $parcel$interopDefault($btuAB$react)).createElement($0775ea8ea6a0565e$var$OverlayContainerDOM, props));\n}\nfunction $0775ea8ea6a0565e$export$b47c3594eab58386(props) {\n  var isSSR = (0, $btuAB$reactariassr.useIsSSR)();\n  var _props$portalContaine = props.portalContainer,\n    portalContainer = _props$portalContaine === void 0 ? isSSR ? null : document.body : _props$portalContaine,\n    rest = _objectWithoutProperties(props, _excluded);\n  var _ref3 = (0, $d7347c25ab757295$exports.useUNSAFE_PortalContext)(),\n    getContainer = _ref3.getContainer;\n  if (!props.portalContainer && getContainer) portalContainer = getContainer();\n  (0, $parcel$interopDefault($btuAB$react)).useEffect(function () {\n    if (portalContainer === null || portalContainer === void 0 ? void 0 : portalContainer.closest('[data-overlay-container]')) throw new Error('An OverlayContainer must not be inside another container. Please change the portalContainer prop.');\n  }, [portalContainer]);\n  if (!portalContainer) return null;\n  var contents = (0, $parcel$interopDefault($btuAB$react)).createElement($0775ea8ea6a0565e$export$bf688221f59024e5, rest);\n  return (0, $parcel$interopDefault($btuAB$reactdom)).createPortal(contents, portalContainer);\n}\nfunction $0775ea8ea6a0565e$export$33ffd74ebf07f060(options) {\n  var context = (0, $btuAB$react.useContext)($0775ea8ea6a0565e$var$Context);\n  if (!context) throw new Error('Modal is not contained within a provider');\n  (0, $btuAB$react.useEffect)(function () {\n    if ((options === null || options === void 0 ? void 0 : options.isDisabled) || !context || !context.parent) return;\n    context.parent.addModal();\n    return function () {\n      if (context && context.parent) context.parent.removeModal();\n    };\n  }, [context, context.parent, options === null || options === void 0 ? void 0 : options.isDisabled]);\n  return {\n    modalProps: {\n      'data-ismodal': !(options === null || options === void 0 ? void 0 : options.isDisabled)\n    }\n  };\n}","map":{"version":3,"names":["$0775ea8ea6a0565e$var$Context","$parcel$interopDefault","$btuAB$react","createContext","$0775ea8ea6a0565e$export$178405afcd8c5eb","props","children","parent","useContext","_ref","useState","_ref2","_slicedToArray","modalCount","setModalCount","context","useMemo","addModal","count","removeModal","createElement","Provider","value","$0775ea8ea6a0565e$export$d9aaed4c3ece1bc0","modalProviderProps","undefined","$0775ea8ea6a0565e$var$OverlayContainerDOM","_$0775ea8ea6a0565e$ex","Object","assign","$0775ea8ea6a0565e$export$bf688221f59024e5","$0775ea8ea6a0565e$export$b47c3594eab58386","isSSR","$btuAB$reactariassr","useIsSSR","_props$portalContaine","portalContainer","document","body","rest","_objectWithoutProperties","_excluded","_ref3","$d7347c25ab757295$exports","useUNSAFE_PortalContext","getContainer","useEffect","closest","Error","contents","$btuAB$reactdom","createPortal","$0775ea8ea6a0565e$export$33ffd74ebf07f060","options","isDisabled","modalProps"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\overlays\\dist\\packages\\@react-aria\\overlays\\src\\useModal.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport React, {AriaAttributes, JSX, ReactNode, useContext, useEffect, useMemo, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useIsSSR} from '@react-aria/ssr';\nimport {useUNSAFE_PortalContext} from './PortalProvider';\n\nexport interface ModalProviderProps extends DOMAttributes {\n  children: ReactNode\n}\n\ninterface ModalContext {\n  parent: ModalContext | null,\n  modalCount: number,\n  addModal: () => void,\n  removeModal: () => void\n}\n\nconst Context = React.createContext<ModalContext | null>(null);\n\n/**\n * Each ModalProvider tracks how many modals are open in its subtree. On mount, the modals\n * trigger `addModal` to increment the count, and trigger `removeModal` on unmount to decrement it.\n * This is done recursively so that all parent providers are incremented and decremented.\n * If the modal count is greater than zero, we add `aria-hidden` to this provider to hide its\n * subtree from screen readers. This is done using React context in order to account for things\n * like portals, which can cause the React tree and the DOM tree to differ significantly in structure.\n */\nexport function ModalProvider(props: ModalProviderProps): JSX.Element {\n  let {children} = props;\n  let parent = useContext(Context);\n  let [modalCount, setModalCount] = useState(0);\n  let context = useMemo(() => ({\n    parent,\n    modalCount,\n    addModal() {\n      setModalCount(count => count + 1);\n      if (parent) {\n        parent.addModal();\n      }\n    },\n    removeModal() {\n      setModalCount(count => count - 1);\n      if (parent) {\n        parent.removeModal();\n      }\n    }\n  }), [parent, modalCount]);\n\n  return (\n    <Context.Provider value={context}>\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport interface ModalProviderAria {\n  /**\n   * Props to be spread on the container element.\n   */\n  modalProviderProps: AriaAttributes\n}\n\n/**\n * Used to determine if the tree should be aria-hidden based on how many\n * modals are open.\n */\nexport function useModalProvider(): ModalProviderAria {\n  let context = useContext(Context);\n  return {\n    modalProviderProps: {\n      'aria-hidden': context && context.modalCount > 0 ? true : undefined\n    }\n  };\n}\n\n/**\n * Creates a root node that will be aria-hidden if there are other modals open.\n */\nfunction OverlayContainerDOM(props: ModalProviderProps) {\n  let {modalProviderProps} = useModalProvider();\n  return <div data-overlay-container {...props} {...modalProviderProps} />;\n}\n\n/**\n * An OverlayProvider acts as a container for the top-level application.\n * Any application that uses modal dialogs or other overlays should\n * be wrapped in a `<OverlayProvider>`. This is used to ensure that\n * the main content of the application is hidden from screen readers\n * if a modal or other overlay is opened. Only the top-most modal or\n * overlay should be accessible at once.\n */\nexport function OverlayProvider(props: ModalProviderProps): JSX.Element {\n  return (\n    <ModalProvider>\n      <OverlayContainerDOM {...props} />\n    </ModalProvider>\n  );\n}\n\nexport interface OverlayContainerProps extends ModalProviderProps {\n  /**\n   * The container element in which the overlay portal will be placed.\n   * @default document.body\n   * @deprecated - Use a parent UNSAFE_PortalProvider to set your portal container instead.\n   */\n  portalContainer?: Element\n}\n\n/**\n * A container for overlays like modals and popovers. Renders the overlay\n * into a Portal which is placed at the end of the document body.\n * Also ensures that the overlay is hidden from screen readers if a\n * nested modal is opened. Only the top-most modal or overlay should\n * be accessible at once.\n */\nexport function OverlayContainer(props: OverlayContainerProps): React.ReactPortal | null {\n  let isSSR = useIsSSR();\n  let {portalContainer = isSSR ? null : document.body, ...rest} = props;\n  let {getContainer} = useUNSAFE_PortalContext();\n  if (!props.portalContainer && getContainer) {\n    portalContainer = getContainer();\n  }\n\n  React.useEffect(() => {\n    if (portalContainer?.closest('[data-overlay-container]')) {\n      throw new Error('An OverlayContainer must not be inside another container. Please change the portalContainer prop.');\n    }\n  }, [portalContainer]);\n\n  if (!portalContainer) {\n    return null;\n  }\n\n  let contents = <OverlayProvider {...rest} />;\n  return ReactDOM.createPortal(contents, portalContainer);\n}\n\ninterface ModalAriaProps extends DOMAttributes {\n  /** Data attribute marks the dom node as a modal for the aria-modal-polyfill. */\n  'data-ismodal': boolean\n}\n\nexport interface AriaModalOptions {\n  isDisabled?: boolean\n}\n\nexport interface ModalAria {\n  /** Props for the modal content element. */\n  modalProps: ModalAriaProps\n}\n\n/**\n * Hides content outside the current `<OverlayContainer>` from screen readers\n * on mount and restores it on unmount. Typically used by modal dialogs and\n * other types of overlays to ensure that only the top-most modal is\n * accessible at once.\n */\nexport function useModal(options?: AriaModalOptions): ModalAria {\n  // Add aria-hidden to all parent providers on mount, and restore on unmount.\n  let context = useContext(Context);\n  if (!context) {\n    throw new Error('Modal is not contained within a provider');\n  }\n\n  useEffect(() => {\n    if (options?.isDisabled || !context || !context.parent) {\n      return;\n    }\n\n    // The immediate context is from the provider containing this modal, so we only\n    // want to trigger aria-hidden on its parents not on the modal provider itself.\n    context.parent.addModal();\n    return () => {\n      if (context && context.parent) {\n        context.parent.removeModal();\n      }\n    };\n  }, [context, context.parent, options?.isDisabled]);\n\n  return {\n    modalProps: {\n      'data-ismodal': !options?.isDisabled\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}