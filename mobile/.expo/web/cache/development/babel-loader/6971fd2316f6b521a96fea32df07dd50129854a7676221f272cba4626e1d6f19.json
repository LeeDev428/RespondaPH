{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLink = useLink;\nvar _reactNative = require(\"react-native\");\nvar linkToHREF = function linkToHREF(URL) {\n  _reactNative.Linking.openURL(URL).catch(function (err) {\n    return console.error('An error occurred', err);\n  });\n};\nvar addOnPressFunctionality = function addOnPressFunctionality(href, callback) {\n  href ? linkToHREF(href) : '';\n  callback ? callback() : function () {};\n};\nfunction useLink(props) {\n  var href = props.href,\n    isExternal = props.isExternal,\n    _onPress = props.onPress,\n    _ref = props._ref;\n  var platformLinkProps = {};\n  if (_reactNative.Platform.OS === 'web') {\n    platformLinkProps = {\n      href: href,\n      onClick: _onPress\n    };\n    if (isExternal && _ref.current) {\n      _ref.current.target = '_blank';\n    }\n  } else {\n    platformLinkProps = {\n      onPress: function onPress() {\n        addOnPressFunctionality(href, _onPress);\n      }\n    };\n  }\n  return {\n    linkProps: Object.assign({}, platformLinkProps, {\n      accessibilityRole: 'link',\n      accessible: true\n    })\n  };\n}","map":{"version":3,"names":["_reactNative","require","linkToHREF","URL","Linking","openURL","catch","err","console","error","addOnPressFunctionality","href","callback","useLink","props","isExternal","onPress","_ref","platformLinkProps","Platform","OS","onClick","current","target","linkProps","Object","assign","accessibilityRole","accessible"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\components\\primitives\\Link\\useLink.ts"],"sourcesContent":["import { Linking, Platform } from 'react-native';\nimport type { IUseLinkProp } from './types';\nimport type { AccessibilityRole } from 'react-native';\n\nconst linkToHREF = (URL: string) => {\n  Linking.openURL(URL).catch((err) => console.error('An error occurred', err));\n};\n\nconst addOnPressFunctionality = (href: string | any, callback: any) => {\n  href ? linkToHREF(href) : '';\n  callback ? callback() : () => {};\n};\n\nexport function useLink(props: IUseLinkProp) {\n  const { href, isExternal, onPress, _ref } = props;\n\n  let platformLinkProps = {};\n\n  if (Platform.OS === 'web') {\n    platformLinkProps = {\n      href,\n      onClick: onPress,\n    };\n    // Adding target to a tag created by RN-Web\n    if (isExternal && _ref.current) {\n      _ref.current.target = '_blank';\n    }\n  } else {\n    platformLinkProps = {\n      onPress: () => {\n        addOnPressFunctionality(href, onPress);\n      },\n    };\n  }\n\n  return {\n    linkProps: {\n      ...platformLinkProps,\n      accessibilityRole: 'link' as AccessibilityRole,\n      accessible: true,\n    },\n  };\n}\n"],"mappings":";;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAIA,IAAMC,UAAU,GAAI,SAAdA,UAAUA,CAAIC,GAAD,EAAiB;EAClCC,oBAAO,CAACC,OAAR,CAAgBF,GAAhB,EAAqBG,KAArB,CAA4B,UAAAC,GAAD;IAAA,OAASC,OAAO,CAACC,KAAR,CAAc,mBAAd,EAAmCF,GAAnC,CAApC;EAAA;AACD,CAFD;AAIA,IAAMG,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAIC,IAAD,EAAqBC,QAArB,EAAuC;EACrED,IAAI,GAAGT,UAAU,CAACS,IAAD,CAAb,GAAsB,EAA1B;EACAC,QAAQ,GAAGA,QAAQ,EAAX,GAAgB,YAAM,CAAE,CAAhC;AACD,CAHD;AAKO,SAASC,OAATA,CAAiBC,KAAjB,EAAsC;EAC3C,IAAQH,IAAF,GAAsCG,KAA5C,CAAQH,IAAF;IAAQI,UAAR,GAAsCD,KAA5C,CAAcC,UAAR;IAAoBC,QAApB,GAAsCF,KAA5C,CAA0BE,OAApB;IAA6BC,IAAA,GAASH,KAA5C,CAAmCG,IAAA;EAEnC,IAAIC,iBAAiB,GAAG,EAAxB;EAEA,IAAIC,qBAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;IACzBF,iBAAiB,GAAG;MAClBP,IADkB,EAClBA,IADkB;MAElBU,OAAO,EAAEL;IAFS,CAApB;IAKA,IAAID,UAAU,IAAIE,IAAI,CAACK,OAAvB,EAAgC;MAC9BL,IAAI,CAACK,OAAL,CAAaC,MAAb,GAAsB,QAAtB;IACD;EACF,CATD,MASO;IACLL,iBAAiB,GAAG;MAClBF,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;QACbN,uBAAuB,CAACC,IAAD,EAAOK,QAAP,CAAvB;MACD;IAHiB,CAApB;EAKD;EAED,OAAO;IACLQ,SAAS,EAAAC,MAAA,CAAAC,MAAA,KACJR,iBADM;MAETS,iBAAiB,EAAE,MAFV;MAGTC,UAAU,EAAE;IAAA;EAJT,CAAP;AAOD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}