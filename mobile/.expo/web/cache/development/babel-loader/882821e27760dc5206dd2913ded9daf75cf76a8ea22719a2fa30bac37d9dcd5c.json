{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PopoverContent = void 0;\nvar _hooks = require(\"../../../hooks\");\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _Popper = require(\"../Popper\");\nvar _PopoverContext = require(\"./PopoverContext\");\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar PopoverContent = exports.PopoverContent = _react.default.forwardRef(function (props, ref) {\n  var _ref, _ref2, _props$bgColor;\n  var _React$useContext = _react.default.useContext(_PopoverContext.PopoverContext),\n    onClose = _React$useContext.onClose,\n    initialFocusRef = _React$useContext.initialFocusRef,\n    finalFocusRef = _React$useContext.finalFocusRef,\n    popoverContentId = _React$useContext.popoverContentId,\n    headerMounted = _React$useContext.headerMounted,\n    bodyMounted = _React$useContext.bodyMounted,\n    bodyId = _React$useContext.bodyId,\n    headerId = _React$useContext.headerId,\n    isOpen = _React$useContext.isOpen;\n  var resolvedProps = (0, _hooks.usePropsResolution)('PopoverContent', props);\n  var arrowDefaultColor = (_ref = (_ref2 = (_props$bgColor = props.bgColor) !== null && _props$bgColor !== void 0 ? _props$bgColor : props.bg) !== null && _ref2 !== void 0 ? _ref2 : props.backgroundColor) !== null && _ref !== void 0 ? _ref : resolvedProps.backgroundColor;\n  var color = (0, _hooks.useToken)('colors', arrowDefaultColor);\n  _react.default.useEffect(function () {\n    var finalFocusRefCurrentVal = finalFocusRef === null || finalFocusRef === void 0 ? void 0 : finalFocusRef.current;\n    if (initialFocusRef && initialFocusRef.current) {\n      initialFocusRef.current.focus();\n    }\n    return function () {\n      if (finalFocusRefCurrentVal) {\n        finalFocusRefCurrentVal.focus();\n      }\n    };\n  }, [finalFocusRef, initialFocusRef]);\n  (0, _hooks.useKeyboardDismissable)({\n    enabled: true,\n    callback: onClose\n  });\n  var arrowElement = null;\n  var restChildren = [];\n  _react.default.Children.toArray(props.children).forEach(function (child) {\n    var _child$type;\n    if ((child === null || child === void 0 ? void 0 : (_child$type = child.type) === null || _child$type === void 0 ? void 0 : _child$type.displayName) === 'PopperArrow') {\n      var _child$props$color;\n      arrowElement = _react.default.cloneElement(child, {\n        backgroundColor: (_child$props$color = child.props.color) !== null && _child$props$color !== void 0 ? _child$props$color : color\n      });\n    } else {\n      restChildren.push(child);\n    }\n  });\n  var accessibilityProps = _reactNative.Platform.OS === 'web' ? {\n    'accessibilityRole': 'dialog',\n    'aria-labelledby': headerMounted ? headerId : undefined,\n    'aria-describedby': bodyMounted ? bodyId : undefined\n  } : {};\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n  return _react.default.createElement(_Popper.Popper.Content, _extends({\n    nativeID: popoverContentId\n  }, accessibilityProps, resolvedProps, {\n    ref: ref,\n    isOpen: isOpen\n  }), arrowElement, restChildren);\n});\nPopoverContent.displayName = 'PopoverContent';","map":{"version":3,"names":["_hooks","require","_react","_interopRequireDefault","_reactNative","_Popper","_PopoverContext","_useHasResponsiveProps","PopoverContent","exports","React","forwardRef","props","ref","_ref","_ref2","_props$bgColor","_React$useContext","useContext","PopoverContext","onClose","initialFocusRef","finalFocusRef","popoverContentId","headerMounted","bodyMounted","bodyId","headerId","isOpen","resolvedProps","usePropsResolution","arrowDefaultColor","bgColor","bg","backgroundColor","color","useToken","useEffect","finalFocusRefCurrentVal","current","focus","useKeyboardDismissable","enabled","callback","arrowElement","restChildren","Children","toArray","children","forEach","child","_child$type","type","displayName","_child$props$color","cloneElement","push","accessibilityProps","Platform","OS","undefined","useHasResponsiveProps","createElement","Popper","Content","_extends","nativeID"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\components\\composites\\Popover\\PopoverContent.tsx"],"sourcesContent":["import {\n  useKeyboardDismissable,\n  usePropsResolution,\n  useToken,\n} from '../../../hooks';\nimport React from 'react';\nimport { Platform } from 'react-native';\nimport type { IPopoverContentProps } from './types';\nimport { Popper } from '../Popper';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const PopoverContent = React.forwardRef(\n  (props: IPopoverContentProps, ref: any) => {\n    const {\n      onClose,\n      initialFocusRef,\n      finalFocusRef,\n      popoverContentId,\n      headerMounted,\n      bodyMounted,\n      bodyId,\n      headerId,\n      isOpen,\n    } = React.useContext(PopoverContext);\n    const resolvedProps = usePropsResolution('PopoverContent', props);\n\n    const arrowDefaultColor =\n      props.bgColor ??\n      props.bg ??\n      props.backgroundColor ??\n      resolvedProps.backgroundColor;\n    const color = useToken('colors', arrowDefaultColor);\n\n    React.useEffect(() => {\n      const finalFocusRefCurrentVal = finalFocusRef?.current;\n      if (initialFocusRef && initialFocusRef.current) {\n        initialFocusRef.current.focus();\n      }\n\n      return () => {\n        if (finalFocusRefCurrentVal) {\n          finalFocusRefCurrentVal.focus();\n        }\n      };\n    }, [finalFocusRef, initialFocusRef]);\n\n    useKeyboardDismissable({\n      enabled: true,\n      callback: onClose,\n    });\n\n    let arrowElement = null;\n    const restChildren: any = [];\n    React.Children.toArray(props.children).forEach((child: any) => {\n      if (child?.type?.displayName === 'PopperArrow') {\n        arrowElement = React.cloneElement(child, {\n          backgroundColor: child.props.color ?? color,\n        });\n      } else {\n        restChildren.push(child);\n      }\n    });\n\n    const accessibilityProps =\n      Platform.OS === 'web'\n        ? ({\n            'accessibilityRole': 'dialog',\n            'aria-labelledby': headerMounted ? headerId : undefined,\n            'aria-describedby': bodyMounted ? bodyId : undefined,\n          } as any)\n        : {};\n\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n\n    return (\n      <Popper.Content\n        nativeID={popoverContentId}\n        {...accessibilityProps}\n        {...resolvedProps}\n        ref={ref}\n        isOpen={isOpen}\n      >\n        {arrowElement}\n        {restChildren}\n      </Popper.Content>\n    );\n  }\n);\n\nPopoverContent.displayName = 'PopoverContent';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}