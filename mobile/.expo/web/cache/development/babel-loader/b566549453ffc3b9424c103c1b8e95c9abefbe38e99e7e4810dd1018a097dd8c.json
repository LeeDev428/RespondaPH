{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _primitives = require(\"../../primitives\");\nvar _useThemeProps2 = require(\"../../../hooks/useThemeProps\");\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\nvar _excluded = [\"columns\", \"space\", \"spacingX\", \"spacingY\", \"minChildWidth\", \"children\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar DEBUG_STYLES = false ? {\n  rows: {\n    borderWidth: '1px'\n  },\n  cols: {\n    borderWidth: '1px'\n  }\n} : {\n  rows: {},\n  cols: {}\n};\nvar SimpleGrid = function SimpleGrid(props, ref) {\n  var _useThemeProps = (0, _useThemeProps2.useThemeProps)('SimpleGrid', props),\n    columns = _useThemeProps.columns,\n    space = _useThemeProps.space,\n    spacingX = _useThemeProps.spacingX,\n    spacingY = _useThemeProps.spacingY,\n    minChildWidth = _useThemeProps.minChildWidth,\n    children = _useThemeProps.children,\n    remainingProps = (0, _objectWithoutProperties2.default)(_useThemeProps, _excluded);\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return _react.default.createElement(_react.default.Fragment, null);\n  }\n  var cellSpacing = space !== null && space !== void 0 ? space : 0;\n  var cellSpacingX = spacingX !== null && spacingX !== void 0 ? spacingX : cellSpacing;\n  var cellSpacingY = spacingY !== null && spacingY !== void 0 ? spacingY : cellSpacing;\n  var childrenArray = _react.default.Children.toArray(children);\n  if (columns) {\n    var rowSlices = [];\n    for (var i = 0; i < childrenArray.length; i = i + columns) {\n      rowSlices.push(childrenArray.slice(i, i + columns));\n    }\n    return _react.default.createElement(_primitives.VStack, _extends({}, DEBUG_STYLES.rows, {\n      space: cellSpacingY\n    }, remainingProps, {\n      ref: ref\n    }), rowSlices.map(function (row, rowIndex) {\n      return _react.default.createElement(_primitives.HStack, {\n        space: cellSpacingX,\n        key: rowIndex\n      }, row.map(function (col) {\n        return _react.default.createElement(_primitives.Box, _extends({}, DEBUG_STYLES.cols, {\n          key: col.key\n        }), col);\n      }));\n    }));\n  } else if (minChildWidth) {\n    return _react.default.createElement(_primitives.Box, _extends({\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"center\"\n    }, remainingProps, {\n      ref: ref\n    }), childrenArray.map(function (col) {\n      return _react.default.createElement(_primitives.Box, _extends({}, DEBUG_STYLES.cols, {\n        mx: cellSpacingX,\n        my: cellSpacingY,\n        key: col.key,\n        minWidth: minChildWidth\n      }), col);\n    }));\n  }\n  return _react.default.createElement(_react.default.Fragment, null);\n};\nvar _default = exports.default = _react.default.memo(_react.default.forwardRef(SimpleGrid));","map":{"version":3,"names":["_react","_interopRequireDefault","require","_primitives","_useThemeProps2","_useHasResponsiveProps","_excluded","DEBUG_STYLES","rows","borderWidth","cols","SimpleGrid","props","ref","_useThemeProps","useThemeProps","columns","space","spacingX","spacingY","minChildWidth","children","remainingProps","_objectWithoutProperties2","default","useHasResponsiveProps","React","createElement","Fragment","cellSpacing","cellSpacingX","cellSpacingY","childrenArray","Children","toArray","rowSlices","i","length","push","slice","VStack","_extends","map","row","rowIndex","HStack","key","col","Box","flexDirection","flexWrap","justifyContent","mx","my","minWidth","_default","exports","memo","forwardRef"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\components\\composites\\SimpleGrid\\SimpleGrid.tsx"],"sourcesContent":["import React from 'react';\nimport { Box, HStack, VStack } from '../../primitives';\nimport type { ISimpleGridProps } from './types';\n// const isDebug = process.env.NODE_ENV !== 'production';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst DEBUG_STYLES = false\n  ? {\n      rows: {\n        borderWidth: '1px',\n      },\n      cols: {\n        borderWidth: '1px',\n      },\n    }\n  : {\n      rows: {},\n      cols: {},\n    };\n\nconst SimpleGrid = (props: ISimpleGridProps, ref?: any): JSX.Element => {\n  const {\n    columns,\n    space,\n    spacingX,\n    spacingY,\n    minChildWidth,\n    children,\n    ...remainingProps\n  } = useThemeProps('SimpleGrid', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return <></>;\n  }\n  let cellSpacing = space ?? 0;\n  let cellSpacingX = spacingX ?? cellSpacing;\n  let cellSpacingY = spacingY ?? cellSpacing;\n\n  const childrenArray = React.Children.toArray(children);\n\n  if (columns) {\n    let rowSlices = [];\n    for (let i = 0; i < childrenArray.length; i = i + columns) {\n      rowSlices.push(childrenArray.slice(i, i + columns));\n    }\n\n    return (\n      <VStack\n        {...DEBUG_STYLES.rows}\n        space={cellSpacingY}\n        {...remainingProps}\n        ref={ref}\n      >\n        {rowSlices.map((row, rowIndex) => {\n          return (\n            <HStack space={cellSpacingX} key={rowIndex}>\n              {row.map((col: any) => {\n                return (\n                  <Box {...DEBUG_STYLES.cols} key={col.key}>\n                    {col}\n                  </Box>\n                );\n              })}\n            </HStack>\n          );\n        })}\n      </VStack>\n    );\n  }\n  // Needs more work for empty spacing i.e. auto-fit. Current workaround is to use wrap and let the columns be created dynamically\n  // https://css-tricks.com/auto-sizing-columns-css-grid-auto-fill-vs-auto-fit/\n  else if (minChildWidth) {\n    return (\n      <Box\n        flexDirection=\"row\"\n        flexWrap=\"wrap\"\n        justifyContent=\"center\"\n        {...remainingProps}\n        ref={ref}\n      >\n        {childrenArray.map((col: any) => {\n          return (\n            <Box\n              {...DEBUG_STYLES.cols}\n              mx={cellSpacingX}\n              my={cellSpacingY}\n              key={col.key}\n              minWidth={minChildWidth}\n            >\n              {col}\n            </Box>\n          );\n        })}\n      </Box>\n    );\n  }\n\n  return <></>;\n};\nexport default React.memo(React.forwardRef(SimpleGrid));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}