{"ast":null,"code":"var _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar $euGna$reactariautils = require(\"@react-aria/utils\");\nvar $euGna$reactariainteractions = require(\"@react-aria/interactions\");\nvar $euGna$react = require(\"react\");\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"FocusScope\", function () {\n  return $a7a032acae3ddda9$export$20e40289641fbbb6;\n});\n$parcel$export(module.exports, \"useFocusManager\", function () {\n  return $a7a032acae3ddda9$export$10c5169755ce7bd7;\n});\n$parcel$export(module.exports, \"getFocusableTreeWalker\", function () {\n  return $a7a032acae3ddda9$export$2d6ec8fc375ceafa;\n});\n$parcel$export(module.exports, \"isElementInChildOfActiveScope\", function () {\n  return $a7a032acae3ddda9$export$1258395f99bf9cbf;\n});\n$parcel$export(module.exports, \"createFocusManager\", function () {\n  return $a7a032acae3ddda9$export$c5251b9e124bf29;\n});\nvar $a7a032acae3ddda9$var$FocusContext = (0, $parcel$interopDefault($euGna$react)).createContext(null);\nvar $a7a032acae3ddda9$var$RESTORE_FOCUS_EVENT = 'react-aria-focus-scope-restore';\nvar $a7a032acae3ddda9$var$activeScope = null;\nfunction $a7a032acae3ddda9$export$20e40289641fbbb6(props) {\n  var children = props.children,\n    contain = props.contain,\n    restoreFocus = props.restoreFocus,\n    autoFocus = props.autoFocus;\n  var startRef = (0, $euGna$react.useRef)(null);\n  var endRef = (0, $euGna$react.useRef)(null);\n  var scopeRef = (0, $euGna$react.useRef)([]);\n  var _ref = (0, $euGna$react.useContext)($a7a032acae3ddda9$var$FocusContext) || {},\n    parentNode = _ref.parentNode;\n  var node = (0, $euGna$react.useMemo)(function () {\n    return new $a7a032acae3ddda9$var$TreeNode({\n      scopeRef: scopeRef\n    });\n  }, [scopeRef]);\n  (0, $euGna$reactariautils.useLayoutEffect)(function () {\n    var parent = parentNode || $a7a032acae3ddda9$export$d06fae2ee68b101e.root;\n    if ($a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(parent.scopeRef) && $a7a032acae3ddda9$var$activeScope && !$a7a032acae3ddda9$var$isAncestorScope($a7a032acae3ddda9$var$activeScope, parent.scopeRef)) {\n      var activeNode = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode($a7a032acae3ddda9$var$activeScope);\n      if (activeNode) parent = activeNode;\n    }\n    parent.addChild(node);\n    $a7a032acae3ddda9$export$d06fae2ee68b101e.addNode(node);\n  }, [node, parentNode]);\n  (0, $euGna$reactariautils.useLayoutEffect)(function () {\n    var node = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n    if (node) node.contain = !!contain;\n  }, [contain]);\n  (0, $euGna$reactariautils.useLayoutEffect)(function () {\n    var _startRef_current;\n    var node = (_startRef_current = startRef.current) === null || _startRef_current === void 0 ? void 0 : _startRef_current.nextSibling;\n    var nodes = [];\n    var stopPropagation = function stopPropagation(e) {\n      return e.stopPropagation();\n    };\n    while (node && node !== endRef.current) {\n      nodes.push(node);\n      node.addEventListener($a7a032acae3ddda9$var$RESTORE_FOCUS_EVENT, stopPropagation);\n      node = node.nextSibling;\n    }\n    scopeRef.current = nodes;\n    return function () {\n      for (var _node of nodes) _node.removeEventListener($a7a032acae3ddda9$var$RESTORE_FOCUS_EVENT, stopPropagation);\n    };\n  }, [children]);\n  $a7a032acae3ddda9$var$useActiveScopeTracker(scopeRef, restoreFocus, contain);\n  $a7a032acae3ddda9$var$useFocusContainment(scopeRef, contain);\n  $a7a032acae3ddda9$var$useRestoreFocus(scopeRef, restoreFocus, contain);\n  $a7a032acae3ddda9$var$useAutoFocus(scopeRef, autoFocus);\n  (0, $euGna$react.useEffect)(function () {\n    var activeElement = (0, $euGna$reactariautils.getActiveElement)((0, $euGna$reactariautils.getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined));\n    var scope = null;\n    if ($a7a032acae3ddda9$var$isElementInScope(activeElement, scopeRef.current)) {\n      for (var _node2 of $a7a032acae3ddda9$export$d06fae2ee68b101e.traverse()) if (_node2.scopeRef && $a7a032acae3ddda9$var$isElementInScope(activeElement, _node2.scopeRef.current)) scope = _node2;\n      if (scope === $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef)) $a7a032acae3ddda9$var$activeScope = scope.scopeRef;\n    }\n  }, [scopeRef]);\n  (0, $euGna$reactariautils.useLayoutEffect)(function () {\n    return function () {\n      var _focusScopeTree_getTreeNode_parent, _focusScopeTree_getTreeNode;\n      var _focusScopeTree_getTreeNode_parent_scopeRef;\n      var parentScope = (_focusScopeTree_getTreeNode_parent_scopeRef = (_focusScopeTree_getTreeNode = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef)) === null || _focusScopeTree_getTreeNode === void 0 ? void 0 : (_focusScopeTree_getTreeNode_parent = _focusScopeTree_getTreeNode.parent) === null || _focusScopeTree_getTreeNode_parent === void 0 ? void 0 : _focusScopeTree_getTreeNode_parent.scopeRef) !== null && _focusScopeTree_getTreeNode_parent_scopeRef !== void 0 ? _focusScopeTree_getTreeNode_parent_scopeRef : null;\n      if ((scopeRef === $a7a032acae3ddda9$var$activeScope || $a7a032acae3ddda9$var$isAncestorScope(scopeRef, $a7a032acae3ddda9$var$activeScope)) && (!parentScope || $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(parentScope))) $a7a032acae3ddda9$var$activeScope = parentScope;\n      $a7a032acae3ddda9$export$d06fae2ee68b101e.removeTreeNode(scopeRef);\n    };\n  }, [scopeRef]);\n  var focusManager = (0, $euGna$react.useMemo)(function () {\n    return $a7a032acae3ddda9$var$createFocusManagerForScope(scopeRef);\n  }, []);\n  var value = (0, $euGna$react.useMemo)(function () {\n    return {\n      focusManager: focusManager,\n      parentNode: node\n    };\n  }, [node, focusManager]);\n  return (0, $parcel$interopDefault($euGna$react)).createElement($a7a032acae3ddda9$var$FocusContext.Provider, {\n    value: value\n  }, (0, $parcel$interopDefault($euGna$react)).createElement(\"span\", {\n    \"data-focus-scope-start\": true,\n    hidden: true,\n    ref: startRef\n  }), children, (0, $parcel$interopDefault($euGna$react)).createElement(\"span\", {\n    \"data-focus-scope-end\": true,\n    hidden: true,\n    ref: endRef\n  }));\n}\nfunction $a7a032acae3ddda9$export$10c5169755ce7bd7() {\n  var _useContext;\n  return (_useContext = (0, $euGna$react.useContext)($a7a032acae3ddda9$var$FocusContext)) === null || _useContext === void 0 ? void 0 : _useContext.focusManager;\n}\nfunction $a7a032acae3ddda9$var$createFocusManagerForScope(scopeRef) {\n  return {\n    focusNext: function focusNext() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var from = opts.from,\n        tabbable = opts.tabbable,\n        wrap = opts.wrap,\n        accept = opts.accept;\n      var _scope_;\n      var node = from || (0, $euGna$reactariautils.getActiveElement)((0, $euGna$reactariautils.getOwnerDocument)((_scope_ = scope[0]) !== null && _scope_ !== void 0 ? _scope_ : undefined));\n      var sentinel = scope[0].previousElementSibling;\n      var scopeRoot = $a7a032acae3ddda9$var$getScopeRoot(scope);\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(scopeRoot, {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = $a7a032acae3ddda9$var$isElementInScope(node, scope) ? node : sentinel;\n      var nextNode = walker.nextNode();\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode();\n      }\n      if (nextNode) $a7a032acae3ddda9$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var from = opts.from,\n        tabbable = opts.tabbable,\n        wrap = opts.wrap,\n        accept = opts.accept;\n      var _scope_;\n      var node = from || (0, $euGna$reactariautils.getActiveElement)((0, $euGna$reactariautils.getOwnerDocument)((_scope_ = scope[0]) !== null && _scope_ !== void 0 ? _scope_ : undefined));\n      var sentinel = scope[scope.length - 1].nextElementSibling;\n      var scopeRoot = $a7a032acae3ddda9$var$getScopeRoot(scope);\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(scopeRoot, {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = $a7a032acae3ddda9$var$isElementInScope(node, scope) ? node : sentinel;\n      var previousNode = walker.previousNode();\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode();\n      }\n      if (previousNode) $a7a032acae3ddda9$var$focusElement(previousNode, true);\n      return previousNode;\n    },\n    focusFirst: function focusFirst() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var tabbable = opts.tabbable,\n        accept = opts.accept;\n      var scopeRoot = $a7a032acae3ddda9$var$getScopeRoot(scope);\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(scopeRoot, {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = scope[0].previousElementSibling;\n      var nextNode = walker.nextNode();\n      if (nextNode) $a7a032acae3ddda9$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusLast: function focusLast() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var scope = scopeRef.current;\n      var tabbable = opts.tabbable,\n        accept = opts.accept;\n      var scopeRoot = $a7a032acae3ddda9$var$getScopeRoot(scope);\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(scopeRoot, {\n        tabbable: tabbable,\n        accept: accept\n      }, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling;\n      var previousNode = walker.previousNode();\n      if (previousNode) $a7a032acae3ddda9$var$focusElement(previousNode, true);\n      return previousNode;\n    }\n  };\n}\nfunction $a7a032acae3ddda9$var$getScopeRoot(scope) {\n  return scope[0].parentElement;\n}\nfunction $a7a032acae3ddda9$var$shouldContainFocus(scopeRef) {\n  var scope = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode($a7a032acae3ddda9$var$activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.contain) return false;\n    scope = scope.parent;\n  }\n  return true;\n}\nfunction $a7a032acae3ddda9$var$isTabbableRadio(element) {\n  if (element.checked) return true;\n  var radios = [];\n  if (!element.form) radios = _toConsumableArray((0, $euGna$reactariautils.getOwnerDocument)(element).querySelectorAll(`input[type=\"radio\"][name=\"${CSS.escape(element.name)}\"]`)).filter(function (radio) {\n    return !radio.form;\n  });else {\n    var _element_form_elements, _element_form;\n    var radioList = (_element_form = element.form) === null || _element_form === void 0 ? void 0 : (_element_form_elements = _element_form.elements) === null || _element_form_elements === void 0 ? void 0 : _element_form_elements.namedItem(element.name);\n    radios = _toConsumableArray(radioList !== null && radioList !== void 0 ? radioList : []);\n  }\n  if (!radios) return false;\n  var anyChecked = radios.some(function (radio) {\n    return radio.checked;\n  });\n  return !anyChecked;\n}\nfunction $a7a032acae3ddda9$var$useFocusContainment(scopeRef, contain) {\n  var focusedNode = (0, $euGna$react.useRef)(undefined);\n  var raf = (0, $euGna$react.useRef)(undefined);\n  (0, $euGna$reactariautils.useLayoutEffect)(function () {\n    var scope = scopeRef.current;\n    if (!contain) {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n        raf.current = undefined;\n      }\n      return;\n    }\n    var ownerDocument = (0, $euGna$reactariautils.getOwnerDocument)(scope ? scope[0] : undefined);\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || !$a7a032acae3ddda9$var$shouldContainFocus(scopeRef) || e.isComposing) return;\n      var focusedElement = (0, $euGna$reactariautils.getActiveElement)(ownerDocument);\n      var scope = scopeRef.current;\n      if (!scope || !$a7a032acae3ddda9$var$isElementInScope(focusedElement, scope)) return;\n      var scopeRoot = $a7a032acae3ddda9$var$getScopeRoot(scope);\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(scopeRoot, {\n        tabbable: true\n      }, scope);\n      if (!focusedElement) return;\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;\n        nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      }\n      e.preventDefault();\n      if (nextElement) $a7a032acae3ddda9$var$focusElement(nextElement, true);\n    };\n    var onFocus = function onFocus(e) {\n      if ((!$a7a032acae3ddda9$var$activeScope || $a7a032acae3ddda9$var$isAncestorScope($a7a032acae3ddda9$var$activeScope, scopeRef)) && $a7a032acae3ddda9$var$isElementInScope((0, $euGna$reactariautils.getEventTarget)(e), scopeRef.current)) {\n        $a7a032acae3ddda9$var$activeScope = scopeRef;\n        focusedNode.current = (0, $euGna$reactariautils.getEventTarget)(e);\n      } else if ($a7a032acae3ddda9$var$shouldContainFocus(scopeRef) && !$a7a032acae3ddda9$var$isElementInChildScope((0, $euGna$reactariautils.getEventTarget)(e), scopeRef)) {\n        if (focusedNode.current) focusedNode.current.focus();else if ($a7a032acae3ddda9$var$activeScope && $a7a032acae3ddda9$var$activeScope.current) $a7a032acae3ddda9$var$focusFirstInScope($a7a032acae3ddda9$var$activeScope.current);\n      } else if ($a7a032acae3ddda9$var$shouldContainFocus(scopeRef)) focusedNode.current = (0, $euGna$reactariautils.getEventTarget)(e);\n    };\n    var onBlur = function onBlur(e) {\n      if (raf.current) cancelAnimationFrame(raf.current);\n      raf.current = requestAnimationFrame(function () {\n        var modality = (0, $euGna$reactariainteractions.getInteractionModality)();\n        var shouldSkipFocusRestore = (modality === 'virtual' || modality === null) && (0, $euGna$reactariautils.isAndroid)() && (0, $euGna$reactariautils.isChrome)();\n        var activeElement = (0, $euGna$reactariautils.getActiveElement)(ownerDocument);\n        if (!shouldSkipFocusRestore && activeElement && $a7a032acae3ddda9$var$shouldContainFocus(scopeRef) && !$a7a032acae3ddda9$var$isElementInChildScope(activeElement, scopeRef)) {\n          $a7a032acae3ddda9$var$activeScope = scopeRef;\n          var target = (0, $euGna$reactariautils.getEventTarget)(e);\n          if (target && target.isConnected) {\n            var _focusedNode_current;\n            focusedNode.current = target;\n            (_focusedNode_current = focusedNode.current) === null || _focusedNode_current === void 0 ? void 0 : _focusedNode_current.focus();\n          } else if ($a7a032acae3ddda9$var$activeScope.current) $a7a032acae3ddda9$var$focusFirstInScope($a7a032acae3ddda9$var$activeScope.current);\n        }\n      });\n    };\n    ownerDocument.addEventListener('keydown', onKeyDown, false);\n    ownerDocument.addEventListener('focusin', onFocus, false);\n    scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n      return element.addEventListener('focusin', onFocus, false);\n    });\n    scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n      return element.addEventListener('focusout', onBlur, false);\n    });\n    return function () {\n      ownerDocument.removeEventListener('keydown', onKeyDown, false);\n      ownerDocument.removeEventListener('focusin', onFocus, false);\n      scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n        return element.removeEventListener('focusin', onFocus, false);\n      });\n      scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n        return element.removeEventListener('focusout', onBlur, false);\n      });\n    };\n  }, [scopeRef, contain]);\n  (0, $euGna$reactariautils.useLayoutEffect)(function () {\n    return function () {\n      if (raf.current) cancelAnimationFrame(raf.current);\n    };\n  }, [raf]);\n}\nfunction $a7a032acae3ddda9$var$isElementInAnyScope(element) {\n  return $a7a032acae3ddda9$var$isElementInChildScope(element);\n}\nfunction $a7a032acae3ddda9$var$isElementInScope(element, scope) {\n  if (!element) return false;\n  if (!scope) return false;\n  return scope.some(function (node) {\n    return node.contains(element);\n  });\n}\nfunction $a7a032acae3ddda9$var$isElementInChildScope(element) {\n  var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  if (element instanceof Element && element.closest('[data-react-aria-top-layer]')) return true;\n  for (var _ref2 of $a7a032acae3ddda9$export$d06fae2ee68b101e.traverse($a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scope))) {\n    var s = _ref2.scopeRef;\n    if (s && $a7a032acae3ddda9$var$isElementInScope(element, s.current)) return true;\n  }\n  return false;\n}\nfunction $a7a032acae3ddda9$export$1258395f99bf9cbf(element) {\n  return $a7a032acae3ddda9$var$isElementInChildScope(element, $a7a032acae3ddda9$var$activeScope);\n}\nfunction $a7a032acae3ddda9$var$isAncestorScope(ancestor, scope) {\n  var _focusScopeTree_getTreeNode;\n  var parent = (_focusScopeTree_getTreeNode = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scope)) === null || _focusScopeTree_getTreeNode === void 0 ? void 0 : _focusScopeTree_getTreeNode.parent;\n  while (parent) {\n    if (parent.scopeRef === ancestor) return true;\n    parent = parent.parent;\n  }\n  return false;\n}\nfunction $a7a032acae3ddda9$var$focusElement(element) {\n  var scroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  if (element != null && !scroll) try {\n    (0, $euGna$reactariainteractions.focusSafely)(element);\n  } catch (_unused) {} else if (element != null) try {\n    element.focus();\n  } catch (_unused2) {}\n}\nfunction $a7a032acae3ddda9$var$getFirstInScope(scope) {\n  var tabbable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var sentinel = scope[0].previousElementSibling;\n  var scopeRoot = $a7a032acae3ddda9$var$getScopeRoot(scope);\n  var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(scopeRoot, {\n    tabbable: tabbable\n  }, scope);\n  walker.currentNode = sentinel;\n  var nextNode = walker.nextNode();\n  if (tabbable && !nextNode) {\n    scopeRoot = $a7a032acae3ddda9$var$getScopeRoot(scope);\n    walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(scopeRoot, {\n      tabbable: false\n    }, scope);\n    walker.currentNode = sentinel;\n    nextNode = walker.nextNode();\n  }\n  return nextNode;\n}\nfunction $a7a032acae3ddda9$var$focusFirstInScope(scope) {\n  var tabbable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  $a7a032acae3ddda9$var$focusElement($a7a032acae3ddda9$var$getFirstInScope(scope, tabbable));\n}\nfunction $a7a032acae3ddda9$var$useAutoFocus(scopeRef, autoFocus) {\n  var autoFocusRef = (0, $parcel$interopDefault($euGna$react)).useRef(autoFocus);\n  (0, $euGna$react.useEffect)(function () {\n    if (autoFocusRef.current) {\n      $a7a032acae3ddda9$var$activeScope = scopeRef;\n      var ownerDocument = (0, $euGna$reactariautils.getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined);\n      if (!$a7a032acae3ddda9$var$isElementInScope((0, $euGna$reactariautils.getActiveElement)(ownerDocument), $a7a032acae3ddda9$var$activeScope.current) && scopeRef.current) $a7a032acae3ddda9$var$focusFirstInScope(scopeRef.current);\n    }\n    autoFocusRef.current = false;\n  }, [scopeRef]);\n}\nfunction $a7a032acae3ddda9$var$useActiveScopeTracker(scopeRef, restore, contain) {\n  (0, $euGna$reactariautils.useLayoutEffect)(function () {\n    if (restore || contain) return;\n    var scope = scopeRef.current;\n    var ownerDocument = (0, $euGna$reactariautils.getOwnerDocument)(scope ? scope[0] : undefined);\n    var onFocus = function onFocus(e) {\n      var target = (0, $euGna$reactariautils.getEventTarget)(e);\n      if ($a7a032acae3ddda9$var$isElementInScope(target, scopeRef.current)) $a7a032acae3ddda9$var$activeScope = scopeRef;else if (!$a7a032acae3ddda9$var$isElementInAnyScope(target)) $a7a032acae3ddda9$var$activeScope = null;\n    };\n    ownerDocument.addEventListener('focusin', onFocus, false);\n    scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n      return element.addEventListener('focusin', onFocus, false);\n    });\n    return function () {\n      ownerDocument.removeEventListener('focusin', onFocus, false);\n      scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n        return element.removeEventListener('focusin', onFocus, false);\n      });\n    };\n  }, [scopeRef, restore, contain]);\n}\nfunction $a7a032acae3ddda9$var$shouldRestoreFocus(scopeRef) {\n  var scope = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode($a7a032acae3ddda9$var$activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.nodeToRestore) return false;\n    scope = scope.parent;\n  }\n  return (scope === null || scope === void 0 ? void 0 : scope.scopeRef) === scopeRef;\n}\nfunction $a7a032acae3ddda9$var$useRestoreFocus(scopeRef, restoreFocus, contain) {\n  var nodeToRestoreRef = (0, $euGna$react.useRef)(typeof document !== 'undefined' ? (0, $euGna$reactariautils.getActiveElement)((0, $euGna$reactariautils.getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined)) : null);\n  (0, $euGna$reactariautils.useLayoutEffect)(function () {\n    var scope = scopeRef.current;\n    var ownerDocument = (0, $euGna$reactariautils.getOwnerDocument)(scope ? scope[0] : undefined);\n    if (!restoreFocus || contain) return;\n    var onFocus = function onFocus() {\n      if ((!$a7a032acae3ddda9$var$activeScope || $a7a032acae3ddda9$var$isAncestorScope($a7a032acae3ddda9$var$activeScope, scopeRef)) && $a7a032acae3ddda9$var$isElementInScope((0, $euGna$reactariautils.getActiveElement)(ownerDocument), scopeRef.current)) $a7a032acae3ddda9$var$activeScope = scopeRef;\n    };\n    ownerDocument.addEventListener('focusin', onFocus, false);\n    scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n      return element.addEventListener('focusin', onFocus, false);\n    });\n    return function () {\n      ownerDocument.removeEventListener('focusin', onFocus, false);\n      scope === null || scope === void 0 ? void 0 : scope.forEach(function (element) {\n        return element.removeEventListener('focusin', onFocus, false);\n      });\n    };\n  }, [scopeRef, contain]);\n  (0, $euGna$reactariautils.useLayoutEffect)(function () {\n    var ownerDocument = (0, $euGna$reactariautils.getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined);\n    if (!restoreFocus) return;\n    var onKeyDown = function onKeyDown(e) {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || !$a7a032acae3ddda9$var$shouldContainFocus(scopeRef) || e.isComposing) return;\n      var focusedElement = ownerDocument.activeElement;\n      if (!$a7a032acae3ddda9$var$isElementInChildScope(focusedElement, scopeRef) || !$a7a032acae3ddda9$var$shouldRestoreFocus(scopeRef)) return;\n      var treeNode = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n      if (!treeNode) return;\n      var nodeToRestore = treeNode.nodeToRestore;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(ownerDocument.body, {\n        tabbable: true\n      });\n      walker.currentNode = focusedElement;\n      var nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode();\n      if (!nodeToRestore || !nodeToRestore.isConnected || nodeToRestore === ownerDocument.body) {\n        nodeToRestore = undefined;\n        treeNode.nodeToRestore = undefined;\n      }\n      if ((!nextElement || !$a7a032acae3ddda9$var$isElementInChildScope(nextElement, scopeRef)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n        do nextElement = e.shiftKey ? walker.previousNode() : walker.nextNode(); while ($a7a032acae3ddda9$var$isElementInChildScope(nextElement, scopeRef));\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) $a7a032acae3ddda9$var$focusElement(nextElement, true);else if (!$a7a032acae3ddda9$var$isElementInAnyScope(nodeToRestore)) focusedElement.blur();else $a7a032acae3ddda9$var$focusElement(nodeToRestore, true);\n      }\n    };\n    if (!contain) ownerDocument.addEventListener('keydown', onKeyDown, true);\n    return function () {\n      if (!contain) ownerDocument.removeEventListener('keydown', onKeyDown, true);\n    };\n  }, [scopeRef, restoreFocus, contain]);\n  (0, $euGna$reactariautils.useLayoutEffect)(function () {\n    var ownerDocument = (0, $euGna$reactariautils.getOwnerDocument)(scopeRef.current ? scopeRef.current[0] : undefined);\n    if (!restoreFocus) return;\n    var treeNode = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n    if (!treeNode) return;\n    var _nodeToRestoreRef_current;\n    treeNode.nodeToRestore = (_nodeToRestoreRef_current = nodeToRestoreRef.current) !== null && _nodeToRestoreRef_current !== void 0 ? _nodeToRestoreRef_current : undefined;\n    return function () {\n      var treeNode = $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(scopeRef);\n      if (!treeNode) return;\n      var nodeToRestore = treeNode.nodeToRestore;\n      var activeElement = (0, $euGna$reactariautils.getActiveElement)(ownerDocument);\n      if (restoreFocus && nodeToRestore && (activeElement && $a7a032acae3ddda9$var$isElementInChildScope(activeElement, scopeRef) || activeElement === ownerDocument.body && $a7a032acae3ddda9$var$shouldRestoreFocus(scopeRef))) {\n        var clonedTree = $a7a032acae3ddda9$export$d06fae2ee68b101e.clone();\n        requestAnimationFrame(function () {\n          if (ownerDocument.activeElement === ownerDocument.body) {\n            var _treeNode = clonedTree.getTreeNode(scopeRef);\n            while (_treeNode) {\n              if (_treeNode.nodeToRestore && _treeNode.nodeToRestore.isConnected) {\n                $a7a032acae3ddda9$var$restoreFocusToElement(_treeNode.nodeToRestore);\n                return;\n              }\n              _treeNode = _treeNode.parent;\n            }\n            _treeNode = clonedTree.getTreeNode(scopeRef);\n            while (_treeNode) {\n              if (_treeNode.scopeRef && _treeNode.scopeRef.current && $a7a032acae3ddda9$export$d06fae2ee68b101e.getTreeNode(_treeNode.scopeRef)) {\n                var node = $a7a032acae3ddda9$var$getFirstInScope(_treeNode.scopeRef.current, true);\n                $a7a032acae3ddda9$var$restoreFocusToElement(node);\n                return;\n              }\n              _treeNode = _treeNode.parent;\n            }\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus]);\n}\nfunction $a7a032acae3ddda9$var$restoreFocusToElement(node) {\n  if (node.dispatchEvent(new CustomEvent($a7a032acae3ddda9$var$RESTORE_FOCUS_EVENT, {\n    bubbles: true,\n    cancelable: true\n  }))) $a7a032acae3ddda9$var$focusElement(node);\n}\nfunction $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, opts, scope) {\n  var filter = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? (0, $euGna$reactariautils.isTabbable) : (0, $euGna$reactariautils.isFocusable);\n  var rootElement = (root === null || root === void 0 ? void 0 : root.nodeType) === Node.ELEMENT_NODE ? root : null;\n  var doc = (0, $euGna$reactariautils.getOwnerDocument)(rootElement);\n  var walker = (0, $euGna$reactariautils.createShadowTreeWalker)(doc, root || doc, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: function acceptNode(node) {\n      var _opts_from;\n      if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node)) return NodeFilter.FILTER_REJECT;\n      if ((opts === null || opts === void 0 ? void 0 : opts.tabbable) && node.tagName === 'INPUT' && node.getAttribute('type') === 'radio') {\n        if (!$a7a032acae3ddda9$var$isTabbableRadio(node)) return NodeFilter.FILTER_REJECT;\n        if (walker.currentNode.tagName === 'INPUT' && walker.currentNode.type === 'radio' && walker.currentNode.name === node.name) return NodeFilter.FILTER_REJECT;\n      }\n      if (filter(node) && (!scope || $a7a032acae3ddda9$var$isElementInScope(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node))) return NodeFilter.FILTER_ACCEPT;\n      return NodeFilter.FILTER_SKIP;\n    }\n  });\n  if (opts === null || opts === void 0 ? void 0 : opts.from) walker.currentNode = opts.from;\n  return walker;\n}\nfunction $a7a032acae3ddda9$export$c5251b9e124bf29(ref) {\n  var defaultOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    focusNext: function focusNext() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var root = ref.current;\n      if (!root) return null;\n      var from = opts.from,\n        _opts$tabbable = opts.tabbable,\n        tabbable = _opts$tabbable === void 0 ? defaultOptions.tabbable : _opts$tabbable,\n        _opts$wrap = opts.wrap,\n        wrap = _opts$wrap === void 0 ? defaultOptions.wrap : _opts$wrap,\n        _opts$accept = opts.accept,\n        accept = _opts$accept === void 0 ? defaultOptions.accept : _opts$accept;\n      var node = from || (0, $euGna$reactariautils.getActiveElement)((0, $euGna$reactariautils.getOwnerDocument)(root));\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      if (root.contains(node)) walker.currentNode = node;\n      var nextNode = walker.nextNode();\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode();\n      }\n      if (nextNode) $a7a032acae3ddda9$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusPrevious: function focusPrevious() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return null;\n      var from = opts.from,\n        _opts$tabbable2 = opts.tabbable,\n        tabbable = _opts$tabbable2 === void 0 ? defaultOptions.tabbable : _opts$tabbable2,\n        _opts$wrap2 = opts.wrap,\n        wrap = _opts$wrap2 === void 0 ? defaultOptions.wrap : _opts$wrap2,\n        _opts$accept2 = opts.accept,\n        accept = _opts$accept2 === void 0 ? defaultOptions.accept : _opts$accept2;\n      var node = from || (0, $euGna$reactariautils.getActiveElement)((0, $euGna$reactariautils.getOwnerDocument)(root));\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      if (root.contains(node)) walker.currentNode = node;else {\n        var next = $a7a032acae3ddda9$var$last(walker);\n        if (next) $a7a032acae3ddda9$var$focusElement(next, true);\n        return next !== null && next !== void 0 ? next : null;\n      }\n      var previousNode = walker.previousNode();\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        var lastNode = $a7a032acae3ddda9$var$last(walker);\n        if (!lastNode) return null;\n        previousNode = lastNode;\n      }\n      if (previousNode) $a7a032acae3ddda9$var$focusElement(previousNode, true);\n      return previousNode !== null && previousNode !== void 0 ? previousNode : null;\n    },\n    focusFirst: function focusFirst() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return null;\n      var _opts$tabbable3 = opts.tabbable,\n        tabbable = _opts$tabbable3 === void 0 ? defaultOptions.tabbable : _opts$tabbable3,\n        _opts$accept3 = opts.accept,\n        accept = _opts$accept3 === void 0 ? defaultOptions.accept : _opts$accept3;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      var nextNode = walker.nextNode();\n      if (nextNode) $a7a032acae3ddda9$var$focusElement(nextNode, true);\n      return nextNode;\n    },\n    focusLast: function focusLast() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n      var root = ref.current;\n      if (!root) return null;\n      var _opts$tabbable4 = opts.tabbable,\n        tabbable = _opts$tabbable4 === void 0 ? defaultOptions.tabbable : _opts$tabbable4,\n        _opts$accept4 = opts.accept,\n        accept = _opts$accept4 === void 0 ? defaultOptions.accept : _opts$accept4;\n      var walker = $a7a032acae3ddda9$export$2d6ec8fc375ceafa(root, {\n        tabbable: tabbable,\n        accept: accept\n      });\n      var next = $a7a032acae3ddda9$var$last(walker);\n      if (next) $a7a032acae3ddda9$var$focusElement(next, true);\n      return next !== null && next !== void 0 ? next : null;\n    }\n  };\n}\nfunction $a7a032acae3ddda9$var$last(walker) {\n  var next = undefined;\n  var last;\n  do {\n    last = walker.lastChild();\n    if (last) next = last;\n  } while (last);\n  return next;\n}\nvar $a7a032acae3ddda9$var$Tree = function () {\n  \"use strict\";\n\n  function $a7a032acae3ddda9$var$Tree() {\n    _classCallCheck(this, $a7a032acae3ddda9$var$Tree);\n    this.fastMap = new Map();\n    this.root = new $a7a032acae3ddda9$var$TreeNode({\n      scopeRef: null\n    });\n    this.fastMap.set(null, this.root);\n  }\n  return _createClass($a7a032acae3ddda9$var$Tree, [{\n    key: \"size\",\n    get: function get() {\n      return this.fastMap.size;\n    }\n  }, {\n    key: \"getTreeNode\",\n    value: function getTreeNode(data) {\n      return this.fastMap.get(data);\n    }\n  }, {\n    key: \"addTreeNode\",\n    value: function addTreeNode(scopeRef, parent, nodeToRestore) {\n      var parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);\n      if (!parentNode) return;\n      var node = new $a7a032acae3ddda9$var$TreeNode({\n        scopeRef: scopeRef\n      });\n      parentNode.addChild(node);\n      node.parent = parentNode;\n      this.fastMap.set(scopeRef, node);\n      if (nodeToRestore) node.nodeToRestore = nodeToRestore;\n    }\n  }, {\n    key: \"addNode\",\n    value: function addNode(node) {\n      this.fastMap.set(node.scopeRef, node);\n    }\n  }, {\n    key: \"removeTreeNode\",\n    value: function removeTreeNode(scopeRef) {\n      if (scopeRef === null) return;\n      var node = this.fastMap.get(scopeRef);\n      if (!node) return;\n      var parentNode = node.parent;\n      for (var current of this.traverse()) if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef && node.scopeRef.current && $a7a032acae3ddda9$var$isElementInScope(current.nodeToRestore, node.scopeRef.current)) current.nodeToRestore = node.nodeToRestore;\n      var children = node.children;\n      if (parentNode) {\n        parentNode.removeChild(node);\n        if (children.size > 0) children.forEach(function (child) {\n          return parentNode && parentNode.addChild(child);\n        });\n      }\n      this.fastMap.delete(node.scopeRef);\n    }\n  }, {\n    key: \"traverse\",\n    value: function traverse() {\n      var _this = this;\n      var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.root;\n      return function* () {\n        if (node.scopeRef != null) yield node;\n        if (node.children.size > 0) for (var child of node.children) yield* _this.traverse(child);\n      }();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      var _node_parent;\n      var newTree = new $a7a032acae3ddda9$var$Tree();\n      var _node_parent_scopeRef;\n      for (var node of this.traverse()) newTree.addTreeNode(node.scopeRef, (_node_parent_scopeRef = (_node_parent = node.parent) === null || _node_parent === void 0 ? void 0 : _node_parent.scopeRef) !== null && _node_parent_scopeRef !== void 0 ? _node_parent_scopeRef : null, node.nodeToRestore);\n      return newTree;\n    }\n  }]);\n}();\nvar $a7a032acae3ddda9$var$TreeNode = function () {\n  \"use strict\";\n\n  function $a7a032acae3ddda9$var$TreeNode(props) {\n    _classCallCheck(this, $a7a032acae3ddda9$var$TreeNode);\n    this.children = new Set();\n    this.contain = false;\n    this.scopeRef = props.scopeRef;\n  }\n  return _createClass($a7a032acae3ddda9$var$TreeNode, [{\n    key: \"addChild\",\n    value: function addChild(node) {\n      this.children.add(node);\n      node.parent = this;\n    }\n  }, {\n    key: \"removeChild\",\n    value: function removeChild(node) {\n      this.children.delete(node);\n      node.parent = undefined;\n    }\n  }]);\n}();\nvar $a7a032acae3ddda9$export$d06fae2ee68b101e = new $a7a032acae3ddda9$var$Tree();","map":{"version":3,"names":["$a7a032acae3ddda9$var$FocusContext","$parcel$interopDefault","$euGna$react","createContext","$a7a032acae3ddda9$var$RESTORE_FOCUS_EVENT","$a7a032acae3ddda9$var$activeScope","$a7a032acae3ddda9$export$20e40289641fbbb6","props","children","contain","restoreFocus","autoFocus","startRef","useRef","endRef","scopeRef","_ref","useContext","parentNode","node","useMemo","$a7a032acae3ddda9$var$TreeNode","$euGna$reactariautils","useLayoutEffect","parent","$a7a032acae3ddda9$export$d06fae2ee68b101e","root","getTreeNode","$a7a032acae3ddda9$var$isAncestorScope","activeNode","addChild","addNode","_startRef_current","current","nextSibling","nodes","stopPropagation","e","push","addEventListener","removeEventListener","$a7a032acae3ddda9$var$useActiveScopeTracker","$a7a032acae3ddda9$var$useFocusContainment","$a7a032acae3ddda9$var$useRestoreFocus","$a7a032acae3ddda9$var$useAutoFocus","useEffect","activeElement","getActiveElement","getOwnerDocument","undefined","scope","$a7a032acae3ddda9$var$isElementInScope","traverse","_focusScopeTree_getTreeNode_parent","_focusScopeTree_getTreeNode","_focusScopeTree_getTreeNode_parent_scopeRef","parentScope","removeTreeNode","focusManager","$a7a032acae3ddda9$var$createFocusManagerForScope","value","createElement","Provider","hidden","ref","$a7a032acae3ddda9$export$10c5169755ce7bd7","_useContext","focusNext","opts","arguments","length","from","tabbable","wrap","accept","_scope_","sentinel","previousElementSibling","scopeRoot","$a7a032acae3ddda9$var$getScopeRoot","walker","$a7a032acae3ddda9$export$2d6ec8fc375ceafa","currentNode","nextNode","$a7a032acae3ddda9$var$focusElement","focusPrevious","nextElementSibling","previousNode","focusFirst","focusLast","parentElement","$a7a032acae3ddda9$var$shouldContainFocus","$a7a032acae3ddda9$var$isTabbableRadio","element","checked","radios","form","_toConsumableArray","querySelectorAll","CSS","escape","name","filter","radio","_element_form_elements","_element_form","radioList","elements","namedItem","anyChecked","some","focusedNode","raf","cancelAnimationFrame","ownerDocument","onKeyDown","key","altKey","ctrlKey","metaKey","isComposing","focusedElement","nextElement","shiftKey","preventDefault","onFocus","getEventTarget","$a7a032acae3ddda9$var$isElementInChildScope","focus","$a7a032acae3ddda9$var$focusFirstInScope","onBlur","requestAnimationFrame","modality","$euGna$reactariainteractions","getInteractionModality","shouldSkipFocusRestore","isAndroid","isChrome","target","isConnected","_focusedNode_current","forEach","$a7a032acae3ddda9$var$isElementInAnyScope","contains","Element","closest","_ref2","s","$a7a032acae3ddda9$export$1258395f99bf9cbf","ancestor","scroll","focusSafely","_unused","_unused2","$a7a032acae3ddda9$var$getFirstInScope","autoFocusRef","restore","$a7a032acae3ddda9$var$shouldRestoreFocus","nodeToRestore","nodeToRestoreRef","document","treeNode","body","blur","_nodeToRestoreRef_current","clonedTree","clone","$a7a032acae3ddda9$var$restoreFocusToElement","dispatchEvent","CustomEvent","bubbles","cancelable","isTabbable","isFocusable","rootElement","nodeType","Node","ELEMENT_NODE","doc","createShadowTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","_opts_from","FILTER_REJECT","tagName","getAttribute","type","FILTER_ACCEPT","FILTER_SKIP","$a7a032acae3ddda9$export$c5251b9e124bf29","defaultOptions","_opts$tabbable","_opts$wrap","_opts$accept","_opts$tabbable2","_opts$wrap2","_opts$accept2","next","$a7a032acae3ddda9$var$last","lastNode","_opts$tabbable3","_opts$accept3","_opts$tabbable4","_opts$accept4","last","lastChild","$a7a032acae3ddda9$var$Tree","_classCallCheck","fastMap","Map","set","_createClass","get","size","data","addTreeNode","removeChild","child","delete","_this","_node_parent","newTree","_node_parent_scopeRef","Set","add"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\focus\\dist\\packages\\@react-aria\\focus\\src\\FocusScope.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  createShadowTreeWalker,\n  getActiveElement,\n  getEventTarget,\n  getOwnerDocument,\n  isAndroid,\n  isChrome,\n  isFocusable,\n  isTabbable,\n  ShadowTreeWalker,\n  useLayoutEffect\n} from '@react-aria/utils';\nimport {FocusableElement, RefObject} from '@react-types/shared';\nimport {focusSafely, getInteractionModality} from '@react-aria/interactions';\nimport React, {JSX, ReactNode, useContext, useEffect, useMemo, useRef} from 'react';\n\nexport interface FocusScopeProps {\n  /** The contents of the focus scope. */\n  children: ReactNode,\n\n  /**\n   * Whether to contain focus inside the scope, so users cannot\n   * move focus outside, for example in a modal dialog.\n   */\n  contain?: boolean,\n\n  /**\n   * Whether to restore focus back to the element that was focused\n   * when the focus scope mounted, after the focus scope unmounts.\n   */\n  restoreFocus?: boolean,\n\n  /** Whether to auto focus the first focusable element in the focus scope on mount. */\n  autoFocus?: boolean\n}\n\nexport interface FocusManagerOptions {\n  /** The element to start searching from. The currently focused element by default. */\n  from?: Element,\n  /** Whether to only include tabbable elements, or all focusable elements. */\n  tabbable?: boolean,\n  /** Whether focus should wrap around when it reaches the end of the scope. */\n  wrap?: boolean,\n  /** A callback that determines whether the given element is focused. */\n  accept?: (node: Element) => boolean\n}\n\nexport interface FocusManager {\n  /** Moves focus to the next focusable or tabbable element in the focus scope. */\n  focusNext(opts?: FocusManagerOptions): FocusableElement | null,\n  /** Moves focus to the previous focusable or tabbable element in the focus scope. */\n  focusPrevious(opts?: FocusManagerOptions): FocusableElement | null,\n  /** Moves focus to the first focusable or tabbable element in the focus scope. */\n  focusFirst(opts?: FocusManagerOptions): FocusableElement | null,\n  /** Moves focus to the last focusable or tabbable element in the focus scope. */\n  focusLast(opts?: FocusManagerOptions): FocusableElement | null\n}\n\ntype ScopeRef = RefObject<Element[] | null> | null;\ninterface IFocusContext {\n  focusManager: FocusManager,\n  parentNode: TreeNode | null\n}\n\nconst FocusContext = React.createContext<IFocusContext | null>(null);\nconst RESTORE_FOCUS_EVENT = 'react-aria-focus-scope-restore';\n\nlet activeScope: ScopeRef = null;\n\n// This is a hacky DOM-based implementation of a FocusScope until this RFC lands in React:\n// https://github.com/reactjs/rfcs/pull/109\n\n/**\n * A FocusScope manages focus for its descendants. It supports containing focus inside\n * the scope, restoring focus to the previously focused element on unmount, and auto\n * focusing children on mount. It also acts as a container for a programmatic focus\n * management interface that can be used to move focus forward and back in response\n * to user events.\n */\nexport function FocusScope(props: FocusScopeProps): JSX.Element {\n  let {children, contain, restoreFocus, autoFocus} = props;\n  let startRef = useRef<HTMLSpanElement>(null);\n  let endRef = useRef<HTMLSpanElement>(null);\n  let scopeRef = useRef<Element[]>([]);\n  let {parentNode} = useContext(FocusContext) || {};\n\n  // Create a tree node here so we can add children to it even before it is added to the tree.\n  let node = useMemo(() => new TreeNode({scopeRef}), [scopeRef]);\n\n  useLayoutEffect(() => {\n    // If a new scope mounts outside the active scope, (e.g. DialogContainer launched from a menu),\n    // use the active scope as the parent instead of the parent from context. Layout effects run bottom\n    // up, so if the parent is not yet added to the tree, don't do this. Only the outer-most FocusScope\n    // that is being added should get the activeScope as its parent.\n    let parent = parentNode || focusScopeTree.root;\n    if (focusScopeTree.getTreeNode(parent.scopeRef) && activeScope && !isAncestorScope(activeScope, parent.scopeRef)) {\n      let activeNode = focusScopeTree.getTreeNode(activeScope);\n      if (activeNode) {\n        parent = activeNode;\n      }\n    }\n\n    // Add the node to the parent, and to the tree.\n    parent.addChild(node);\n    focusScopeTree.addNode(node);\n  }, [node, parentNode]);\n\n  useLayoutEffect(() => {\n    let node = focusScopeTree.getTreeNode(scopeRef);\n    if (node) {\n      node.contain = !!contain;\n    }\n  }, [contain]);\n\n  useLayoutEffect(() => {\n    // Find all rendered nodes between the sentinels and add them to the scope.\n    let node = startRef.current?.nextSibling!;\n    let nodes: Element[] = [];\n    let stopPropagation = e => e.stopPropagation();\n    while (node && node !== endRef.current) {\n      nodes.push(node as Element);\n      // Stop custom restore focus event from propagating to parent focus scopes.\n      node.addEventListener(RESTORE_FOCUS_EVENT, stopPropagation);\n      node = node.nextSibling as Element;\n    }\n\n    scopeRef.current = nodes;\n\n    return () => {\n      for (let node of nodes) {\n        node.removeEventListener(RESTORE_FOCUS_EVENT, stopPropagation);\n      }\n    };\n  }, [children]);\n\n  useActiveScopeTracker(scopeRef, restoreFocus, contain);\n  useFocusContainment(scopeRef, contain);\n  useRestoreFocus(scopeRef, restoreFocus, contain);\n  useAutoFocus(scopeRef, autoFocus);\n\n  // This needs to be an effect so that activeScope is updated after the FocusScope tree is complete.\n  // It cannot be a useLayoutEffect because the parent of this node hasn't been attached in the tree yet.\n  useEffect(() => {\n    const activeElement = getActiveElement(getOwnerDocument(scopeRef.current ? scopeRef.current[0] : undefined));\n    let scope: TreeNode | null = null;\n\n    if (isElementInScope(activeElement, scopeRef.current)) {\n      // We need to traverse the focusScope tree and find the bottom most scope that\n      // contains the active element and set that as the activeScope.\n      for (let node of focusScopeTree.traverse()) {\n        if (node.scopeRef && isElementInScope(activeElement, node.scopeRef.current)) {\n          scope = node;\n        }\n      }\n\n      if (scope === focusScopeTree.getTreeNode(scopeRef)) {\n        activeScope = scope.scopeRef;\n      }\n    }\n  }, [scopeRef]);\n\n  // This layout effect cleanup is so that the tree node is removed synchronously with react before the RAF\n  // in useRestoreFocus cleanup runs.\n  useLayoutEffect(() => {\n    return () => {\n      // Scope may have been re-parented.\n      let parentScope = focusScopeTree.getTreeNode(scopeRef)?.parent?.scopeRef ?? null;\n\n      if (\n        (scopeRef === activeScope || isAncestorScope(scopeRef, activeScope)) &&\n        (!parentScope || focusScopeTree.getTreeNode(parentScope))\n      ) {\n        activeScope = parentScope;\n      }\n      focusScopeTree.removeTreeNode(scopeRef);\n    };\n  }, [scopeRef]);\n\n  let focusManager = useMemo(() => createFocusManagerForScope(scopeRef), []);\n  let value = useMemo(() => ({\n    focusManager,\n    parentNode: node\n  }), [node, focusManager]);\n\n  return (\n    <FocusContext.Provider value={value}>\n      <span data-focus-scope-start hidden ref={startRef} />\n      {children}\n      <span data-focus-scope-end hidden ref={endRef} />\n    </FocusContext.Provider>\n  );\n}\n\n/**\n * Returns a FocusManager interface for the parent FocusScope.\n * A FocusManager can be used to programmatically move focus within\n * a FocusScope, e.g. in response to user events like keyboard navigation.\n */\nexport function useFocusManager(): FocusManager | undefined {\n  return useContext(FocusContext)?.focusManager;\n}\n\nfunction createFocusManagerForScope(scopeRef: React.RefObject<Element[] | null>): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current!;\n      let {from, tabbable, wrap, accept} = opts;\n      let node = from || getActiveElement(getOwnerDocument(scope[0] ?? undefined))!;\n      let sentinel = scope[0].previousElementSibling!;\n      let scopeRoot = getScopeRoot(scope);\n      let walker = getFocusableTreeWalker(scopeRoot, {tabbable, accept}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node : sentinel;\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = sentinel;\n        nextNode = walker.nextNode() as FocusableElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = {}) {\n      let scope = scopeRef.current!;\n      let {from, tabbable, wrap, accept} = opts;\n      let node = from || getActiveElement(getOwnerDocument(scope[0] ?? undefined))!;\n      let sentinel = scope[scope.length - 1].nextElementSibling!;\n      let scopeRoot = getScopeRoot(scope);\n      let walker = getFocusableTreeWalker(scopeRoot, {tabbable, accept}, scope);\n      walker.currentNode = isElementInScope(node, scope) ? node  : sentinel;\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = sentinel;\n        previousNode = walker.previousNode() as FocusableElement;\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    },\n    focusFirst(opts = {}) {\n      let scope = scopeRef.current!;\n      let {tabbable, accept} = opts;\n      let scopeRoot = getScopeRoot(scope);\n      let walker = getFocusableTreeWalker(scopeRoot, {tabbable, accept}, scope);\n      walker.currentNode = scope[0].previousElementSibling!;\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = {}) {\n      let scope = scopeRef.current!;\n      let {tabbable, accept} = opts;\n      let scopeRoot = getScopeRoot(scope);\n      let walker = getFocusableTreeWalker(scopeRoot, {tabbable, accept}, scope);\n      walker.currentNode = scope[scope.length - 1].nextElementSibling!;\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode;\n    }\n  };\n}\n\nfunction getScopeRoot(scope: Element[]) {\n  return scope[0].parentElement!;\n}\n\nfunction shouldContainFocus(scopeRef: ScopeRef) {\n  let scope = focusScopeTree.getTreeNode(activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.contain) {\n      return false;\n    }\n\n    scope = scope.parent;\n  }\n\n  return true;\n}\n\nfunction isTabbableRadio(element: HTMLInputElement) {\n  if (element.checked) {\n    return true;\n  }\n  let radios: HTMLInputElement[] = [];\n  if (!element.form) {\n    radios = ([...getOwnerDocument(element).querySelectorAll(`input[type=\"radio\"][name=\"${CSS.escape(element.name)}\"]`)] as HTMLInputElement[]).filter(radio => !radio.form);\n  } else {\n    let radioList = element.form?.elements?.namedItem(element.name) as RadioNodeList;\n    radios = [...(radioList ?? [])] as HTMLInputElement[];\n  }\n  if (!radios) {\n    return false;\n  }\n  let anyChecked = radios.some(radio => radio.checked);\n\n  return !anyChecked;\n}\n\nfunction useFocusContainment(scopeRef: RefObject<Element[] | null>, contain?: boolean) {\n  let focusedNode = useRef<FocusableElement>(undefined);\n\n  let raf = useRef<ReturnType<typeof requestAnimationFrame>>(undefined);\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    if (!contain) {\n      // if contain was changed, then we should cancel any ongoing waits to pull focus back into containment\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n        raf.current = undefined;\n      }\n      return;\n    }\n\n    const ownerDocument = getOwnerDocument(scope ? scope[0] : undefined);\n\n    // Handle the Tab key to contain focus within the scope\n    let onKeyDown = (e) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || !shouldContainFocus(scopeRef) || e.isComposing) {\n        return;\n      }\n\n      let focusedElement = getActiveElement(ownerDocument);\n      let scope = scopeRef.current;\n      if (!scope || !isElementInScope(focusedElement, scope)) {\n        return;\n      }\n\n      let scopeRoot = getScopeRoot(scope);\n      let walker = getFocusableTreeWalker(scopeRoot, {tabbable: true}, scope);\n      if (!focusedElement) {\n        return;\n      }\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n      if (!nextElement) {\n        walker.currentNode = e.shiftKey ? scope[scope.length - 1].nextElementSibling! : scope[0].previousElementSibling!;\n        nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n      }\n\n      e.preventDefault();\n      if (nextElement) {\n        focusElement(nextElement, true);\n      }\n    };\n\n    let onFocus: EventListener = (e) => {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if ((!activeScope || isAncestorScope(activeScope, scopeRef)) && isElementInScope(getEventTarget(e) as Element, scopeRef.current)) {\n        activeScope = scopeRef;\n        focusedNode.current = getEventTarget(e) as FocusableElement;\n      } else if (shouldContainFocus(scopeRef) && !isElementInChildScope(getEventTarget(e) as Element, scopeRef)) {\n        // If a focus event occurs outside the active scope (e.g. user tabs from browser location bar),\n        // restore focus to the previously focused node or the first tabbable element in the active scope.\n        if (focusedNode.current) {\n          focusedNode.current.focus();\n        } else if (activeScope && activeScope.current) {\n          focusFirstInScope(activeScope.current);\n        }\n      } else if (shouldContainFocus(scopeRef)) {\n        focusedNode.current = getEventTarget(e) as FocusableElement;\n      }\n    };\n\n    let onBlur: EventListener = (e) => {\n      // Firefox doesn't shift focus back to the Dialog properly without this\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n      }\n      raf.current = requestAnimationFrame(() => {\n        // Patches infinite focus coersion loop for Android Talkback where the user isn't able to move the virtual cursor\n        // if within a containing focus scope. Bug filed against Chrome: https://issuetracker.google.com/issues/384844019.\n        // Note that this means focus can leave focus containing modals due to this, but it is isolated to Chrome Talkback.\n        let modality = getInteractionModality();\n        let shouldSkipFocusRestore = (modality === 'virtual' || modality === null) && isAndroid() && isChrome();\n\n        // Use document.activeElement instead of e.relatedTarget so we can tell if user clicked into iframe\n        let activeElement = getActiveElement(ownerDocument);\n        if (!shouldSkipFocusRestore && activeElement && shouldContainFocus(scopeRef) && !isElementInChildScope(activeElement, scopeRef)) {\n          activeScope = scopeRef;\n          let target = getEventTarget(e) as FocusableElement;\n          if (target && target.isConnected) {\n            focusedNode.current = target;\n            focusedNode.current?.focus();\n          } else if (activeScope.current) {\n            focusFirstInScope(activeScope.current);\n          }\n        }\n      });\n    };\n\n    ownerDocument.addEventListener('keydown', onKeyDown, false);\n    ownerDocument.addEventListener('focusin', onFocus, false);\n    scope?.forEach(element => element.addEventListener('focusin', onFocus, false));\n    scope?.forEach(element => element.addEventListener('focusout', onBlur, false));\n    return () => {\n      ownerDocument.removeEventListener('keydown', onKeyDown, false);\n      ownerDocument.removeEventListener('focusin', onFocus, false);\n      scope?.forEach(element => element.removeEventListener('focusin', onFocus, false));\n      scope?.forEach(element => element.removeEventListener('focusout', onBlur, false));\n    };\n  }, [scopeRef, contain]);\n\n  // This is a useLayoutEffect so it is guaranteed to run before our async synthetic blur\n\n  useLayoutEffect(() => {\n    return () => {\n      if (raf.current) {\n        cancelAnimationFrame(raf.current);\n      }\n    };\n  }, [raf]);\n}\n\nfunction isElementInAnyScope(element: Element) {\n  return isElementInChildScope(element);\n}\n\nfunction isElementInScope(element?: Element | null, scope?: Element[] | null) {\n  if (!element) {\n    return false;\n  }\n  if (!scope) {\n    return false;\n  }\n  return scope.some(node => node.contains(element));\n}\n\nfunction isElementInChildScope(element: Element, scope: ScopeRef = null) {\n  // If the element is within a top layer element (e.g. toasts), always allow moving focus there.\n  if (element instanceof Element && element.closest('[data-react-aria-top-layer]')) {\n    return true;\n  }\n\n  // node.contains in isElementInScope covers child scopes that are also DOM children,\n  // but does not cover child scopes in portals.\n  for (let {scopeRef: s} of focusScopeTree.traverse(focusScopeTree.getTreeNode(scope))) {\n    if (s && isElementInScope(element, s.current)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/** @private */\nexport function isElementInChildOfActiveScope(element: Element): boolean {\n  return isElementInChildScope(element, activeScope);\n}\n\nfunction isAncestorScope(ancestor: ScopeRef, scope: ScopeRef) {\n  let parent = focusScopeTree.getTreeNode(scope)?.parent;\n  while (parent) {\n    if (parent.scopeRef === ancestor) {\n      return true;\n    }\n    parent = parent.parent;\n  }\n  return false;\n}\n\nfunction focusElement(element: FocusableElement | null, scroll = false) {\n  if (element != null && !scroll) {\n    try {\n      focusSafely(element);\n    } catch {\n      // ignore\n    }\n  } else if (element != null) {\n    try {\n      element.focus();\n    } catch {\n      // ignore\n    }\n  }\n}\n\nfunction getFirstInScope(scope: Element[], tabbable = true) {\n  let sentinel = scope[0].previousElementSibling!;\n  let scopeRoot = getScopeRoot(scope);\n  let walker = getFocusableTreeWalker(scopeRoot, {tabbable}, scope);\n  walker.currentNode = sentinel;\n  let nextNode = walker.nextNode();\n\n  // If the scope does not contain a tabbable element, use the first focusable element.\n  if (tabbable && !nextNode) {\n    scopeRoot = getScopeRoot(scope);\n    walker = getFocusableTreeWalker(scopeRoot, {tabbable: false}, scope);\n    walker.currentNode = sentinel;\n    nextNode = walker.nextNode();\n  }\n\n  return nextNode as FocusableElement;\n}\n\nfunction focusFirstInScope(scope: Element[], tabbable:boolean = true) {\n  focusElement(getFirstInScope(scope, tabbable));\n}\n\nfunction useAutoFocus(scopeRef: RefObject<Element[] | null>, autoFocus?: boolean) {\n  const autoFocusRef = React.useRef(autoFocus);\n  useEffect(() => {\n    if (autoFocusRef.current) {\n      activeScope = scopeRef;\n      const ownerDocument = getOwnerDocument(scopeRef.current ? scopeRef.current[0] : undefined);\n      if (!isElementInScope(getActiveElement(ownerDocument), activeScope.current) && scopeRef.current) {\n        focusFirstInScope(scopeRef.current);\n      }\n    }\n    autoFocusRef.current = false;\n  }, [scopeRef]);\n}\n\nfunction useActiveScopeTracker(scopeRef: RefObject<Element[] | null>, restore?: boolean, contain?: boolean) {\n  // tracks the active scope, in case restore and contain are both false.\n  // if either are true, this is tracked in useRestoreFocus or useFocusContainment.\n  useLayoutEffect(() => {\n    if (restore || contain) {\n      return;\n    }\n\n    let scope = scopeRef.current;\n    const ownerDocument = getOwnerDocument(scope ? scope[0] : undefined);\n\n    let onFocus = (e) => {\n      let target = getEventTarget(e) as Element;\n      if (isElementInScope(target, scopeRef.current)) {\n        activeScope = scopeRef;\n      } else if (!isElementInAnyScope(target)) {\n        activeScope = null;\n      }\n    };\n\n    ownerDocument.addEventListener('focusin', onFocus, false);\n    scope?.forEach(element => element.addEventListener('focusin', onFocus, false));\n    return () => {\n      ownerDocument.removeEventListener('focusin', onFocus, false);\n      scope?.forEach(element => element.removeEventListener('focusin', onFocus, false));\n    };\n  }, [scopeRef, restore, contain]);\n}\n\nfunction shouldRestoreFocus(scopeRef: ScopeRef) {\n  let scope = focusScopeTree.getTreeNode(activeScope);\n  while (scope && scope.scopeRef !== scopeRef) {\n    if (scope.nodeToRestore) {\n      return false;\n    }\n\n    scope = scope.parent;\n  }\n\n  return scope?.scopeRef === scopeRef;\n}\n\nfunction useRestoreFocus(scopeRef: RefObject<Element[] | null>, restoreFocus?: boolean, contain?: boolean) {\n  // create a ref during render instead of useLayoutEffect so the active element is saved before a child with autoFocus=true mounts.\n  // eslint-disable-next-line no-restricted-globals\n  const nodeToRestoreRef = useRef(typeof document !== 'undefined' ? getActiveElement(getOwnerDocument(scopeRef.current ? scopeRef.current[0] : undefined)) as FocusableElement : null);\n\n  // restoring scopes should all track if they are active regardless of contain, but contain already tracks it plus logic to contain the focus\n  // restoring-non-containing scopes should only care if they become active so they can perform the restore\n  useLayoutEffect(() => {\n    let scope = scopeRef.current;\n    const ownerDocument = getOwnerDocument(scope ? scope[0] : undefined);\n    if (!restoreFocus || contain) {\n      return;\n    }\n\n    let onFocus = () => {\n      // If focusing an element in a child scope of the currently active scope, the child becomes active.\n      // Moving out of the active scope to an ancestor is not allowed.\n      if ((!activeScope || isAncestorScope(activeScope, scopeRef)) &&\n        isElementInScope(getActiveElement(ownerDocument), scopeRef.current)\n      ) {\n        activeScope = scopeRef;\n      }\n    };\n\n    ownerDocument.addEventListener('focusin', onFocus, false);\n    scope?.forEach(element => element.addEventListener('focusin', onFocus, false));\n    return () => {\n      ownerDocument.removeEventListener('focusin', onFocus, false);\n      scope?.forEach(element => element.removeEventListener('focusin', onFocus, false));\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scopeRef, contain]);\n\n  useLayoutEffect(() => {\n    const ownerDocument = getOwnerDocument(scopeRef.current ? scopeRef.current[0] : undefined);\n\n    if (!restoreFocus) {\n      return;\n    }\n\n    // Handle the Tab key so that tabbing out of the scope goes to the next element\n    // after the node that had focus when the scope mounted. This is important when\n    // using portals for overlays, so that focus goes to the expected element when\n    // tabbing out of the overlay.\n    let onKeyDown = (e: KeyboardEvent) => {\n      if (e.key !== 'Tab' || e.altKey || e.ctrlKey || e.metaKey || !shouldContainFocus(scopeRef) || e.isComposing) {\n        return;\n      }\n\n      let focusedElement = ownerDocument.activeElement as FocusableElement;\n      if (!isElementInChildScope(focusedElement, scopeRef) || !shouldRestoreFocus(scopeRef)) {\n        return;\n      }\n      let treeNode = focusScopeTree.getTreeNode(scopeRef);\n      if (!treeNode) {\n        return;\n      }\n      let nodeToRestore = treeNode.nodeToRestore;\n\n      // Create a DOM tree walker that matches all tabbable elements\n      let walker = getFocusableTreeWalker(ownerDocument.body, {tabbable: true});\n\n      // Find the next tabbable element after the currently focused element\n      walker.currentNode = focusedElement;\n      let nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n\n      if (!nodeToRestore || !nodeToRestore.isConnected || nodeToRestore === ownerDocument.body) {\n        nodeToRestore = undefined;\n        treeNode.nodeToRestore = undefined;\n      }\n\n      // If there is no next element, or it is outside the current scope, move focus to the\n      // next element after the node to restore to instead.\n      if ((!nextElement || !isElementInChildScope(nextElement, scopeRef)) && nodeToRestore) {\n        walker.currentNode = nodeToRestore;\n\n        // Skip over elements within the scope, in case the scope immediately follows the node to restore.\n        do {\n          nextElement = (e.shiftKey ? walker.previousNode() : walker.nextNode()) as FocusableElement;\n        } while (isElementInChildScope(nextElement, scopeRef));\n\n        e.preventDefault();\n        e.stopPropagation();\n        if (nextElement) {\n          focusElement(nextElement, true);\n        } else {\n          // If there is no next element and the nodeToRestore isn't within a FocusScope (i.e. we are leaving the top level focus scope)\n          // then move focus to the body.\n          // Otherwise restore focus to the nodeToRestore (e.g menu within a popover -> tabbing to close the menu should move focus to menu trigger)\n          if (!isElementInAnyScope(nodeToRestore)) {\n            focusedElement.blur();\n          } else {\n            focusElement(nodeToRestore, true);\n          }\n        }\n      }\n    };\n\n    if (!contain) {\n      ownerDocument.addEventListener('keydown', onKeyDown as EventListener, true);\n    }\n\n    return () => {\n      if (!contain) {\n        ownerDocument.removeEventListener('keydown', onKeyDown as EventListener, true);\n      }\n    };\n  }, [scopeRef, restoreFocus, contain]);\n\n  // useLayoutEffect instead of useEffect so the active element is saved synchronously instead of asynchronously.\n  useLayoutEffect(() => {\n    const ownerDocument = getOwnerDocument(scopeRef.current ? scopeRef.current[0] : undefined);\n\n    if (!restoreFocus) {\n      return;\n    }\n\n    let treeNode = focusScopeTree.getTreeNode(scopeRef);\n    if (!treeNode) {\n      return;\n    }\n    treeNode.nodeToRestore = nodeToRestoreRef.current ?? undefined;\n    return () => {\n      let treeNode = focusScopeTree.getTreeNode(scopeRef);\n      if (!treeNode) {\n        return;\n      }\n      let nodeToRestore = treeNode.nodeToRestore;\n\n      // if we already lost focus to the body and this was the active scope, then we should attempt to restore\n      let activeElement = getActiveElement(ownerDocument);\n      if (\n        restoreFocus\n        && nodeToRestore\n        && (\n          ((activeElement && isElementInChildScope(activeElement, scopeRef)) || (activeElement === ownerDocument.body && shouldRestoreFocus(scopeRef)))\n        )\n      ) {\n        // freeze the focusScopeTree so it persists after the raf, otherwise during unmount nodes are removed from it\n        let clonedTree = focusScopeTree.clone();\n        requestAnimationFrame(() => {\n          // Only restore focus if we've lost focus to the body, the alternative is that focus has been purposefully moved elsewhere\n          if (ownerDocument.activeElement === ownerDocument.body) {\n            // look up the tree starting with our scope to find a nodeToRestore still in the DOM\n            let treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.nodeToRestore && treeNode.nodeToRestore.isConnected) {\n                restoreFocusToElement(treeNode.nodeToRestore);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n\n            // If no nodeToRestore was found, focus the first element in the nearest\n            // ancestor scope that is still in the tree.\n            treeNode = clonedTree.getTreeNode(scopeRef);\n            while (treeNode) {\n              if (treeNode.scopeRef && treeNode.scopeRef.current && focusScopeTree.getTreeNode(treeNode.scopeRef)) {\n                let node = getFirstInScope(treeNode.scopeRef.current, true);\n                restoreFocusToElement(node);\n                return;\n              }\n              treeNode = treeNode.parent;\n            }\n          }\n        });\n      }\n    };\n  }, [scopeRef, restoreFocus]);\n}\n\nfunction restoreFocusToElement(node: FocusableElement) {\n  // Dispatch a custom event that parent elements can intercept to customize focus restoration.\n  // For example, virtualized collection components reuse DOM elements, so the original element\n  // might still exist in the DOM but representing a different item.\n  if (node.dispatchEvent(new CustomEvent(RESTORE_FOCUS_EVENT, {bubbles: true, cancelable: true}))) {\n    focusElement(node);\n  }\n}\n\n/**\n * Create a [TreeWalker]{@link https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker}\n * that matches all focusable/tabbable elements.\n */\nexport function getFocusableTreeWalker(root: Element, opts?: FocusManagerOptions, scope?: Element[]): ShadowTreeWalker | TreeWalker {\n  let filter = opts?.tabbable ? isTabbable : isFocusable;\n\n  // Ensure that root is an Element or fall back appropriately\n  let rootElement = root?.nodeType === Node.ELEMENT_NODE ? (root as Element) : null;\n\n  // Determine the document to use\n  let doc = getOwnerDocument(rootElement);\n\n  // Create a TreeWalker, ensuring the root is an Element or Document\n  let walker = createShadowTreeWalker(\n    doc,\n    root || doc,\n    NodeFilter.SHOW_ELEMENT,\n    {\n      acceptNode(node) {\n        // Skip nodes inside the starting node.\n        if (opts?.from?.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n\n        if (opts?.tabbable\n          && (node as Element).tagName === 'INPUT'\n          && (node as HTMLInputElement).getAttribute('type') === 'radio') {\n          // If the radio is in a form, we can get all the other radios by name\n          if (!isTabbableRadio(node as HTMLInputElement)) {\n            return NodeFilter.FILTER_REJECT;\n          }\n          // If the radio is in the same group as the current node and none are selected, we can skip it\n          if ((walker.currentNode as Element).tagName === 'INPUT'\n            && (walker.currentNode as HTMLInputElement).type === 'radio'\n            && (walker.currentNode as HTMLInputElement).name === (node as HTMLInputElement).name) {\n            return NodeFilter.FILTER_REJECT;\n          }\n        }\n\n        if (filter(node as Element)\n          && (!scope || isElementInScope(node as Element, scope))\n          && (!opts?.accept || opts.accept(node as Element))\n        ) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n\n        return NodeFilter.FILTER_SKIP;\n      }\n    }\n  );\n\n  if (opts?.from) {\n    walker.currentNode = opts.from;\n  }\n\n  return walker;\n}\n\n/**\n * Creates a FocusManager object that can be used to move focus within an element.\n */\nexport function createFocusManager(ref: RefObject<Element | null>, defaultOptions: FocusManagerOptions = {}): FocusManager {\n  return {\n    focusNext(opts: FocusManagerOptions = {}) {\n      let root = ref.current;\n      if (!root) {\n        return null;\n      }\n      let {from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept} = opts;\n      let node = from || getActiveElement(getOwnerDocument(root));\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      if (root.contains(node)) {\n        walker.currentNode = node!;\n      }\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (!nextNode && wrap) {\n        walker.currentNode = root;\n        nextNode = walker.nextNode() as FocusableElement;\n      }\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusPrevious(opts: FocusManagerOptions = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return null;\n      }\n      let {from, tabbable = defaultOptions.tabbable, wrap = defaultOptions.wrap, accept = defaultOptions.accept} = opts;\n      let node = from || getActiveElement(getOwnerDocument(root));\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      if (root.contains(node)) {\n        walker.currentNode = node!;\n      } else {\n        let next = last(walker);\n        if (next) {\n          focusElement(next, true);\n        }\n        return next ?? null;\n      }\n      let previousNode = walker.previousNode() as FocusableElement;\n      if (!previousNode && wrap) {\n        walker.currentNode = root;\n        let lastNode = last(walker);\n        if (!lastNode) {\n          // couldn't wrap\n          return null;\n        }\n        previousNode = lastNode;\n      }\n      if (previousNode) {\n        focusElement(previousNode, true);\n      }\n      return previousNode ?? null;\n    },\n    focusFirst(opts = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return null;\n      }\n      let {tabbable = defaultOptions.tabbable, accept = defaultOptions.accept} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      let nextNode = walker.nextNode() as FocusableElement;\n      if (nextNode) {\n        focusElement(nextNode, true);\n      }\n      return nextNode;\n    },\n    focusLast(opts = defaultOptions) {\n      let root = ref.current;\n      if (!root) {\n        return null;\n      }\n      let {tabbable = defaultOptions.tabbable, accept = defaultOptions.accept} = opts;\n      let walker = getFocusableTreeWalker(root, {tabbable, accept});\n      let next = last(walker);\n      if (next) {\n        focusElement(next, true);\n      }\n      return next ?? null;\n    }\n  };\n}\n\nfunction last(walker: ShadowTreeWalker | TreeWalker) {\n  let next: FocusableElement | undefined = undefined;\n  let last: FocusableElement;\n  do {\n    last = walker.lastChild() as FocusableElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n\n\nclass Tree {\n  root: TreeNode;\n  private fastMap = new Map<ScopeRef, TreeNode>();\n\n  constructor() {\n    this.root = new TreeNode({scopeRef: null});\n    this.fastMap.set(null, this.root);\n  }\n\n  get size(): number {\n    return this.fastMap.size;\n  }\n\n  getTreeNode(data: ScopeRef): TreeNode | undefined {\n    return this.fastMap.get(data);\n  }\n\n  addTreeNode(scopeRef: ScopeRef, parent: ScopeRef, nodeToRestore?: FocusableElement): void {\n    let parentNode = this.fastMap.get(parent ?? null);\n    if (!parentNode) {\n      return;\n    }\n    let node = new TreeNode({scopeRef});\n    parentNode.addChild(node);\n    node.parent = parentNode;\n    this.fastMap.set(scopeRef, node);\n    if (nodeToRestore) {\n      node.nodeToRestore = nodeToRestore;\n    }\n  }\n\n  addNode(node: TreeNode): void {\n    this.fastMap.set(node.scopeRef, node);\n  }\n\n  removeTreeNode(scopeRef: ScopeRef): void {\n    // never remove the root\n    if (scopeRef === null) {\n      return;\n    }\n    let node = this.fastMap.get(scopeRef);\n    if (!node) {\n      return;\n    }\n    let parentNode = node.parent;\n    // when we remove a scope, check if any sibling scopes are trying to restore focus to something inside the scope we're removing\n    // if we are, then replace the siblings restore with the restore from the scope we're removing\n    for (let current of this.traverse()) {\n      if (\n        current !== node &&\n        node.nodeToRestore &&\n        current.nodeToRestore &&\n        node.scopeRef &&\n        node.scopeRef.current &&\n        isElementInScope(current.nodeToRestore, node.scopeRef.current)\n      ) {\n        current.nodeToRestore = node.nodeToRestore;\n      }\n    }\n    let children = node.children;\n    if (parentNode) {\n      parentNode.removeChild(node);\n      if (children.size > 0) {\n        children.forEach(child => parentNode && parentNode.addChild(child));\n      }\n    }\n\n    this.fastMap.delete(node.scopeRef);\n  }\n\n  // Pre Order Depth First\n  *traverse(node: TreeNode = this.root): Generator<TreeNode> {\n    if (node.scopeRef != null) {\n      yield node;\n    }\n    if (node.children.size > 0) {\n      for (let child of node.children) {\n        yield* this.traverse(child);\n      }\n    }\n  }\n\n  clone(): Tree {\n    let newTree = new Tree();\n    for (let node of this.traverse()) {\n      newTree.addTreeNode(node.scopeRef, node.parent?.scopeRef ?? null, node.nodeToRestore);\n    }\n    return newTree;\n  }\n}\n\nclass TreeNode {\n  public scopeRef: ScopeRef;\n  public nodeToRestore?: FocusableElement;\n  public parent?: TreeNode;\n  public children: Set<TreeNode> = new Set();\n  public contain = false;\n\n  constructor(props: {scopeRef: ScopeRef}) {\n    this.scopeRef = props.scopeRef;\n  }\n  addChild(node: TreeNode): void {\n    this.children.add(node);\n    node.parent = this;\n  }\n  removeChild(node: TreeNode): void {\n    this.children.delete(node);\n    node.parent = undefined;\n  }\n}\n\nexport let focusScopeTree: Tree = new Tree();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}