{"ast":null,"code":"var $cagC1$react = require(\"react\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useUpdateEffect\", function () {\n  return $29293a6f5c75b37e$export$496315a1608d9602;\n});\nfunction $29293a6f5c75b37e$export$496315a1608d9602(effect, dependencies) {\n  var isInitialMount = (0, $cagC1$react.useRef)(true);\n  var lastDeps = (0, $cagC1$react.useRef)(null);\n  (0, $cagC1$react.useEffect)(function () {\n    isInitialMount.current = true;\n    return function () {\n      isInitialMount.current = false;\n    };\n  }, []);\n  (0, $cagC1$react.useEffect)(function () {\n    var prevDeps = lastDeps.current;\n    if (isInitialMount.current) isInitialMount.current = false;else if (!prevDeps || dependencies.some(function (dep, i) {\n      return !Object.is(dep, prevDeps[i]);\n    })) effect();\n    lastDeps.current = dependencies;\n  }, dependencies);\n}","map":{"version":3,"names":["$29293a6f5c75b37e$export$496315a1608d9602","effect","dependencies","isInitialMount","$cagC1$react","useRef","lastDeps","useEffect","current","prevDeps","some","dep","i","Object","is"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\utils\\dist\\packages\\@react-aria\\utils\\src\\useUpdateEffect.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {EffectCallback, useEffect, useRef} from 'react';\n\n// Like useEffect, but only called for updates after the initial render.\nexport function useUpdateEffect(effect: EffectCallback, dependencies: any[]): void {\n  const isInitialMount = useRef(true);\n  const lastDeps = useRef<any[] | null>(null);\n\n  useEffect(() => {\n    isInitialMount.current = true;\n    return () => {\n      isInitialMount.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    let prevDeps = lastDeps.current;\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    } else if (!prevDeps || dependencies.some((dep, i) => !Object.is(dep, prevDeps[i]))) {\n      effect();\n    }\n    lastDeps.current = dependencies;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n}\n"],"mappings":";;;;;;;;;;;;AAeO,SAASA,0CAAgBC,MAAsB,EAAEC,YAAmB;EACzE,IAAMC,cAAA,GAAiB,IAAAC,YAAA,CAAAC,MAAK,EAAE;EAC9B,IAAMC,QAAA,GAAW,IAAAF,YAAA,CAAAC,MAAK,EAAgB;EAEtC,IAAAD,YAAA,CAAAG,SAAQ,EAAE;IACRJ,cAAA,CAAeK,OAAO,GAAG;IACzB,OAAO;MACLL,cAAA,CAAeK,OAAO,GAAG;IAC3B;EACF,GAAG,EAAE;EAEL,IAAAJ,YAAA,CAAAG,SAAQ,EAAE;IACR,IAAIE,QAAA,GAAWH,QAAA,CAASE,OAAO;IAC/B,IAAIL,cAAA,CAAeK,OAAO,EACxBL,cAAA,CAAeK,OAAO,GAAG,WACpB,IAAI,CAACC,QAAA,IAAYP,YAAA,CAAaQ,IAAI,CAAC,UAACC,GAAA,EAAKC,CAAA;MAAA,OAAM,CAACC,MAAA,CAAOC,EAAE,CAACH,GAAA,EAAKF,QAAQ,CAACG,CAAA,CAAE;IAAA,IAC/EX,MAAA;IAEFK,QAAA,CAASE,OAAO,GAAGN,YAAA;EAErB,GAAGA,YAAA;AACL","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}