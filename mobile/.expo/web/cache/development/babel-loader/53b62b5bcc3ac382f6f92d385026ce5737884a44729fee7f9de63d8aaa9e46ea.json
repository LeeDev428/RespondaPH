{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTypeahead = useTypeahead;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _reducer = require(\"./reducer\");\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar stateChangeTypes = _interopRequireWildcard(require(\"./types\"));\nvar _reactNative = require(\"react-native\");\nvar _utils = require(\"./utils\");\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction isControlledProp(props, key) {\n  return props[key] !== undefined;\n}\nfunction useTypeahead(props) {\n  var defaultValues = Object.assign({}, _utils.dropdownDefaultStateValues);\n  defaultValues.isOpen = (0, _utils.getDefaultValue)(props, 'isOpen');\n  var _React$useReducer = _react.default.useReducer(_reducer.useTypeaheadReducer, defaultValues),\n    _React$useReducer2 = (0, _slicedToArray2.default)(_React$useReducer, 2),\n    state = _React$useReducer2[0],\n    dispatch = _React$useReducer2[1];\n  var dispatchWithProps = function dispatchWithProps(object) {\n    dispatch(Object.assign({}, object, {\n      props: props\n    }));\n  };\n  var inputValue = state.inputValue,\n    isOpen = state.isOpen;\n  var items = props.items,\n    onInputValueChange = props.onInputValueChange,\n    onSelectedItemChange = props.onSelectedItemChange,\n    selectedItem = props.selectedItem,\n    itemToString = props.itemToString;\n  var isControlled = isControlledProp(props, 'selectedItem');\n  (0, _react.useEffect)(function () {\n    if (isControlled) {\n      dispatch({\n        type: stateChangeTypes.ControlledPropUpdatedSelectedItem,\n        inputValue: itemToString(selectedItem)\n      });\n    }\n  }, [selectedItem, isControlled, itemToString]);\n  var onChangeText = function onChangeText(text) {\n    onInputValueChange === null || onInputValueChange === void 0 ? void 0 : onInputValueChange({\n      inputValue: text\n    });\n    dispatchWithProps({\n      type: stateChangeTypes.InputChange,\n      inputValue: text\n    });\n  };\n  var handleItemSelect = function handleItemSelect(item, index) {\n    onSelectedItemChange === null || onSelectedItemChange === void 0 ? void 0 : onSelectedItemChange(item);\n    dispatchWithProps({\n      type: stateChangeTypes.ItemClick,\n      index: index\n    });\n    _reactNative.Keyboard.dismiss();\n  };\n  var getMenuItemProps = function getMenuItemProps(item, index) {\n    return {\n      onPress: function onPress() {\n        return handleItemSelect(item, index);\n      },\n      accessible: true,\n      accessiblityRole: 'menuitem'\n    };\n  };\n  var getMenuProps = function getMenuProps() {\n    return {\n      accessible: true,\n      accessibilityRole: 'menu',\n      accessibilityHint: \"Showing \".concat(items.length, \" records\")\n    };\n  };\n  var getToggleButtonProps = function getToggleButtonProps() {\n    return {\n      onPress: function onPress() {\n        dispatchWithProps({\n          type: stateChangeTypes.ToggleButtonClick\n        });\n      }\n    };\n  };\n  var getInputProps = function getInputProps(propInputVal, propOnchangeText) {\n    return {\n      onChangeText: propInputVal ? propOnchangeText : onChangeText,\n      value: propInputVal ? propInputVal : inputValue,\n      accessibilityRole: 'combobox',\n      accessibilityLabel: 'Typeahead input',\n      accessibilityState: {\n        expanded: isOpen\n      }\n    };\n  };\n  return {\n    getInputProps: getInputProps,\n    getMenuItemProps: getMenuItemProps,\n    getMenuProps: getMenuProps,\n    getToggleButtonProps: getToggleButtonProps,\n    isOpen: isOpen\n  };\n}","map":{"version":3,"names":["_reducer","require","_react","_interopRequireWildcard","stateChangeTypes","_reactNative","_utils","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","isControlledProp","props","key","undefined","useTypeahead","defaultValues","assign","dropdownDefaultStateValues","isOpen","getDefaultValue","_React$useReducer","React","useReducer","useTypeaheadReducer","_React$useReducer2","_slicedToArray2","state","dispatch","dispatchWithProps","object","inputValue","items","onInputValueChange","onSelectedItemChange","selectedItem","itemToString","isControlled","useEffect","type","ControlledPropUpdatedSelectedItem","onChangeText","text","InputChange","handleItemSelect","item","index","ItemClick","Keyboard","dismiss","getMenuItemProps","onPress","accessible","accessiblityRole","getMenuProps","accessibilityRole","accessibilityHint","concat","length","getToggleButtonProps","ToggleButtonClick","getInputProps","propInputVal","propOnchangeText","value","accessibilityLabel","accessibilityState","expanded"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\components\\composites\\Typeahead\\useTypeahead\\useTypeahead.ts"],"sourcesContent":["import { useTypeaheadReducer } from './reducer';\nimport React, { useEffect } from 'react';\nimport * as stateChangeTypes from './types';\nimport type { AccessibilityRole } from 'react-native';\nimport { Keyboard } from 'react-native';\nimport { dropdownDefaultStateValues, getDefaultValue } from './utils';\n\nfunction isControlledProp(props: any, key: string) {\n  return props[key] !== undefined;\n}\n\nimport type { IUseTypeaheadProps } from './types';\n\nexport function useTypeahead(props: IUseTypeaheadProps) {\n  let defaultValues = { ...dropdownDefaultStateValues };\n  defaultValues.isOpen = getDefaultValue(props, 'isOpen');\n\n  const [state, dispatch] = React.useReducer(\n    useTypeaheadReducer,\n    defaultValues\n  );\n\n  const dispatchWithProps = (object: any) => {\n    dispatch({ ...object, props });\n  };\n\n  const { inputValue, isOpen } = state;\n\n  const {\n    items,\n    onInputValueChange,\n    onSelectedItemChange,\n    selectedItem,\n    itemToString,\n  } = props;\n\n  const isControlled = isControlledProp(props, 'selectedItem');\n\n  useEffect(() => {\n    if (isControlled) {\n      dispatch({\n        type: stateChangeTypes.ControlledPropUpdatedSelectedItem,\n        inputValue: itemToString(selectedItem),\n      });\n    }\n  }, [selectedItem, isControlled, itemToString]);\n\n  const onChangeText = (text: string) => {\n    onInputValueChange?.({ inputValue: text });\n    dispatchWithProps({ type: stateChangeTypes.InputChange, inputValue: text });\n  };\n\n  const handleItemSelect = (item: any, index: number) => {\n    onSelectedItemChange?.(item);\n    dispatchWithProps({ type: stateChangeTypes.ItemClick, index });\n    Keyboard.dismiss();\n  };\n\n  const getMenuItemProps = (item: any, index: number) => {\n    return {\n      onPress: () => handleItemSelect(item, index),\n      accessible: true,\n      accessiblityRole: 'menuitem' as AccessibilityRole,\n    };\n  };\n\n  const getMenuProps = () => {\n    return {\n      accessible: true,\n      accessibilityRole: 'menu' as AccessibilityRole,\n      accessibilityHint: `Showing ${items.length} records`,\n    };\n  };\n\n  const getToggleButtonProps = () => {\n    return {\n      onPress: () => {\n        dispatchWithProps({ type: stateChangeTypes.ToggleButtonClick });\n      },\n    };\n  };\n\n  const getInputProps = (propInputVal?: any, propOnchangeText?: any) => {\n    return {\n      onChangeText: propInputVal ? propOnchangeText : onChangeText,\n      value: propInputVal ? propInputVal : inputValue,\n      accessibilityRole: 'combobox' as AccessibilityRole,\n      accessibilityLabel: 'Typeahead input',\n      accessibilityState: {\n        expanded: isOpen,\n      },\n    };\n  };\n\n  return {\n    getInputProps,\n    getMenuItemProps,\n    getMenuProps,\n    getToggleButtonProps,\n    isOpen,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}