{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useBreakpointValue = useBreakpointValue;\nvar _reactNative = require(\"react-native\");\nvar _tools = require(\"../theme/tools\");\nvar _useTheme = require(\"./../hooks/useTheme\");\nfunction useBreakpointValue(values) {\n  var _useWindowDimensions;\n  var windowWidth = (_useWindowDimensions = (0, _reactNative.useWindowDimensions)()) === null || _useWindowDimensions === void 0 ? void 0 : _useWindowDimensions.width;\n  var theme = (0, _useTheme.useTheme)();\n  if ((0, _tools.hasValidBreakpointFormat)(values, theme.breakpoints)) {\n    var currentBreakpoint = (0, _tools.getClosestBreakpoint)(theme.breakpoints, windowWidth);\n    return (0, _tools.findLastValidBreakpoint)(values, theme.breakpoints, currentBreakpoint);\n  } else {\n    return values;\n  }\n}","map":{"version":3,"names":["_reactNative","require","_tools","_useTheme","useBreakpointValue","values","_useWindowDimensions","windowWidth","useWindowDimensions","width","theme","useTheme","hasValidBreakpointFormat","breakpoints","currentBreakpoint","getClosestBreakpoint","findLastValidBreakpoint"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\hooks\\useBreakpointValue.ts"],"sourcesContent":["import { useWindowDimensions } from 'react-native';\nimport {\n  getClosestBreakpoint,\n  hasValidBreakpointFormat,\n  findLastValidBreakpoint,\n} from '../theme/tools';\nimport { useTheme } from './../hooks/useTheme';\nimport type { ITheme } from '../theme/index';\n\ntype UseBreakpointValueParam =\n  | { [key in keyof ITheme['breakpoints']]?: any }\n  | Array<any>;\n\nexport function useBreakpointValue(values: UseBreakpointValueParam) {\n  let windowWidth = useWindowDimensions()?.width;\n  const theme = useTheme();\n\n  if (hasValidBreakpointFormat(values, theme.breakpoints)) {\n    let currentBreakpoint = getClosestBreakpoint(\n      theme.breakpoints,\n      windowWidth\n    );\n    return findLastValidBreakpoint(\n      values,\n      theme.breakpoints,\n      currentBreakpoint\n    );\n  } else {\n    return values;\n  }\n}\n"],"mappings":";;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAKA,IAAAE,SAAA,GAAAF,OAAA;AAOO,SAASG,kBAATA,CAA4BC,MAA5B,EAA6D;EAAA,IAAAC,oBAAA;EAClE,IAAIC,WAAW,IAAAD,oBAAA,GAAG,IAAAE,gCAAmB,GAAtB,cAAAF,oBAAA,uBAAGA,oBAAA,CAAuBG,KAAzC;EACA,IAAMC,KAAK,GAAG,IAAAC,kBAAQ,GAAtB;EAEA,IAAI,IAAAC,+BAAwB,EAACP,MAAD,EAASK,KAAK,CAACG,WAAf,CAA5B,EAAyD;IACvD,IAAIC,iBAAiB,GAAG,IAAAC,2BAAoB,EAC1CL,KAAK,CAACG,WADoC,EAE1CN,WAF0C,CAA5C;IAIA,OAAO,IAAAS,8BAAuB,EAC5BX,MAD4B,EAE5BK,KAAK,CAACG,WAFsB,EAG5BC,iBAH4B,CAA9B;EAKD,CAVD,MAUO;IACL,OAAOT,MAAP;EACD;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}