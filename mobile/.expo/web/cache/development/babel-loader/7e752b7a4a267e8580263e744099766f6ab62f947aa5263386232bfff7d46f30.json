{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Input = require(\"../../primitives/Input\");\nvar _Context = require(\"./Context\");\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\nvar _excluded = [\"isDisabled\"],\n  _excluded2 = [\"handleChange\", \"handleChangeWithoutCheck\", \"numberInputStepper\", \"numberInputValue\", \"isControlled\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar NumberInputFiled = function NumberInputFiled(_ref, ref) {\n  var isDisabled = _ref.isDisabled,\n    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var _React$useContext = _react.default.useContext(_Context.NumberInputContext),\n    handleChange = _React$useContext.handleChange,\n    handleChangeWithoutCheck = _React$useContext.handleChangeWithoutCheck,\n    numberInputStepper = _React$useContext.numberInputStepper,\n    numberInputValue = _React$useContext.numberInputValue,\n    isControlled = _React$useContext.isControlled,\n    context = (0, _objectWithoutProperties2.default)(_React$useContext, _excluded2);\n  var changeHandler = function changeHandler(inputValue) {\n    var minusIndex = inputValue.indexOf('-');\n    if (minusIndex !== -1 && minusIndex !== 0) {\n      inputValue = inputValue.replace('-', '');\n      inputValue = '-' + inputValue;\n    }\n    var value = parseInt(inputValue, 10);\n    if (isControlled) handleChange && handleChange(value);else if (value) handleChangeWithoutCheck && handleChangeWithoutCheck(value);else handleChangeWithoutCheck && handleChangeWithoutCheck(0);\n  };\n  var blurHandler = function blurHandler() {\n    if (numberInputValue) handleChange && handleChange(numberInputValue);\n  };\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n  return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(_Input.Input, _extends({\n    p: 0,\n    pl: 2\n  }, context, props, {\n    onBlur: function onBlur() {\n      return blurHandler();\n    },\n    isDisabled: isDisabled || context.isDisabled,\n    onChangeText: function onChangeText(inputValue) {\n      return changeHandler(inputValue);\n    },\n    keyboardType: \"numeric\",\n    value: \"\".concat(numberInputValue),\n    InputRightElement: numberInputStepper,\n    ref: ref\n  })));\n};\nvar _default = exports.default = _react.default.memo(_react.default.forwardRef(NumberInputFiled));","map":{"version":3,"names":["_react","_interopRequireDefault","require","_Input","_Context","_useHasResponsiveProps","_excluded","_excluded2","NumberInputFiled","_ref","ref","isDisabled","props","_objectWithoutProperties2","default","_React$useContext","React","useContext","NumberInputContext","handleChange","handleChangeWithoutCheck","numberInputStepper","numberInputValue","isControlled","context","changeHandler","inputValue","minusIndex","indexOf","replace","value","parseInt","blurHandler","useHasResponsiveProps","createElement","Fragment","Input","_extends","p","pl","onBlur","onChangeText","keyboardType","concat","InputRightElement","_default","exports","memo","forwardRef"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\components\\composites\\NumberInput\\NumberInputField.tsx"],"sourcesContent":["import React from 'react';\nimport { Input } from '../../primitives/Input';\nimport type { INumberInputContext, INumberInputFieldProps } from './types';\nimport { NumberInputContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst NumberInputFiled = (\n  { isDisabled, ...props }: INumberInputFieldProps,\n  ref: any\n) => {\n  const {\n    handleChange,\n    handleChangeWithoutCheck,\n    numberInputStepper,\n    numberInputValue,\n    isControlled,\n    ...context\n  }: INumberInputContext & {\n    handleChange?: (value: string | number) => void;\n    numberInputStepper?: any;\n  } = React.useContext(NumberInputContext);\n  const changeHandler = (inputValue: any) => {\n    let minusIndex = inputValue.indexOf('-');\n    if (minusIndex !== -1 && minusIndex !== 0) {\n      inputValue = inputValue.replace('-', '');\n      inputValue = '-' + inputValue;\n    }\n    const value = parseInt(inputValue, 10);\n    if (isControlled) handleChange && handleChange(value);\n    else if (value) handleChangeWithoutCheck && handleChangeWithoutCheck(value);\n    else handleChangeWithoutCheck && handleChangeWithoutCheck(0);\n  };\n  const blurHandler = () => {\n    if (numberInputValue) handleChange && handleChange(numberInputValue);\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <>\n      <Input\n        p={0}\n        pl={2}\n        {...context}\n        {...props}\n        onBlur={() => blurHandler()}\n        isDisabled={isDisabled || context.isDisabled}\n        onChangeText={(inputValue: any) => changeHandler(inputValue)}\n        keyboardType=\"numeric\"\n        value={`${numberInputValue}`}\n        InputRightElement={numberInputStepper}\n        ref={ref}\n      />\n    </>\n  );\n};\n\nexport default React.memo(React.forwardRef(NumberInputFiled));\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAEA,IAAAE,QAAA,GAAAF,OAAA;AACA,IAAAG,sBAAA,GAAAH,OAAA;AAAA,IAAAI,SAAA;EAAAC,UAAA;;;;;;;;;;;;;;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAEpBC,GAFuB,EAGpB;EAAA,IAFDC,UAAF,GAAAF,IAAA,CAAEE,UAAF;IAAiBC,KAAA,OAAAC,yBAAA,CAAAC,OAAA,EAAAL,IAAA,EAAAH,SAAA;EAGjB,IAAAS,iBAAA,GAUIC,cAAK,CAACC,UAAN,CAAiBC,2BAAjB,CAVJ;IACEC,YADI,GAAAJ,iBAAA,CACJI,YADI;IAEJC,wBAFI,GAAAL,iBAAA,CAEJK,wBAFI;IAGJC,kBAHI,GAAAN,iBAAA,CAGJM,kBAHI;IAIJC,gBAJI,GAAAP,iBAAA,CAIJO,gBAJI;IAKJC,YALI,GAAAR,iBAAA,CAKJQ,YALI;IAMDC,OAAA,OAAAX,yBAAA,CAAAC,OAAA,EAAAC,iBAAA,EAAAR,UAAA;EAKL,IAAMkB,aAAa,GAAI,SAAjBA,aAAaA,CAAIC,UAAD,EAAqB;IACzC,IAAIC,UAAU,GAAGD,UAAU,CAACE,OAAX,CAAmB,GAAnB,CAAjB;IACA,IAAID,UAAU,KAAK,CAAC,CAAhB,IAAqBA,UAAU,KAAK,CAAxC,EAA2C;MACzCD,UAAU,GAAGA,UAAU,CAACG,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,CAAb;MACAH,UAAU,GAAG,MAAMA,UAAnB;IACD;IACD,IAAMI,KAAK,GAAGC,QAAQ,CAACL,UAAD,EAAa,EAAb,CAAtB;IACA,IAAIH,YAAJ,EAAkBJ,YAAY,IAAIA,YAAY,CAACW,KAAD,CAA5B,CAAlB,KACK,IAAIA,KAAJ,EAAWV,wBAAwB,IAAIA,wBAAwB,CAACU,KAAD,CAApD,CAAX,KACAV,wBAAwB,IAAIA,wBAAwB,CAAC,CAAD,CAApD;EACN,CAVD;EAWA,IAAMY,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAIV,gBAAJ,EAAsBH,YAAY,IAAIA,YAAY,CAACG,gBAAD,CAA5B;EACvB,CAFD;EAIA,IAAI,IAAAW,4CAAqB,EAACrB,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACEI,cAAA,CAAAkB,aAAA,CAAAlB,cAAA,CAAAmB,QAAA,QACEnB,cAAA,CAAAkB,aAAA,CAACE,YAAD,EAAAC,QAAA;IACEC,CAAC,EAAE,CADL;IAEEC,EAAE,EAAE;EAFN,GAGMf,OAHN,EAIMZ,KAJN;IAKE4B,MAAM,EAAE,SAARA,MAAMA,CAAA;MAAA,OAAQR,WAAW,EAL3B;IAAA;IAMErB,UAAU,EAAEA,UAAU,IAAIa,OAAO,CAACb,UANpC;IAOE8B,YAAY,EAAG,SAAfA,YAAYA,CAAGf,UAAD;MAAA,OAAqBD,aAAa,CAACC,UAAD,CAPlD;IAAA;IAQEgB,YAAY,EAAC,SARf;IASEZ,KAAK,KAAAa,MAAA,CAAKrB,gBAAL,CATP;IAUEsB,iBAAiB,EAAEvB,kBAVrB;IAWEX,GAAG,EAAEA;EAXP,GADF,CADF;AAiBD,CAlDD;AAAA,IAAAmC,QAAA,GAAAC,OAAA,CAAAhC,OAAA,GAoDeE,cAAK,CAAC+B,IAAN,CAAW/B,cAAK,CAACgC,UAAN,CAAiBxC,gBAAjB,CAAX,CAAf","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}