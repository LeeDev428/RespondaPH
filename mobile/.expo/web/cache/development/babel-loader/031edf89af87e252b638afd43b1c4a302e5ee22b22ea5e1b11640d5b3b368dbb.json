{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isLight = exports.isDark = exports.getColor = void 0;\nexports.mode = mode;\nexports.randomColor = randomColor;\nexports.transparentize = exports.tone = void 0;\nvar _lodash = _interopRequireDefault(require(\"lodash.get\"));\nvar _lodash2 = _interopRequireDefault(require(\"lodash.isempty\"));\nvar _tinycolor = _interopRequireDefault(require(\"tinycolor2\"));\nfunction mode(light, dark) {\n  return function (props) {\n    return props.colorMode === 'dark' ? dark : light;\n  };\n}\nvar transparentize = exports.transparentize = function transparentize(color, opacity) {\n  return function (theme) {\n    var raw = getColor(theme, color);\n    return (0, _tinycolor.default)(raw).setAlpha(opacity).toRgbString();\n  };\n};\nvar getColor = exports.getColor = function getColor(theme, color, fallback) {\n  var hex = (0, _lodash.default)(theme, \"colors.\".concat(color), color);\n  var isValid = (0, _tinycolor.default)(hex).isValid();\n  return isValid ? hex : fallback;\n};\nvar tone = exports.tone = function tone(color) {\n  return function (theme) {\n    var hex = getColor(theme, color);\n    var isDark = (0, _tinycolor.default)(hex).isDark();\n    return isDark ? 'dark' : 'light';\n  };\n};\nvar isDark = exports.isDark = function isDark(color) {\n  return function (theme) {\n    return tone(color)(theme) === 'dark';\n  };\n};\nvar isLight = exports.isLight = function isLight(color) {\n  return function (theme) {\n    return tone(color)(theme) === 'light';\n  };\n};\nfunction randomColor(opts) {\n  var fallback = _tinycolor.default.random().toHexString();\n  if (!opts || (0, _lodash2.default)(opts)) {\n    return fallback;\n  }\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n  return fallback;\n}\nfunction randomFromList(list) {\n  return list[Math.floor(Math.random() * list.length)];\n}\nfunction randomColorFromList(str, list) {\n  var index = 0;\n  if (str.length === 0) return list[0];\n  for (var i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n  index = (index % list.length + list.length) % list.length;\n  return list[index];\n}\nfunction randomColorFromString(str) {\n  var hash = 0;\n  if (str.length === 0) return hash.toString();\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n  var color = '#';\n  for (var j = 0; j < 3; j++) {\n    var value = hash >> j * 8 & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n  return color;\n}","map":{"version":3,"names":["_lodash","_interopRequireDefault","require","_lodash2","_tinycolor","mode","light","dark","props","colorMode","transparentize","exports","color","opacity","theme","raw","getColor","Color","setAlpha","toRgbString","fallback","hex","get","concat","isValid","tone","isDark","isLight","randomColor","opts","random","toHexString","isEmpty","string","colors","randomColorFromList","randomColorFromString","randomFromList","list","Math","floor","length","str","index","i","charCodeAt","hash","toString","j","value","substr"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\theme\\v33x-theme\\tools\\colors.ts"],"sourcesContent":["import get from 'lodash.get';\nimport isEmpty from 'lodash.isempty';\nimport Color from 'tinycolor2';\nimport type { Dict } from './utils';\n\nexport function mode(light: any, dark: any) {\n  return (props: any) => (props.colorMode === 'dark' ? dark : light);\n}\n\nexport const transparentize = (color: string, opacity: number) => (\n  theme: Dict\n) => {\n  const raw = getColor(theme, color);\n  return Color(raw).setAlpha(opacity).toRgbString();\n};\n\nexport const getColor = (theme: Dict, color: string, fallback?: string) => {\n  const hex = get(theme, `colors.${color}`, color);\n  const isValid = Color(hex).isValid();\n  return isValid ? hex : fallback;\n};\n\nexport const tone = (color: string) => (theme: Dict) => {\n  const hex = getColor(theme, color);\n  const isDark = Color(hex).isDark();\n  return isDark ? 'dark' : 'light';\n};\n\nexport const isDark = (color: string) => (theme: Dict) =>\n  tone(color)(theme) === 'dark';\n\nexport const isLight = (color: string) => (theme: Dict) =>\n  tone(color)(theme) === 'light';\n\ninterface RandomColorOptions {\n  /**\n   * If passed, string will be used to generate\n   * random color\n   */\n  string?: string;\n  /**\n   * List of colors to pick from at random\n   */\n  colors?: string[];\n}\nexport function randomColor(opts?: RandomColorOptions) {\n  const fallback = Color.random().toHexString();\n\n  if (!opts || isEmpty(opts)) {\n    return fallback;\n  }\n\n  if (opts.string && opts.colors) {\n    return randomColorFromList(opts.string, opts.colors);\n  }\n\n  if (opts.string && !opts.colors) {\n    return randomColorFromString(opts.string);\n  }\n\n  if (opts.colors && !opts.string) {\n    return randomFromList(opts.colors);\n  }\n\n  return fallback;\n}\n\nfunction randomFromList(list: string[]) {\n  return list[Math.floor(Math.random() * list.length)];\n}\n\nfunction randomColorFromList(str: string, list: string[]) {\n  let index = 0;\n  if (str.length === 0) return list[0];\n  for (let i = 0; i < str.length; i++) {\n    index = str.charCodeAt(i) + ((index << 5) - index);\n    index = index & index;\n  }\n  index = ((index % list.length) + list.length) % list.length;\n  return list[index];\n}\n\nfunction randomColorFromString(str: string) {\n  let hash = 0;\n  if (str.length === 0) return hash.toString();\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    hash = hash & hash;\n  }\n  let color = '#';\n  for (let j = 0; j < 3; j++) {\n    const value = (hash >> (j * 8)) & 255;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n  return color;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}