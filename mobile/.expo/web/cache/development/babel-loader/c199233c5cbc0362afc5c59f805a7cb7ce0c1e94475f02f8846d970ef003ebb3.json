{"ast":null,"code":"var $aaa611146751592e$exports = require(\"./domHelpers.main.js\");\nvar $loak6$reactstatelyflags = require(\"@react-stately/flags\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"nodeContains\", function () {\n  return $d723bea02f3e2567$export$4282f70798064fe0;\n});\n$parcel$export(module.exports, \"getActiveElement\", function () {\n  return $d723bea02f3e2567$export$cd4e5573fbe2b576;\n});\n$parcel$export(module.exports, \"getEventTarget\", function () {\n  return $d723bea02f3e2567$export$e58f029f0fbfdb29;\n});\nfunction $d723bea02f3e2567$export$4282f70798064fe0(node, otherNode) {\n  if (!(0, $loak6$reactstatelyflags.shadowDOM)()) return otherNode && node ? node.contains(otherNode) : false;\n  if (!node || !otherNode) return false;\n  var currentNode = otherNode;\n  while (currentNode !== null) {\n    if (currentNode === node) return true;\n    if (currentNode.tagName === 'SLOT' && currentNode.assignedSlot) currentNode = currentNode.assignedSlot.parentNode;else if ((0, $aaa611146751592e$exports.isShadowRoot)(currentNode)) currentNode = currentNode.host;else currentNode = currentNode.parentNode;\n  }\n  return false;\n}\nvar $d723bea02f3e2567$export$cd4e5573fbe2b576 = function $d723bea02f3e2567$export$cd4e5573fbe2b576() {\n  var doc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  var _activeElement_shadowRoot;\n  if (!(0, $loak6$reactstatelyflags.shadowDOM)()) return doc.activeElement;\n  var activeElement = doc.activeElement;\n  while (activeElement && 'shadowRoot' in activeElement && ((_activeElement_shadowRoot = activeElement.shadowRoot) === null || _activeElement_shadowRoot === void 0 ? void 0 : _activeElement_shadowRoot.activeElement)) activeElement = activeElement.shadowRoot.activeElement;\n  return activeElement;\n};\nfunction $d723bea02f3e2567$export$e58f029f0fbfdb29(event) {\n  if ((0, $loak6$reactstatelyflags.shadowDOM)() && event.target.shadowRoot) {\n    if (event.composedPath) return event.composedPath()[0];\n  }\n  return event.target;\n}","map":{"version":3,"names":["$d723bea02f3e2567$export$4282f70798064fe0","node","otherNode","$loak6$reactstatelyflags","shadowDOM","contains","currentNode","tagName","assignedSlot","parentNode","$aaa611146751592e$exports","isShadowRoot","host","$d723bea02f3e2567$export$cd4e5573fbe2b576","doc","arguments","length","undefined","document","_activeElement_shadowRoot","activeElement","shadowRoot","$d723bea02f3e2567$export$e58f029f0fbfdb29","event","target","composedPath"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\utils\\dist\\packages\\@react-aria\\utils\\src\\shadowdom\\DOMFunctions.ts"],"sourcesContent":["// Source: https://github.com/microsoft/tabster/blob/a89fc5d7e332d48f68d03b1ca6e344489d1c3898/src/Shadowdomize/DOMFunctions.ts#L16\n\nimport {isShadowRoot} from '../domHelpers';\nimport {shadowDOM} from '@react-stately/flags';\n\n/**\n * ShadowDOM safe version of Node.contains.\n */\nexport function nodeContains(\n  node: Node | null | undefined,\n  otherNode: Node | null | undefined\n): boolean {\n  if (!shadowDOM()) {\n    return otherNode && node ? node.contains(otherNode) : false;\n  }\n\n  if (!node || !otherNode) {\n    return false;\n  }\n\n  let currentNode: HTMLElement | Node | null | undefined = otherNode;\n\n  while (currentNode !== null) {\n    if (currentNode === node) {\n      return true;\n    }\n\n    if ((currentNode as HTMLSlotElement).tagName === 'SLOT' &&\n      (currentNode as HTMLSlotElement).assignedSlot) {\n      // Element is slotted\n      currentNode = (currentNode as HTMLSlotElement).assignedSlot!.parentNode;\n    } else if (isShadowRoot(currentNode)) {\n      // Element is in shadow root\n      currentNode = currentNode.host;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return false;\n}\n\n/**\n * ShadowDOM safe version of document.activeElement.\n */\nexport const getActiveElement = (doc: Document = document): Element | null => {\n  if (!shadowDOM()) {\n    return doc.activeElement;\n  }\n  let activeElement: Element | null = doc.activeElement;\n\n  while (activeElement && 'shadowRoot' in activeElement &&\n  activeElement.shadowRoot?.activeElement) {\n    activeElement = activeElement.shadowRoot.activeElement;\n  }\n\n  return activeElement;\n};\n\n/**\n * ShadowDOM safe version of event.target.\n */\nexport function getEventTarget<T extends Event>(event: T): Element {\n  if (shadowDOM() && (event.target as HTMLElement).shadowRoot) {\n    if (event.composedPath) {\n      return event.composedPath()[0] as Element;\n    }\n  }\n  return event.target as Element;\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAQO,SAASA,0CACdC,IAA6B,EAC7BC,SAAkC;EAElC,IAAI,CAAC,IAAAC,wBAAA,CAAAC,SAAQ,KACX,OAAOF,SAAA,IAAaD,IAAA,GAAOA,IAAA,CAAKI,QAAQ,CAACH,SAAA,IAAa;EAGxD,IAAI,CAACD,IAAA,IAAQ,CAACC,SAAA,EACZ,OAAO;EAGT,IAAII,WAAA,GAAqDJ,SAAA;EAEzD,OAAOI,WAAA,KAAgB,MAAM;IAC3B,IAAIA,WAAA,KAAgBL,IAAA,EAClB,OAAO;IAGT,IAAIK,WAAC,CAAgCC,OAAO,KAAK,UAC/CD,WAAC,CAAgCE,YAAY,EAE7CF,WAAA,GAAcA,WAAC,CAAgCE,YAAY,CAAEC,UAAU,MAClE,IAAI,IAAAC,yBAAA,CAAAC,YAAW,EAAEL,WAAA,GAEtBA,WAAA,GAAcA,WAAA,CAAYM,IAAI,MAE9BN,WAAA,GAAcA,WAAA,CAAYG,UAAU;EAExC;EAEA,OAAO;AACT;AAKO,IAAMI,yCAAA,GAAmB,SAAnBA,0CAAA,EAA4C;EAAA,IAAxBC,GAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAgBG,QAAQ;MAOvDC,yBAAA;EANA,IAAI,CAAC,IAAAhB,wBAAA,CAAAC,SAAQ,KACX,OAAOU,GAAA,CAAIM,aAAa;EAE1B,IAAIA,aAAA,GAAgCN,GAAA,CAAIM,aAAa;EAErD,OAAOA,aAAA,IAAiB,gBAAgBA,aAAA,MACxCD,yBAAA,GAAAC,aAAA,CAAcC,UAAU,cAAxBF,yBAAA,uBAAAA,yBAAA,CAA0BC,aAAa,GACrCA,aAAA,GAAgBA,aAAA,CAAcC,UAAU,CAACD,aAAa;EAGxD,OAAOA,aAAA;AACT;AAKO,SAASE,0CAAgCC,KAAQ;EACtD,IAAI,IAAApB,wBAAA,CAAAC,SAAQ,OAAOmB,KAAC,CAAMC,MAAM,CAAiBH,UAAU,EAAE;IAC3D,IAAIE,KAAA,CAAME,YAAY,EACpB,OAAOF,KAAA,CAAME,YAAY,EAAE,CAAC,EAAE;EAElC;EACA,OAAOF,KAAA,CAAMC,MAAM;AACrB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}