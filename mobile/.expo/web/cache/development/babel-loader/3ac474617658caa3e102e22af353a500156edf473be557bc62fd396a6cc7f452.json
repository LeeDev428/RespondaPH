{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useKeyboardBottomInset = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar useKeyboardBottomInset = exports.useKeyboardBottomInset = function useKeyboardBottomInset() {\n  var _React$useState = React.useState(0),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    bottom = _React$useState2[0],\n    setBottom = _React$useState2[1];\n  var subscriptions = React.useRef([]);\n  React.useEffect(function () {\n    function onKeyboardChange(e) {\n      if (e.startCoordinates && e.endCoordinates.screenY <= e.startCoordinates.screenY) setBottom(e.endCoordinates.height / 2);else setBottom(0);\n    }\n    if (_reactNative.Platform.OS === 'ios') {\n      subscriptions.current = [_reactNative.Keyboard.addListener('keyboardWillChangeFrame', onKeyboardChange)];\n    } else {\n      subscriptions.current = [_reactNative.Keyboard.addListener('keyboardDidHide', onKeyboardChange), _reactNative.Keyboard.addListener('keyboardDidShow', onKeyboardChange)];\n    }\n    return function () {\n      subscriptions.current.forEach(function (subscription) {\n        subscription.remove();\n      });\n    };\n  }, [setBottom, subscriptions]);\n  return bottom;\n};","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","useKeyboardBottomInset","exports","_React$useState","useState","_React$useState2","_slicedToArray2","bottom","setBottom","subscriptions","useRef","useEffect","onKeyboardChange","startCoordinates","endCoordinates","screenY","height","Platform","OS","current","Keyboard","addListener","forEach","subscription","remove"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\utils\\useKeyboardBottomInset.ts"],"sourcesContent":["import * as React from 'react';\nimport { Keyboard, Platform, KeyboardEvent } from 'react-native';\n\nexport const useKeyboardBottomInset = () => {\n  const [bottom, setBottom] = React.useState(0);\n  const subscriptions = React.useRef<any[]>([]);\n\n  React.useEffect(() => {\n    function onKeyboardChange(e: KeyboardEvent) {\n      if (\n        e.startCoordinates &&\n        e.endCoordinates.screenY <= e.startCoordinates.screenY\n      )\n        setBottom(e.endCoordinates.height / 2);\n      else setBottom(0);\n    }\n\n    if (Platform.OS === 'ios') {\n      subscriptions.current = [\n        Keyboard.addListener('keyboardWillChangeFrame', onKeyboardChange),\n      ];\n    } else {\n      subscriptions.current = [\n        Keyboard.addListener('keyboardDidHide', onKeyboardChange),\n        Keyboard.addListener('keyboardDidShow', onKeyboardChange),\n      ];\n    }\n    return () => {\n      subscriptions.current.forEach((subscription) => {\n        subscription.remove();\n      });\n    };\n  }, [setBottom, subscriptions]);\n\n  return bottom;\n};\n"],"mappings":";;;;;;AAAA,IAAAA,KAAA,GAAAC,uBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAAA,SAAAD,wBAAAG,CAAA,EAAAC,CAAA,6BAAAC,OAAA,MAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAL,uBAAA,YAAAA,wBAAAG,CAAA,EAAAC,CAAA,SAAAA,CAAA,IAAAD,CAAA,IAAAA,CAAA,CAAAK,UAAA,SAAAL,CAAA,MAAAM,CAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,SAAA,QAAAC,OAAA,EAAAV,CAAA,iBAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,SAAAQ,CAAA,MAAAF,CAAA,GAAAL,CAAA,GAAAG,CAAA,GAAAD,CAAA,QAAAG,CAAA,CAAAK,GAAA,CAAAX,CAAA,UAAAM,CAAA,CAAAM,GAAA,CAAAZ,CAAA,GAAAM,CAAA,CAAAO,GAAA,CAAAb,CAAA,EAAAQ,CAAA,cAAAM,EAAA,IAAAd,CAAA,gBAAAc,EAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,EAAA,OAAAP,CAAA,IAAAD,CAAA,GAAAW,MAAA,CAAAC,cAAA,KAAAD,MAAA,CAAAE,wBAAA,CAAAnB,CAAA,EAAAc,EAAA,OAAAP,CAAA,CAAAK,GAAA,IAAAL,CAAA,CAAAM,GAAA,IAAAP,CAAA,CAAAE,CAAA,EAAAM,EAAA,EAAAP,CAAA,IAAAC,CAAA,CAAAM,EAAA,IAAAd,CAAA,CAAAc,EAAA,WAAAN,CAAA,KAAAR,CAAA,EAAAC,CAAA;AAEO,IAAMmB,sBAAsB,GAAAC,OAAA,CAAAD,sBAAA,GAAG,SAAzBA,sBAAsBA,CAAA,EAAS;EAC1C,IAAAE,eAAA,GAA4B1B,KAAK,CAAC2B,QAAN,CAAe,CAAf,CAA5B;IAAAC,gBAAA,OAAAC,eAAA,CAAAf,OAAA,EAAAY,eAAA;IAAOI,MAAD,GAAAF,gBAAA;IAASG,SAAT,GAAAH,gBAAA;EACN,IAAMI,aAAa,GAAGhC,KAAK,CAACiC,MAAN,CAAoB,EAApB,CAAtB;EAEAjC,KAAK,CAACkC,SAAN,CAAgB,YAAM;IACpB,SAASC,gBAATA,CAA0B/B,CAA1B,EAA4C;MAC1C,IACEA,CAAC,CAACgC,gBAAF,IACAhC,CAAC,CAACiC,cAAF,CAAiBC,OAAjB,IAA4BlC,CAAC,CAACgC,gBAAF,CAAmBE,OAFjD,EAIEP,SAAS,CAAC3B,CAAC,CAACiC,cAAF,CAAiBE,MAAjB,GAA0B,CAA3B,CAAT,CAJF,KAKKR,SAAS,CAAC,CAAD,CAAT;IACN;IAED,IAAIS,qBAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;MACzBT,aAAa,CAACU,OAAd,GAAwB,CACtBC,qBAAQ,CAACC,WAAT,CAAqB,yBAArB,EAAgDT,gBAAhD,CADsB,CAAxB;IAGD,CAJD,MAIO;MACLH,aAAa,CAACU,OAAd,GAAwB,CACtBC,qBAAQ,CAACC,WAAT,CAAqB,iBAArB,EAAwCT,gBAAxC,CADsB,EAEtBQ,qBAAQ,CAACC,WAAT,CAAqB,iBAArB,EAAwCT,gBAAxC,CAFsB,CAAxB;IAID;IACD,OAAO,YAAM;MACXH,aAAa,CAACU,OAAd,CAAsBG,OAAtB,CAA+B,UAAAC,YAAD,EAAkB;QAC9CA,YAAY,CAACC,MAAb;MACD,CAFD;IAGD,CAJD;EAKD,CAzBD,EAyBG,CAAChB,SAAD,EAAYC,aAAZ,CAzBH;EA2BA,OAAOF,MAAP;AACD,CAhCM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}