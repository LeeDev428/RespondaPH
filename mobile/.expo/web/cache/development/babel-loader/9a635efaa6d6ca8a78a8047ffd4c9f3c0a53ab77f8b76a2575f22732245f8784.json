{"ast":null,"code":"var $62347d8c4183e713$exports = require(\"./useSafelyMouseToSubmenu.main.js\");\nvar $23MMN$reactariautils = require(\"@react-aria/utils\");\nvar $23MMN$react = require(\"react\");\nvar $23MMN$reactariai18n = require(\"@react-aria/i18n\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useSubmenuTrigger\", function () {\n  return $5f4753043c9f6cdf$export$7138b0d059a6e743;\n});\nfunction $5f4753043c9f6cdf$export$7138b0d059a6e743(props, state, ref) {\n  var parentMenuRef = props.parentMenuRef,\n    submenuRef = props.submenuRef,\n    _props$type = props.type,\n    type = _props$type === void 0 ? 'menu' : _props$type,\n    isDisabled = props.isDisabled,\n    _props$delay = props.delay,\n    delay = _props$delay === void 0 ? 200 : _props$delay,\n    shouldUseVirtualFocus = props.shouldUseVirtualFocus;\n  var submenuTriggerId = (0, $23MMN$reactariautils.useId)();\n  var overlayId = (0, $23MMN$reactariautils.useId)();\n  var _ref = (0, $23MMN$reactariai18n.useLocale)(),\n    direction = _ref.direction;\n  var openTimeout = (0, $23MMN$react.useRef)(undefined);\n  var cancelOpenTimeout = (0, $23MMN$react.useCallback)(function () {\n    if (openTimeout.current) {\n      clearTimeout(openTimeout.current);\n      openTimeout.current = undefined;\n    }\n  }, [openTimeout]);\n  var onSubmenuOpen = (0, $23MMN$reactariautils.useEffectEvent)(function (focusStrategy) {\n    cancelOpenTimeout();\n    state.open(focusStrategy);\n  });\n  var onSubmenuClose = (0, $23MMN$reactariautils.useEffectEvent)(function () {\n    cancelOpenTimeout();\n    state.close();\n  });\n  (0, $23MMN$reactariautils.useLayoutEffect)(function () {\n    return function () {\n      cancelOpenTimeout();\n    };\n  }, [cancelOpenTimeout]);\n  var submenuKeyDown = function submenuKeyDown(e) {\n    if (!e.currentTarget.contains(document.activeElement)) return;\n    switch (e.key) {\n      case 'ArrowLeft':\n        if (direction === 'ltr' && e.currentTarget.contains(e.target)) {\n          e.preventDefault();\n          e.stopPropagation();\n          onSubmenuClose();\n          if (!shouldUseVirtualFocus && ref.current) (0, $23MMN$reactariautils.focusWithoutScrolling)(ref.current);\n        }\n        break;\n      case 'ArrowRight':\n        if (direction === 'rtl' && e.currentTarget.contains(e.target)) {\n          e.preventDefault();\n          e.stopPropagation();\n          onSubmenuClose();\n          if (!shouldUseVirtualFocus && ref.current) (0, $23MMN$reactariautils.focusWithoutScrolling)(ref.current);\n        }\n        break;\n      case 'Escape':\n        var _submenuRef_current;\n        if ((_submenuRef_current = submenuRef.current) === null || _submenuRef_current === void 0 ? void 0 : _submenuRef_current.contains(e.target)) {\n          e.stopPropagation();\n          onSubmenuClose();\n          if (!shouldUseVirtualFocus && ref.current) (0, $23MMN$reactariautils.focusWithoutScrolling)(ref.current);\n        }\n        break;\n    }\n  };\n  var _state_focusStrategy;\n  var submenuProps = Object.assign({\n    id: overlayId,\n    'aria-labelledby': submenuTriggerId,\n    submenuLevel: state.submenuLevel\n  }, type === 'menu' && {\n    onClose: state.closeAll,\n    autoFocus: (_state_focusStrategy = state.focusStrategy) !== null && _state_focusStrategy !== void 0 ? _state_focusStrategy : undefined,\n    onKeyDown: submenuKeyDown\n  });\n  var submenuTriggerKeyDown = function submenuTriggerKeyDown(e) {\n    switch (e.key) {\n      case 'ArrowRight':\n        if (!isDisabled) {\n          if (direction === 'ltr') {\n            e.preventDefault();\n            if (!state.isOpen) onSubmenuOpen('first');\n            if (type === 'menu' && !!(submenuRef === null || submenuRef === void 0 ? void 0 : submenuRef.current) && document.activeElement === (ref === null || ref === void 0 ? void 0 : ref.current)) (0, $23MMN$reactariautils.focusWithoutScrolling)(submenuRef.current);\n          } else if (state.isOpen) onSubmenuClose();else e.continuePropagation();\n        }\n        break;\n      case 'ArrowLeft':\n        if (!isDisabled) {\n          if (direction === 'rtl') {\n            e.preventDefault();\n            if (!state.isOpen) onSubmenuOpen('first');\n            if (type === 'menu' && !!(submenuRef === null || submenuRef === void 0 ? void 0 : submenuRef.current) && document.activeElement === (ref === null || ref === void 0 ? void 0 : ref.current)) (0, $23MMN$reactariautils.focusWithoutScrolling)(submenuRef.current);\n          } else if (state.isOpen) onSubmenuClose();else e.continuePropagation();\n        }\n        break;\n      default:\n        e.continuePropagation();\n        break;\n    }\n  };\n  var onPressStart = function onPressStart(e) {\n    if (!isDisabled && (e.pointerType === 'virtual' || e.pointerType === 'keyboard')) onSubmenuOpen('first');\n  };\n  var onPress = function onPress(e) {\n    if (!isDisabled && (e.pointerType === 'touch' || e.pointerType === 'mouse')) onSubmenuOpen();\n  };\n  var onHoverChange = function onHoverChange(isHovered) {\n    if (!isDisabled) {\n      if (isHovered && !state.isOpen) {\n        if (!openTimeout.current) openTimeout.current = setTimeout(function () {\n          onSubmenuOpen();\n        }, delay);\n      } else if (!isHovered) cancelOpenTimeout();\n    }\n  };\n  (0, $23MMN$reactariautils.useEvent)(parentMenuRef, 'focusin', function (e) {\n    var _parentMenuRef_current;\n    if (state.isOpen && ((_parentMenuRef_current = parentMenuRef.current) === null || _parentMenuRef_current === void 0 ? void 0 : _parentMenuRef_current.contains(e.target)) && e.target !== ref.current) onSubmenuClose();\n  });\n  var shouldCloseOnInteractOutside = function shouldCloseOnInteractOutside(target) {\n    if (target !== ref.current) return true;\n    return false;\n  };\n  (0, $62347d8c4183e713$exports.useSafelyMouseToSubmenu)({\n    menuRef: parentMenuRef,\n    submenuRef: submenuRef,\n    isOpen: state.isOpen,\n    isDisabled: isDisabled\n  });\n  return {\n    submenuTriggerProps: {\n      id: submenuTriggerId,\n      'aria-controls': state.isOpen ? overlayId : undefined,\n      'aria-haspopup': !isDisabled ? type : undefined,\n      'aria-expanded': state.isOpen ? 'true' : 'false',\n      onPressStart: onPressStart,\n      onPress: onPress,\n      onHoverChange: onHoverChange,\n      onKeyDown: submenuTriggerKeyDown,\n      isOpen: state.isOpen\n    },\n    submenuProps: submenuProps,\n    popoverProps: {\n      isNonModal: true,\n      shouldCloseOnInteractOutside: shouldCloseOnInteractOutside\n    }\n  };\n}","map":{"version":3,"names":["$5f4753043c9f6cdf$export$7138b0d059a6e743","props","state","ref","parentMenuRef","submenuRef","_props$type","type","isDisabled","_props$delay","delay","shouldUseVirtualFocus","submenuTriggerId","$23MMN$reactariautils","useId","overlayId","_ref","$23MMN$reactariai18n","useLocale","direction","openTimeout","$23MMN$react","useRef","undefined","cancelOpenTimeout","useCallback","current","clearTimeout","onSubmenuOpen","useEffectEvent","focusStrategy","open","onSubmenuClose","close","useLayoutEffect","submenuKeyDown","e","currentTarget","contains","document","activeElement","key","target","preventDefault","stopPropagation","focusWithoutScrolling","_submenuRef_current","_state_focusStrategy","submenuProps","Object","assign","id","submenuLevel","onClose","closeAll","autoFocus","onKeyDown","submenuTriggerKeyDown","isOpen","continuePropagation","onPressStart","pointerType","onPress","onHoverChange","isHovered","setTimeout","useEvent","_parentMenuRef_current","shouldCloseOnInteractOutside","$62347d8c4183e713$exports","useSafelyMouseToSubmenu","menuRef","submenuTriggerProps","popoverProps","isNonModal"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\menu\\dist\\packages\\@react-aria\\menu\\src\\useSubmenuTrigger.ts"],"sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaMenuItemProps} from './useMenuItem';\nimport {AriaMenuOptions} from './useMenu';\nimport type {AriaPopoverProps, OverlayProps} from '@react-aria/overlays';\nimport {FocusableElement, FocusStrategy, KeyboardEvent, Node, PressEvent, RefObject} from '@react-types/shared';\nimport {focusWithoutScrolling, useEffectEvent, useEvent, useId, useLayoutEffect} from '@react-aria/utils';\nimport type {SubmenuTriggerState} from '@react-stately/menu';\nimport {useCallback, useRef} from 'react';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSafelyMouseToSubmenu} from './useSafelyMouseToSubmenu';\n\nexport interface AriaSubmenuTriggerProps {\n  /**\n   * An object representing the submenu trigger menu item. Contains all the relevant information that makes up the menu item.\n   * @deprecated\n   */\n  node?: Node<unknown>,\n  /** Whether the submenu trigger is disabled. */\n  isDisabled?: boolean,\n  /** The type of the contents that the submenu trigger opens. */\n  type?: 'dialog' | 'menu',\n  /** Ref of the menu that contains the submenu trigger. */\n  parentMenuRef: RefObject<HTMLElement | null>,\n  /** Ref of the submenu opened by the submenu trigger. */\n  submenuRef: RefObject<HTMLElement | null>,\n  /**\n   * The delay time in milliseconds for the submenu to appear after hovering over the trigger.\n   * @default 200\n   */\n  delay?: number,\n  /** Whether the submenu trigger uses virtual focus. */\n  shouldUseVirtualFocus?: boolean\n}\n\ninterface SubmenuTriggerProps extends Omit<AriaMenuItemProps, 'key'> {\n  /** Whether the submenu trigger is in an expanded state. */\n  isOpen: boolean\n}\n\ninterface SubmenuProps<T> extends AriaMenuOptions<T> {\n  /** The level of the submenu. */\n  submenuLevel: number\n}\n\nexport interface SubmenuTriggerAria<T> {\n  /** Props for the submenu trigger menu item. */\n  submenuTriggerProps: SubmenuTriggerProps,\n  /** Props for the submenu controlled by the submenu trigger menu item. */\n  submenuProps: SubmenuProps<T>,\n  /** Props for the submenu's popover container. */\n  popoverProps: Pick<AriaPopoverProps, 'isNonModal' | 'shouldCloseOnInteractOutside'> & Pick<OverlayProps, 'disableFocusManagement'>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a submenu trigger and its associated submenu.\n * @param props - Props for the submenu trigger and refs attach to its submenu and parent menu.\n * @param state - State for the submenu trigger.\n * @param ref - Ref to the submenu trigger element.\n */\nexport function useSubmenuTrigger<T>(props: AriaSubmenuTriggerProps, state: SubmenuTriggerState, ref: RefObject<FocusableElement | null>): SubmenuTriggerAria<T> {\n  let {parentMenuRef, submenuRef, type = 'menu', isDisabled, delay = 200, shouldUseVirtualFocus} = props;\n  let submenuTriggerId = useId();\n  let overlayId = useId();\n  let {direction} = useLocale();\n  let openTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n  let cancelOpenTimeout = useCallback(() => {\n    if (openTimeout.current) {\n      clearTimeout(openTimeout.current);\n      openTimeout.current = undefined;\n    }\n  }, [openTimeout]);\n\n  let onSubmenuOpen = useEffectEvent((focusStrategy?: FocusStrategy) => {\n    cancelOpenTimeout();\n    state.open(focusStrategy);\n  });\n\n  let onSubmenuClose = useEffectEvent(() => {\n    cancelOpenTimeout();\n    state.close();\n  });\n\n  useLayoutEffect(() => {\n    return () => {\n      cancelOpenTimeout();\n    };\n  }, [cancelOpenTimeout]);\n\n  let submenuKeyDown = (e: KeyboardEvent) => {\n    // If focus is not within the menu, assume virtual focus is being used.\n    // This means some other input element is also within the popover, so we shouldn't close the menu.\n    if (!e.currentTarget.contains(document.activeElement)) {\n      return;\n    }\n\n    switch (e.key) {\n      case 'ArrowLeft':\n        if (direction === 'ltr' && e.currentTarget.contains(e.target as Element)) {\n          e.preventDefault();\n          e.stopPropagation();\n          onSubmenuClose();\n          if (!shouldUseVirtualFocus && ref.current) {\n            focusWithoutScrolling(ref.current);\n          }\n        }\n        break;\n      case 'ArrowRight':\n        if (direction === 'rtl' && e.currentTarget.contains(e.target as Element)) {\n          e.preventDefault();\n          e.stopPropagation();\n          onSubmenuClose();\n          if (!shouldUseVirtualFocus && ref.current) {\n            focusWithoutScrolling(ref.current);\n          }\n        }\n        break;\n      case 'Escape':\n        // TODO: can remove this when we fix collection event leaks\n        if (submenuRef.current?.contains(e.target as Element)) {\n          e.stopPropagation();\n          onSubmenuClose();\n          if (!shouldUseVirtualFocus && ref.current) {\n            focusWithoutScrolling(ref.current);\n          }\n        }\n        break;\n    }\n  };\n\n  let submenuProps = {\n    id: overlayId,\n    'aria-labelledby': submenuTriggerId,\n    submenuLevel: state.submenuLevel,\n    ...(type === 'menu' && {\n      onClose: state.closeAll,\n      autoFocus: state.focusStrategy ?? undefined,\n      onKeyDown: submenuKeyDown\n    })\n  };\n\n  let submenuTriggerKeyDown = (e: KeyboardEvent) => {\n    switch (e.key) {\n      case 'ArrowRight':\n        if (!isDisabled) {\n          if (direction === 'ltr') {\n            e.preventDefault();\n            if (!state.isOpen) {\n              onSubmenuOpen('first');\n            }\n\n            if (type === 'menu' && !!submenuRef?.current && document.activeElement === ref?.current) {\n              focusWithoutScrolling(submenuRef.current);\n            }\n          } else if (state.isOpen) {\n            onSubmenuClose();\n          } else {\n            e.continuePropagation();\n          }\n        }\n\n        break;\n      case 'ArrowLeft':\n        if (!isDisabled) {\n          if (direction === 'rtl') {\n            e.preventDefault();\n            if (!state.isOpen) {\n              onSubmenuOpen('first');\n            }\n\n            if (type === 'menu' && !!submenuRef?.current && document.activeElement === ref?.current) {\n              focusWithoutScrolling(submenuRef.current);\n            }\n          } else if (state.isOpen) {\n            onSubmenuClose();\n          } else {\n            e.continuePropagation();\n          }\n        }\n        break;\n      default:\n        e.continuePropagation();\n        break;\n    }\n  };\n\n  let onPressStart = (e: PressEvent) => {\n    if (!isDisabled && (e.pointerType === 'virtual' || e.pointerType === 'keyboard')) {\n      // If opened with a screen reader or keyboard, auto focus the first submenu item.\n      onSubmenuOpen('first');\n    }\n  };\n\n  let onPress = (e: PressEvent) => {\n    if (!isDisabled && (e.pointerType === 'touch' || e.pointerType === 'mouse')) {\n      // For touch or on a desktop device with a small screen open on press up to possible problems with\n      // press up happening on the newly opened tray items\n      onSubmenuOpen();\n    }\n  };\n\n  let onHoverChange = (isHovered) => {\n    if (!isDisabled) {\n      if (isHovered && !state.isOpen) {\n        if (!openTimeout.current) {\n          openTimeout.current = setTimeout(() => {\n            onSubmenuOpen();\n          }, delay);\n        }\n      } else if (!isHovered) {\n        cancelOpenTimeout();\n      }\n    }\n  };\n\n  useEvent(parentMenuRef, 'focusin', (e) => {\n    // If we detect focus moved to a different item in the same menu that the currently open submenu trigger is in\n    // then close the submenu. This is for a case where the user hovers a root menu item when multiple submenus are open\n    if (state.isOpen && (parentMenuRef.current?.contains(e.target as HTMLElement) && e.target !== ref.current)) {\n      onSubmenuClose();\n    }\n  });\n\n  let shouldCloseOnInteractOutside = (target) => {\n    if (target !== ref.current) {\n      return true;\n    }\n\n    return false;\n  };\n\n  useSafelyMouseToSubmenu({menuRef: parentMenuRef, submenuRef, isOpen: state.isOpen, isDisabled: isDisabled});\n\n  return {\n    submenuTriggerProps: {\n      id: submenuTriggerId,\n      'aria-controls': state.isOpen ? overlayId : undefined,\n      'aria-haspopup': !isDisabled ? type : undefined,\n      'aria-expanded': state.isOpen ? 'true' : 'false',\n      onPressStart,\n      onPress,\n      onHoverChange,\n      onKeyDown: submenuTriggerKeyDown,\n      isOpen: state.isOpen\n    },\n    submenuProps,\n    popoverProps: {\n      isNonModal: true,\n      shouldCloseOnInteractOutside\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}