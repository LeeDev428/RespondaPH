{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extendTheme = extendTheme;\nvar _theme = require(\"./../theme\");\nvar _lodash = _interopRequireDefault(require(\"lodash.mergewith\"));\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\nfunction extendTheme(overrides) {\n  function customizer(source, override) {\n    if (isFunction(source)) {\n      return function () {\n        var sourceValue = source.apply(void 0, arguments);\n        var overrideValue = isFunction(override) ? override.apply(void 0, arguments) : override;\n        return (0, _lodash.default)({}, sourceValue, overrideValue, customizer);\n      };\n    }\n    return undefined;\n  }\n  for (var _len = arguments.length, restOverrides = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    restOverrides[_key - 1] = arguments[_key];\n  }\n  var finalOverrides = [overrides].concat(restOverrides).reduce(function (prevValue, currentValue) {\n    return (0, _lodash.default)({}, prevValue, currentValue, customizer);\n  }, _theme.theme);\n  return finalOverrides;\n}","map":{"version":3,"names":["_theme","require","_lodash","_interopRequireDefault","isFunction","value","extendTheme","overrides","customizer","source","override","sourceValue","apply","arguments","overrideValue","mergeWith","undefined","_len","length","restOverrides","Array","_key","finalOverrides","concat","reduce","prevValue","currentValue","defaultTheme"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\core\\extendTheme.tsx"],"sourcesContent":["import { theme as defaultTheme, Theme } from './../theme';\nimport mergeWith from 'lodash.mergewith';\n\nfunction isFunction(value: any): boolean {\n  return typeof value === 'function';\n}\n\ntype ThemeUtil = Theme | (Record<string, any> & {});\n\nexport function extendTheme<T extends ThemeUtil>(\n  overrides: T,\n  ...restOverrides: T[]\n) {\n  function customizer(source: any, override: any) {\n    if (isFunction(source)) {\n      return (...args: any[]) => {\n        const sourceValue = source(...args);\n        const overrideValue = isFunction(override)\n          ? override(...args)\n          : override;\n        return mergeWith({}, sourceValue, overrideValue, customizer);\n      };\n    }\n    return undefined;\n  }\n\n  const finalOverrides = [overrides, ...restOverrides].reduce(\n    (prevValue, currentValue) => {\n      return mergeWith({}, prevValue, currentValue, customizer);\n    },\n    defaultTheme\n  );\n\n  return finalOverrides as T & Theme;\n}\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,SAASG,UAATA,CAAoBC,KAApB,EAAyC;EACvC,OAAO,OAAOA,KAAP,KAAiB,UAAxB;AACD;AAIM,SAASC,WAATA,CACLC,SADK,EAGL;EACA,SAASC,UAATA,CAAoBC,MAApB,EAAiCC,QAAjC,EAAgD;IAC9C,IAAIN,UAAU,CAACK,MAAD,CAAd,EAAwB;MACtB,OAAO,YAAoB;QACzB,IAAME,WAAW,GAAGF,MAAM,CAAAG,KAAA,SAAAC,SAAA,CAA1B;QACA,IAAMC,aAAa,GAAGV,UAAU,CAACM,QAAD,CAAV,GAClBA,QAAQ,CAAAE,KAAA,SAAAC,SAAA,CADU,GAElBH,QAFJ;QAGA,OAAO,IAAAK,eAAS,EAAC,EAAD,EAAKJ,WAAL,EAAkBG,aAAlB,EAAiCN,UAAjC,CAAhB;MACD,CAND;IAOD;IACD,OAAOQ,SAAP;EACD;EAAA,SAAAC,IAAA,GAAAJ,SAAA,CAAAK,MAAA,EAbEC,aAFE,OAAAC,KAAA,CAAAH,IAAA,OAAAA,IAAA,WAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;IAEFF,aAFE,CAAAE,IAAA,QAAAR,SAAA,CAAAQ,IAAA;EAAA;EAiBL,IAAMC,cAAc,GAAG,CAACf,SAAD,EAAAgB,MAAA,CAAeJ,aAAf,EAA8BK,MAA9B,CACrB,UAACC,SAAD,EAAYC,YAAZ,EAA6B;IAC3B,OAAO,IAAAX,eAAS,EAAC,EAAD,EAAKU,SAAL,EAAgBC,YAAhB,EAA8BlB,UAA9B,CAAhB;EACD,CAHoB,EAIrBmB,YAJqB,CAAvB;EAOA,OAAOL,cAAP;AACD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}