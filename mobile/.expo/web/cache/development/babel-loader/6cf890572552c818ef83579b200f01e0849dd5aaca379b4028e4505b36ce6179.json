{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _Box = _interopRequireDefault(require(\"../components/primitives/Box\"));\nvar _ResponsiveQueryProvider = require(\"./useResponsiveQuery/ResponsiveQueryProvider\");\nfunction flattenChildren(children) {\n  var keys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var childrenArray = _react.default.Children.toArray(children);\n  return childrenArray.reduce(function (flatChildren, child, index) {\n    if (child.type === _react.default.Fragment) {\n      return flatChildren.concat(flattenChildren(child.props.children, keys.concat(child.key || index)));\n    }\n    if (_react.default.isValidElement(child)) {\n      flatChildren.push(_react.default.cloneElement(child, {\n        key: keys.concat(String(child.key || index)).join('.')\n      }));\n    } else {\n      flatChildren.push(child);\n    }\n    return flatChildren;\n  }, []);\n}\nvar getSpacedChildren = function getSpacedChildren(children, space, axis, reverse, divider) {\n  var childrenArray = _react.default.Children.toArray(flattenChildren(children));\n  childrenArray = reverse === 'reverse' ? (0, _toConsumableArray2.default)(childrenArray).reverse() : childrenArray;\n  var orientation = axis === 'X' ? 'vertical' : 'horizontal';\n  var responsiveQueryContext = _react.default.useContext(_ResponsiveQueryProvider.ResponsiveQueryContext);\n  var disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n  if (divider) {\n    var spacingProp = Object.assign({}, axis === 'X' ? {\n      mx: space\n    } : {\n      my: space\n    });\n    divider = _react.default.cloneElement(divider, Object.assign({\n      orientation: orientation\n    }, spacingProp));\n    childrenArray = childrenArray.map(function (child, index) {\n      var _child$key;\n      return _react.default.createElement(_react.default.Fragment, {\n        key: (_child$key = child.key) !== null && _child$key !== void 0 ? _child$key : \"spaced-child-\".concat(index)\n      }, child, index < childrenArray.length - 1 && divider);\n    });\n  } else {\n    var _spacingProp = Object.assign({}, axis === 'X' ? {\n      width: space\n    } : {\n      height: space\n    });\n    childrenArray = childrenArray.map(function (child, index) {\n      var _child$key2;\n      return _react.default.createElement(_react.default.Fragment, {\n        key: (_child$key2 = child.key) !== null && _child$key2 !== void 0 ? _child$key2 : \"spaced-child-\".concat(index)\n      }, child, disableCSSMediaQueries ? index < childrenArray.length - 1 && _react.default.createElement(_Box.default, _spacingProp) : _react.default.createElement(_react.default.Fragment, null));\n    });\n  }\n  return childrenArray;\n};\nvar _default = exports.default = getSpacedChildren;","map":{"version":3,"names":["_react","_interopRequireDefault","require","_Box","_ResponsiveQueryProvider","flattenChildren","children","keys","arguments","length","undefined","childrenArray","React","Children","toArray","reduce","flatChildren","child","index","type","Fragment","concat","props","key","isValidElement","push","cloneElement","String","join","getSpacedChildren","space","axis","reverse","divider","_toConsumableArray2","default","orientation","responsiveQueryContext","useContext","ResponsiveQueryContext","disableCSSMediaQueries","spacingProp","Object","assign","mx","my","map","_child$key","createElement","width","height","_child$key2","Box","_default","exports"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\utils\\getSpacedChildren.tsx"],"sourcesContent":["import React from 'react';\nimport { default as Box } from '../components/primitives/Box';\nimport type { SpaceType as ThemeSpaceType } from '../components/types';\nimport { ResponsiveQueryContext } from './useResponsiveQuery/ResponsiveQueryProvider';\n\ntype SpaceType =\n  | 'gutter'\n  | '2xs'\n  | 'xs'\n  | 'sm'\n  | 'md'\n  | 'lg'\n  | 'xl'\n  | '2xl'\n  | ThemeSpaceType;\n\n// Thanks @gregberge for code and @nandorojo for suggestion.\n// Original source: https://github.com/gregberge/react-flatten-children\ntype ReactChildArray = ReturnType<typeof React.Children.toArray>;\nfunction flattenChildren(\n  children: JSX.Element[] | JSX.Element,\n  keys: (string | number)[] = []\n): ReactChildArray {\n  const childrenArray = React.Children.toArray(children);\n  return childrenArray.reduce(\n    (flatChildren: ReactChildArray, child: any, index: number) => {\n      if ((child as React.ReactElement<any>).type === React.Fragment) {\n        return flatChildren.concat(\n          flattenChildren(\n            (child as React.ReactElement<any>).props.children,\n            keys.concat(child.key || index)\n          )\n        );\n      }\n      if (React.isValidElement(child)) {\n        flatChildren.push(\n          React.cloneElement(child, {\n            key: keys.concat(String(child.key || index)).join('.'),\n          })\n        );\n      } else {\n        flatChildren.push(child);\n      }\n      return flatChildren;\n    },\n    []\n  );\n}\n\nconst getSpacedChildren = (\n  children: JSX.Element[] | JSX.Element,\n  space: undefined | SpaceType,\n  axis: 'X' | 'Y',\n  reverse: string,\n  divider: JSX.Element | undefined\n): any => {\n  let childrenArray = React.Children.toArray(flattenChildren(children));\n  childrenArray =\n    reverse === 'reverse' ? [...childrenArray].reverse() : childrenArray;\n\n  const orientation = axis === 'X' ? 'vertical' : 'horizontal';\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n\n  // If there's a divider, we wrap it with a Box and apply vertical and horizontal margins else we add a spacer Box with height or width\n  if (divider) {\n    const spacingProp: object = {\n      ...(axis === 'X' ? { mx: space } : { my: space }),\n    };\n\n    divider = React.cloneElement(divider, {\n      orientation,\n      ...spacingProp,\n    });\n\n    childrenArray = childrenArray.map((child: any, index: number) => {\n      return (\n        <React.Fragment key={child.key ?? `spaced-child-${index}`}>\n          {child}\n          {index < childrenArray.length - 1 && divider}\n        </React.Fragment>\n      );\n    });\n  } else {\n    const spacingProp: object = {\n      ...(axis === 'X' ? { width: space } : { height: space }),\n    };\n    childrenArray = childrenArray.map((child: any, index: number) => {\n      return (\n        <React.Fragment key={child.key ?? `spaced-child-${index}`}>\n          {child}\n          {disableCSSMediaQueries ? (\n            index < childrenArray.length - 1 && <Box {...spacingProp} />\n          ) : (\n            <></>\n          )}\n        </React.Fragment>\n      );\n    });\n  }\n\n  return childrenArray;\n};\n\nexport default getSpacedChildren;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}