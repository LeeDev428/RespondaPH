{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useOverlayPosition = useOverlayPosition;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _calculatePosition = require(\"./calculatePosition\");\nvar _react = require(\"react\");\nvar _useCloseOnScroll = require(\"./useCloseOnScroll\");\nvar _utils = require(\"@react-native-aria/utils\");\nvar visualViewport = typeof window !== 'undefined' && window.visualViewport;\nfunction useOverlayPosition(props) {\n  var _targetRef$current, _targetRef$current2;\n  var direction = (0, _utils.isRTL)() ? 'rtl' : undefined;\n  var targetRef = props.targetRef,\n    overlayRef = props.overlayRef,\n    _props$scrollRef = props.scrollRef,\n    scrollRef = _props$scrollRef === void 0 ? overlayRef : _props$scrollRef,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? 'bottom' : _props$placement,\n    _props$containerPaddi = props.containerPadding,\n    containerPadding = _props$containerPaddi === void 0 ? 12 : _props$containerPaddi,\n    _props$shouldFlip = props.shouldFlip,\n    shouldFlip = _props$shouldFlip === void 0 ? true : _props$shouldFlip,\n    _props$boundaryElemen = props.boundaryElement,\n    boundaryElement = _props$boundaryElemen === void 0 ? typeof document !== 'undefined' ? document.body : null : _props$boundaryElemen,\n    _props$offset = props.offset,\n    offset = _props$offset === void 0 ? 0 : _props$offset,\n    _props$crossOffset = props.crossOffset,\n    crossOffset = _props$crossOffset === void 0 ? 0 : _props$crossOffset,\n    _props$shouldUpdatePo = props.shouldUpdatePosition,\n    shouldUpdatePosition = _props$shouldUpdatePo === void 0 ? true : _props$shouldUpdatePo,\n    _props$isOpen = props.isOpen,\n    isOpen = _props$isOpen === void 0 ? true : _props$isOpen,\n    _props$shouldOverlapW = props.shouldOverlapWithTrigger,\n    shouldOverlapWithTrigger = _props$shouldOverlapW === void 0 ? false : _props$shouldOverlapW,\n    onClose = props.onClose;\n  var _useState = (0, _react.useState)({\n      position: {},\n      arrowOffsetLeft: undefined,\n      arrowOffsetTop: undefined,\n      maxHeight: undefined,\n      placement: undefined\n    }),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    position = _useState2[0],\n    setPosition = _useState2[1];\n  var deps = [shouldUpdatePosition, placement, overlayRef.current, (_targetRef$current = targetRef.current) === null || _targetRef$current === void 0 ? void 0 : _targetRef$current.offsetLeft, (_targetRef$current2 = targetRef.current) === null || _targetRef$current2 === void 0 ? void 0 : _targetRef$current2.offsetTop, scrollRef.current, containerPadding, shouldFlip, boundaryElement, offset, crossOffset, isOpen, direction, shouldOverlapWithTrigger];\n  var updatePosition = (0, _react.useCallback)(function () {\n    if (shouldUpdatePosition === false || !isOpen || !overlayRef.current || !targetRef.current || !scrollRef.current || !boundaryElement) {\n      return;\n    }\n    setPosition((0, _calculatePosition.calculatePosition)({\n      placement: translateRTL(placement, direction),\n      overlayNode: overlayRef.current,\n      targetNode: targetRef.current,\n      scrollNode: scrollRef.current,\n      padding: containerPadding,\n      shouldFlip: shouldFlip,\n      boundaryElement: boundaryElement,\n      offset: offset,\n      crossOffset: crossOffset,\n      shouldOverlapWithTrigger: shouldOverlapWithTrigger\n    }));\n  }, deps);\n  (0, _utils.useLayoutEffect)(updatePosition, deps);\n  useResize(updatePosition);\n  var isResizing = (0, _react.useRef)(false);\n  (0, _utils.useLayoutEffect)(function () {\n    var timeout;\n    var onResize = function onResize() {\n      isResizing.current = true;\n      clearTimeout(timeout);\n      timeout = setTimeout(function () {\n        isResizing.current = false;\n      }, 500);\n      updatePosition();\n    };\n    visualViewport === null || visualViewport === void 0 || visualViewport.addEventListener('resize', onResize);\n    return function () {\n      visualViewport === null || visualViewport === void 0 || visualViewport.removeEventListener('resize', onResize);\n    };\n  }, [updatePosition]);\n  var close = (0, _react.useCallback)(function () {\n    if (!isResizing.current) {\n      onClose();\n    }\n  }, [onClose, isResizing]);\n  (0, _useCloseOnScroll.useCloseOnScroll)({\n    triggerRef: targetRef,\n    isOpen: isOpen,\n    onClose: onClose ? close : undefined\n  });\n  return {\n    rendered: true,\n    overlayProps: {\n      style: Object.assign({\n        position: 'absolute',\n        zIndex: 100000\n      }, position.position, {\n        maxHeight: position.maxHeight\n      })\n    },\n    placement: position.placement,\n    arrowProps: {\n      style: {\n        left: position.arrowOffsetLeft,\n        top: position.arrowOffsetTop\n      }\n    },\n    isFlipped: position.isFlipped,\n    updatePosition: updatePosition\n  };\n}\nfunction useResize(onResize) {\n  (0, _utils.useLayoutEffect)(function () {\n    window.addEventListener('resize', onResize, false);\n    return function () {\n      window.removeEventListener('resize', onResize, false);\n    };\n  }, [onResize]);\n}\nfunction translateRTL(position, direction) {\n  if (direction === 'rtl') {\n    return position.replace('start', 'right').replace('end', 'left');\n  }\n  return position.replace('start', 'left').replace('end', 'right');\n}","map":{"version":3,"names":["_calculatePosition","require","_react","_useCloseOnScroll","_utils","visualViewport","window","useOverlayPosition","props","_targetRef$current","_targetRef$current2","direction","isRTL","undefined","targetRef","overlayRef","_props$scrollRef","scrollRef","_props$placement","placement","_props$containerPaddi","containerPadding","_props$shouldFlip","shouldFlip","_props$boundaryElemen","boundaryElement","document","body","_props$offset","offset","_props$crossOffset","crossOffset","_props$shouldUpdatePo","shouldUpdatePosition","_props$isOpen","isOpen","_props$shouldOverlapW","shouldOverlapWithTrigger","onClose","_useState","useState","position","arrowOffsetLeft","arrowOffsetTop","maxHeight","_useState2","_slicedToArray2","default","setPosition","deps","current","offsetLeft","offsetTop","updatePosition","useCallback","calculatePosition","translateRTL","overlayNode","targetNode","scrollNode","padding","useLayoutEffect","useResize","isResizing","useRef","timeout","onResize","clearTimeout","setTimeout","addEventListener","removeEventListener","close","useCloseOnScroll","triggerRef","rendered","overlayProps","style","Object","assign","zIndex","arrowProps","left","top","isFlipped","replace"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-native-aria\\overlays\\src\\web\\overlays\\src\\useOverlayPosition.ts"],"sourcesContent":["//@ts-nocheck\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { calculatePosition, PositionResult } from './calculatePosition';\nimport {\n  HTMLAttributes,\n  RefObject,\n  useCallback,\n  useRef,\n  useState,\n} from 'react';\nimport { Placement, PlacementAxis, PositionProps } from '@react-types/overlays';\nimport { useCloseOnScroll } from './useCloseOnScroll';\nimport { isRTL, useLayoutEffect } from '@react-native-aria/utils';\n\ninterface AriaPositionProps extends PositionProps {\n  /**\n   * Element that that serves as the positioning boundary.\n   * @default document.body\n   */\n  boundaryElement?: HTMLElement;\n  /**\n   * The ref for the element which the overlay positions itself with respect to.\n   */\n  targetRef: RefObject<HTMLElement>;\n  /**\n   * The ref for the overlay element.\n   */\n  overlayRef: RefObject<HTMLElement>;\n  /**\n   * A ref for the scrollable region within the overlay.\n   * @default overlayRef\n   */\n  scrollRef?: RefObject<HTMLElement>;\n  /**\n   * Whether the overlay should update its position automatically.\n   * @default true\n   */\n  shouldUpdatePosition?: boolean;\n  /** Handler that is called when the overlay should close. */\n  onClose?: () => void;\n  /** Determines whether the overlay should overlap with the trigger */\n  shouldOverlapWithTrigger?: boolean;\n}\n\ninterface PositionAria {\n  /** Props for the overlay container element. */\n  overlayProps: HTMLAttributes<Element>;\n  /** Props for the overlay tip arrow if any. */\n  arrowProps: HTMLAttributes<Element>;\n  /** Placement of the overlay with respect to the overlay trigger. */\n  placement: PlacementAxis;\n  /** Updates the position of the overlay. */\n  updatePosition(): void;\n  /** Whether the overlay is flipped. */\n  isFlipped: boolean;\n}\n\n// @ts-ignore\nlet visualViewport = typeof window !== 'undefined' && window.visualViewport;\n\n/**\n * Handles positioning overlays like popovers and menus relative to a trigger\n * element, and updating the position when the window resizes.\n */\nexport function useOverlayPosition(props: AriaPositionProps): PositionAria {\n  const direction = isRTL() ? 'rtl' : undefined;\n  let {\n    targetRef,\n    overlayRef,\n    scrollRef = overlayRef,\n    placement = 'bottom' as Placement,\n    containerPadding = 12,\n    shouldFlip = true,\n    boundaryElement = typeof document !== 'undefined' ? document.body : null,\n    offset = 0,\n    crossOffset = 0,\n    shouldUpdatePosition = true,\n    isOpen = true,\n    shouldOverlapWithTrigger = false,\n    onClose,\n  } = props;\n  let [position, setPosition] = useState<PositionResult>({\n    position: {},\n    arrowOffsetLeft: undefined,\n    arrowOffsetTop: undefined,\n    maxHeight: undefined,\n    placement: undefined,\n  });\n\n  let deps = [\n    shouldUpdatePosition,\n    placement,\n    overlayRef.current,\n    targetRef.current?.offsetLeft,\n    targetRef.current?.offsetTop,\n    scrollRef.current,\n    containerPadding,\n    shouldFlip,\n    boundaryElement,\n    offset,\n    crossOffset,\n    isOpen,\n    direction,\n    shouldOverlapWithTrigger,\n  ];\n\n  let updatePosition = useCallback(() => {\n    if (\n      shouldUpdatePosition === false ||\n      !isOpen ||\n      !overlayRef.current ||\n      !targetRef.current ||\n      !scrollRef.current ||\n      !boundaryElement\n    ) {\n      return;\n    }\n\n    setPosition(\n      calculatePosition({\n        placement: translateRTL(placement, direction),\n        overlayNode: overlayRef.current,\n        targetNode: targetRef.current,\n        scrollNode: scrollRef.current,\n        padding: containerPadding,\n        shouldFlip,\n        boundaryElement,\n        offset,\n        crossOffset,\n        shouldOverlapWithTrigger,\n      })\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  // Update position when anything changes\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useLayoutEffect(updatePosition, deps);\n\n  // Update position on window resize\n  useResize(updatePosition);\n\n  // Reposition the overlay and do not close on scroll while the visual viewport is resizing.\n  // This will ensure that overlays adjust their positioning when the iOS virtual keyboard appears.\n  let isResizing = useRef(false);\n  useLayoutEffect(() => {\n    let timeout: NodeJS.Timeout;\n    let onResize = () => {\n      isResizing.current = true;\n      clearTimeout(timeout);\n\n      timeout = setTimeout(() => {\n        isResizing.current = false;\n      }, 500);\n\n      updatePosition();\n    };\n\n    visualViewport?.addEventListener('resize', onResize);\n\n    return () => {\n      visualViewport?.removeEventListener('resize', onResize);\n    };\n  }, [updatePosition]);\n\n  let close = useCallback(() => {\n    if (!isResizing.current) {\n      onClose();\n    }\n  }, [onClose, isResizing]);\n\n  // When scrolling a parent scrollable region of the trigger (other than the body),\n  // we hide the popover. Otherwise, its position would be incorrect.\n  useCloseOnScroll({\n    triggerRef: targetRef,\n    isOpen,\n    onClose: onClose ? close : undefined,\n  });\n\n  // useLayoutEffect(() => {\n  //   const mutationObserver = new MutationObserver((mutations) => {\n  //     updatePosition();\n  //     mutations.forEach((mutation) => {\n  //       // if (mutation.attributeName === 'style') {\n  //       //   const transform = mutation.target.style.transform;\n  //       //   if (transform) {\n  //       //     const match = transform.match(/scale\\((.+)\\)/);\n  //       //     if (match) {\n  //       //       const scale = parseFloat(match[1]);\n  //       //       console.log(`Scale: ${scale}`);\n  //       //       // updatePosition();\n  //       //     }\n  //       //   }\n  //       // }\n  //     });\n  //   });\n\n  //   mutationObserver.observe(overlayRef?.current, { attributes: true });\n\n  //   return () => mutationObserver.disconnect();\n  // }, [overlayRef, updatePosition]);\n\n  return {\n    rendered: true,\n    overlayProps: {\n      style: {\n        position: 'absolute',\n        zIndex: 100000, // should match the z-index in ModalTrigger\n        ...position.position,\n        maxHeight: position.maxHeight,\n      },\n    },\n    placement: position.placement,\n    arrowProps: {\n      style: {\n        left: position.arrowOffsetLeft,\n        top: position.arrowOffsetTop,\n      },\n    },\n    isFlipped: position.isFlipped,\n    updatePosition,\n  };\n}\n\nfunction useResize(onResize) {\n  useLayoutEffect(() => {\n    window.addEventListener('resize', onResize, false);\n    return () => {\n      window.removeEventListener('resize', onResize, false);\n    };\n  }, [onResize]);\n}\n\nfunction translateRTL(position, direction) {\n  if (direction === 'rtl') {\n    return position.replace('start', 'right').replace('end', 'left');\n  }\n  return position.replace('start', 'left').replace('end', 'right');\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}