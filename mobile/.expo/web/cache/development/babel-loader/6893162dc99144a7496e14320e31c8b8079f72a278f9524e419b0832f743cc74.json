{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _useThemeProps = require(\"../../../hooks/useThemeProps\");\nvar _interactions = require(\"@react-native-aria/interactions\");\nvar _mergeRefs = require(\"../../../utils/mergeRefs\");\nvar _styled = require(\"../../../utils/styled\");\nvar _useResolvedFontFamily = require(\"../../../hooks/useResolvedFontFamily\");\nvar _reactNative = require(\"react-native\");\nvar _useHasResponsiveProps = require(\"../../../hooks/useHasResponsiveProps\");\nvar _excluded = [\"children\"],\n  _excluded2 = [\"isTruncated\", \"noOfLines\", \"bold\", \"italic\", \"sub\", \"highlight\", \"underline\", \"strikeThrough\", \"fontFamily\", \"fontWeight\", \"fontStyle\", \"_hover\", \"fontSize\", \"numberOfLines\"];\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar StyledText = (0, _styled.makeStyledComponent)(_reactNative.Text);\nvar TextAncestorContext = _react.default.createContext(false);\nvar Text = function Text(_ref2, ref) {\n  var children = _ref2.children,\n    props = (0, _objectWithoutProperties2.default)(_ref2, _excluded);\n  var hasTextAncestor = _react.default.useContext(TextAncestorContext);\n  var _usePropsResolution = (0, _useThemeProps.usePropsResolution)('Text', props, {}, {\n      resolveResponsively: ['noOfLines', 'numberOfLines'],\n      componentTheme: hasTextAncestor ? {} : undefined\n    }),\n    isTruncated = _usePropsResolution.isTruncated,\n    noOfLines = _usePropsResolution.noOfLines,\n    bold = _usePropsResolution.bold,\n    italic = _usePropsResolution.italic,\n    sub = _usePropsResolution.sub,\n    highlight = _usePropsResolution.highlight,\n    underline = _usePropsResolution.underline,\n    strikeThrough = _usePropsResolution.strikeThrough,\n    propFontFamily = _usePropsResolution.fontFamily,\n    propFontWeight = _usePropsResolution.fontWeight,\n    propFontStyle = _usePropsResolution.fontStyle,\n    _hover = _usePropsResolution._hover,\n    fontSize = _usePropsResolution.fontSize,\n    numberOfLines = _usePropsResolution.numberOfLines,\n    resolvedProps = (0, _objectWithoutProperties2.default)(_usePropsResolution, _excluded2);\n  var _ref = (0, _react.useRef)(null);\n  var _useHover = (0, _interactions.useHover)({}, _hover ? _ref : null),\n    isHovered = _useHover.isHovered;\n  var fontFamily = propFontFamily;\n  var fontStyle = italic ? 'italic' : propFontStyle;\n  var fontWeight = bold ? 'bold' : propFontWeight;\n  var resolvedFontFamily;\n  resolvedFontFamily = (0, _useResolvedFontFamily.useResolvedFontFamily)({\n    fontFamily: fontFamily,\n    fontWeight: fontWeight !== null && fontWeight !== void 0 ? fontWeight : hasTextAncestor ? undefined : 400,\n    fontStyle: fontStyle !== null && fontStyle !== void 0 ? fontStyle : hasTextAncestor ? undefined : 'normal'\n  });\n  if (resolvedFontFamily) {\n    fontFamily = resolvedFontFamily;\n  }\n  if (_reactNative.Platform.OS === 'web') {\n    if (resolvedFontFamily) {\n      fontFamily = resolvedFontFamily.fontFamily;\n    }\n    resolvedFontFamily = {\n      fontFamily: fontFamily,\n      fontWeight: fontWeight !== null && fontWeight !== void 0 ? fontWeight : hasTextAncestor ? undefined : 400,\n      fontStyle: fontStyle !== null && fontStyle !== void 0 ? fontStyle : hasTextAncestor ? undefined : 'normal'\n    };\n  }\n  if ((0, _useHasResponsiveProps.useHasResponsiveProps)(props)) {\n    return null;\n  }\n  var propsToSpread = Object.assign({}, resolvedProps, {\n    numberOfLines: numberOfLines || noOfLines ? numberOfLines || noOfLines : isTruncated ? 1 : undefined\n  }, resolvedFontFamily, {\n    bg: highlight ? 'warning.300' : resolvedProps.bg,\n    textDecorationLine: underline && strikeThrough ? 'underline line-through' : underline ? 'underline' : strikeThrough ? 'line-through' : resolvedProps.textDecorationLine,\n    fontSize: sub ? 10 : fontSize,\n    ref: (0, _mergeRefs.mergeRefs)([ref, _ref])\n  }, isHovered && _hover);\n  return hasTextAncestor ? _react.default.createElement(StyledText, propsToSpread, children) : _react.default.createElement(TextAncestorContext.Provider, {\n    value: true\n  }, _react.default.createElement(StyledText, propsToSpread, children));\n};\nvar _default = exports.default = (0, _react.memo)((0, _react.forwardRef)(Text));","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_useThemeProps","_interactions","_mergeRefs","_styled","_useResolvedFontFamily","_reactNative","_useHasResponsiveProps","_excluded","_excluded2","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","StyledText","makeStyledComponent","NativeText","TextAncestorContext","React","createContext","Text","_ref2","ref","children","props","_objectWithoutProperties2","hasTextAncestor","useContext","_usePropsResolution","usePropsResolution","resolveResponsively","componentTheme","undefined","isTruncated","noOfLines","bold","italic","sub","highlight","underline","strikeThrough","propFontFamily","fontFamily","propFontWeight","fontWeight","propFontStyle","fontStyle","_hover","fontSize","numberOfLines","resolvedProps","_ref","useRef","_useHover","useHover","isHovered","resolvedFontFamily","useResolvedFontFamily","Platform","OS","useHasResponsiveProps","propsToSpread","assign","bg","textDecorationLine","mergeRefs","createElement","Provider","value","_default","exports","memo","forwardRef"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\components\\primitives\\Text\\index.tsx"],"sourcesContent":["import React, { memo, forwardRef, useRef } from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { ITextProps } from './types';\nimport { useHover } from '@react-native-aria/interactions';\nimport { mergeRefs } from '../../../utils/mergeRefs';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useResolvedFontFamily } from '../../../hooks/useResolvedFontFamily';\nimport { Platform, Text as NativeText } from 'react-native';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledText = makeStyledComponent(NativeText);\n// To have a RN compatible behaviour, we'll inherit parent text styles as base style\nconst TextAncestorContext = React.createContext(false);\n\nconst Text = ({ children, ...props }: ITextProps, ref: any) => {\n  const hasTextAncestor = React.useContext(TextAncestorContext);\n\n  const {\n    isTruncated,\n    noOfLines,\n    bold,\n    italic,\n    sub,\n    highlight,\n    underline,\n    strikeThrough,\n    fontFamily: propFontFamily,\n    fontWeight: propFontWeight,\n    fontStyle: propFontStyle,\n    _hover,\n    fontSize,\n    numberOfLines,\n    ...resolvedProps\n  } = usePropsResolution(\n    'Text',\n    props,\n    {},\n    {\n      resolveResponsively: ['noOfLines', 'numberOfLines'],\n      // We override the component base theme if text has an ancestor.\n      componentTheme: hasTextAncestor ? {} : undefined,\n    }\n  );\n\n  const _ref = useRef(null);\n  // TODO: might have to add this condition\n  const { isHovered } = useHover({}, _hover ? _ref : null);\n  // const { isHovered } = useHover({}, _ref);\n  let fontFamily = propFontFamily;\n  const fontStyle = italic ? 'italic' : propFontStyle;\n  const fontWeight = bold ? 'bold' : propFontWeight;\n  let resolvedFontFamily;\n\n  resolvedFontFamily = useResolvedFontFamily({\n    fontFamily,\n    fontWeight: fontWeight ?? (hasTextAncestor ? undefined : 400),\n    fontStyle: fontStyle ?? (hasTextAncestor ? undefined : 'normal'),\n  });\n\n  if (resolvedFontFamily) {\n    fontFamily = resolvedFontFamily;\n  }\n  // Need to apply fontWeight & fontStyle on web\n  if (Platform.OS === 'web') {\n    if (resolvedFontFamily) {\n      fontFamily = resolvedFontFamily.fontFamily;\n    }\n\n    resolvedFontFamily = {\n      fontFamily,\n      fontWeight: fontWeight ?? (hasTextAncestor ? undefined : 400),\n      fontStyle: fontStyle ?? (hasTextAncestor ? undefined : 'normal'),\n    };\n  }\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  const propsToSpread = {\n    ...resolvedProps,\n    numberOfLines:\n      numberOfLines || noOfLines\n        ? numberOfLines || noOfLines\n        : isTruncated\n        ? 1\n        : undefined,\n    ...resolvedFontFamily,\n    bg: highlight ? 'warning.300' : resolvedProps.bg,\n    textDecorationLine:\n      underline && strikeThrough\n        ? 'underline line-through'\n        : underline\n        ? 'underline'\n        : strikeThrough\n        ? 'line-through'\n        : resolvedProps.textDecorationLine,\n    fontSize: sub ? 10 : fontSize,\n    ref: mergeRefs([ref, _ref]),\n    ...(isHovered && _hover),\n  };\n\n  return hasTextAncestor ? (\n    <StyledText {...propsToSpread}>{children}</StyledText>\n  ) : (\n    <TextAncestorContext.Provider value={true}>\n      <StyledText {...propsToSpread}>{children}</StyledText>\n    </TextAncestorContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(Text));\nexport type { ITextProps };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}