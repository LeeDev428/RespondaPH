{"ast":null,"code":"function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"listData\", function () {\n  return $87beb89ab4a308fd$export$3585ede4d035bf14;\n});\n$parcel$export(module.exports, \"getItemId\", function () {\n  return $87beb89ab4a308fd$export$9145995848b05025;\n});\nvar $87beb89ab4a308fd$export$3585ede4d035bf14 = new WeakMap();\nfunction $87beb89ab4a308fd$var$normalizeKey(key) {\n  if (typeof key === 'string') return key.replace(/\\s*/g, '');\n  return '' + key;\n}\nfunction $87beb89ab4a308fd$export$9145995848b05025(state, itemKey) {\n  var data = $87beb89ab4a308fd$export$3585ede4d035bf14.get(state);\n  if (!data) throw new Error('Unknown list');\n  return `${data.id}-option-${$87beb89ab4a308fd$var$normalizeKey(itemKey)}`;\n}","map":{"version":3,"names":["$87beb89ab4a308fd$export$3585ede4d035bf14","WeakMap","$87beb89ab4a308fd$var$normalizeKey","key","replace","$87beb89ab4a308fd$export$9145995848b05025","state","itemKey","data","get","Error","id"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\listbox\\dist\\packages\\@react-aria\\listbox\\src\\utils.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from '@react-types/shared';\nimport {ListState} from '@react-stately/list';\n\ninterface ListData {\n  id?: string,\n  shouldSelectOnPressUp?: boolean,\n  shouldFocusOnHover?: boolean,\n  shouldUseVirtualFocus?: boolean,\n  isVirtualized?: boolean,\n  onAction?: (key: Key) => void,\n  linkBehavior?: 'action' | 'selection' | 'override'\n}\n\nexport const listData: WeakMap<ListState<unknown>, ListData> = new WeakMap<ListState<unknown>, ListData>();\n\nfunction normalizeKey(key: Key): string {\n  if (typeof key === 'string') {\n    return key.replace(/\\s*/g, '');\n  }\n\n  return '' + key;\n}\n\nexport function getItemId<T>(state: ListState<T>, itemKey: Key): string {\n  let data = listData.get(state);\n\n  if (!data) {\n    throw new Error('Unknown list');\n  }\n\n  return `${data.id}-option-${normalizeKey(itemKey)}`;\n}\n"],"mappings":";;;;;;;;;;;;;;AAyBO,IAAMA,yCAAA,GAAkD,IAAIC,OAAA;AAEnE,SAASC,mCAAaC,GAAQ;EAC5B,IAAI,OAAOA,GAAA,KAAQ,UACjB,OAAOA,GAAA,CAAIC,OAAO,CAAC,QAAQ;EAG7B,OAAO,KAAKD,GAAA;AACd;AAEO,SAASE,0CAAaC,KAAmB,EAAEC,OAAY;EAC5D,IAAIC,IAAA,GAAOR,yCAAA,CAASS,GAAG,CAACH,KAAA;EAExB,IAAI,CAACE,IAAA,EACH,MAAM,IAAIE,KAAA,CAAM;EAGlB,OAAO,GAAGF,IAAA,CAAKG,EAAE,WAAWT,kCAAA,CAAaK,OAAA,GAAU;AACrD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}