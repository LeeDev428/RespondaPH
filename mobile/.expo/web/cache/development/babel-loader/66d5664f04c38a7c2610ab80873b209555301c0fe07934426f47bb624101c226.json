{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTypeaheadReducer = useTypeaheadReducer;\nvar stateChangeTypes = _interopRequireWildcard(require(\"./types\"));\nvar _utils = require(\"./utils\");\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nfunction useTypeaheadReducer(state, action) {\n  var type = action.type,\n    props = action.props;\n  var changes;\n  switch (type) {\n    case stateChangeTypes.ItemClick:\n      changes = {\n        isOpen: (0, _utils.getDefaultValue)(props, 'isOpen'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index])\n      };\n      break;\n    case stateChangeTypes.InputBlur:\n      if (state.isOpen) {\n        changes = {\n          isOpen: false\n        };\n      }\n      break;\n    case stateChangeTypes.InputChange:\n      changes = {\n        isOpen: true,\n        inputValue: action.inputValue\n      };\n      break;\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen\n      };\n      break;\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true\n      };\n      break;\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false\n      };\n      break;\n    case stateChangeTypes.FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem)\n      };\n      break;\n    case stateChangeTypes.ControlledPropUpdatedSelectedItem:\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        isOpen: (0, _utils.getDefaultValue)(props, 'isOpen'),\n        selectedItem: (0, _utils.getDefaultValue)(props, 'selectedItem'),\n        inputValue: (0, _utils.getDefaultValue)(props, 'inputValue')\n      };\n      break;\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n  return Object.assign({}, state, changes);\n}","map":{"version":3,"names":["stateChangeTypes","_interopRequireWildcard","require","_utils","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","useTypeaheadReducer","state","action","type","props","changes","ItemClick","isOpen","getDefaultValue","selectedItem","items","index","inputValue","itemToString","InputBlur","InputChange","ToggleButtonClick","FunctionToggleMenu","FunctionOpenMenu","FunctionCloseMenu","FunctionSelectItem","ControlledPropUpdatedSelectedItem","FunctionSetInputValue","FunctionReset","Error","assign"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\components\\composites\\Typeahead\\useTypeahead\\reducer.tsx"],"sourcesContent":["import * as stateChangeTypes from './types';\nimport { getDefaultValue } from './utils';\n\ntype IState = {\n  isOpen: boolean;\n  selectedItem: any;\n  inputValue: string;\n};\n\nexport function useTypeaheadReducer(state: IState, action: any) {\n  const { type, props } = action;\n  let changes;\n\n  switch (type) {\n    case stateChangeTypes.ItemClick:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index]),\n      };\n      break;\n    case stateChangeTypes.InputBlur:\n      if (state.isOpen) {\n        changes = {\n          isOpen: false,\n        };\n      }\n      break;\n    case stateChangeTypes.InputChange:\n      changes = {\n        isOpen: true,\n        inputValue: action.inputValue,\n      };\n      break;\n\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen,\n      };\n      break;\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true,\n      };\n      break;\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false,\n      };\n      break;\n\n    case stateChangeTypes.FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem),\n      };\n      break;\n    case stateChangeTypes.ControlledPropUpdatedSelectedItem:\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue,\n      };\n      break;\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: getDefaultValue(props, 'selectedItem'),\n        inputValue: getDefaultValue(props, 'inputValue'),\n      };\n      break;\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return {\n    ...state,\n    ...changes,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}