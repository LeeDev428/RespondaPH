{"ast":null,"code":"var $2Y3Ap$react = require(\"react\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"inertValue\", function () {\n  return $13915169b1e4142c$export$a9d04c5684123369;\n});\nfunction $13915169b1e4142c$export$a9d04c5684123369(value) {\n  var pieces = (0, $2Y3Ap$react.version).split('.');\n  var major = parseInt(pieces[0], 10);\n  if (major >= 19) return value;\n  return value ? 'true' : undefined;\n}","map":{"version":3,"names":["$13915169b1e4142c$export$a9d04c5684123369","value","pieces","$2Y3Ap$react","version","split","major","parseInt","undefined"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\utils\\dist\\packages\\@react-aria\\utils\\src\\inertValue.ts"],"sourcesContent":["import {version} from 'react';\n\nexport function inertValue(value?: boolean): string | boolean | undefined {\n  const pieces = version.split('.');\n  const major = parseInt(pieces[0], 10);\n  if (major >= 19) {\n    return value;\n  }\n  // compatibility with React < 19\n  return value ? 'true' : undefined;\n}\n"],"mappings":";;;;;;;;;;;;AAEO,SAASA,0CAAWC,KAAe;EACxC,IAAMC,MAAA,GAAS,IAAAC,YAAA,CAAAC,OAAM,EAAEC,KAAK,CAAC;EAC7B,IAAMC,KAAA,GAAQC,QAAA,CAASL,MAAM,CAAC,EAAE,EAAE;EAClC,IAAII,KAAA,IAAS,IACX,OAAOL,KAAA;EAGT,OAAOA,KAAA,GAAQ,SAASO,SAAA;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}