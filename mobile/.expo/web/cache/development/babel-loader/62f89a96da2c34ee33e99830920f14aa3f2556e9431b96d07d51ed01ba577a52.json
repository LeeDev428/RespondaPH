{"ast":null,"code":"var $bAsD1$reactariautils = require(\"@react-aria/utils\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useListBoxSection\", function () {\n  return $f32afd5f225c3320$export$c3f9f39876e4bc7;\n});\nfunction $f32afd5f225c3320$export$c3f9f39876e4bc7(props) {\n  var heading = props.heading,\n    ariaLabel = props['aria-label'];\n  var headingId = (0, $bAsD1$reactariautils.useId)();\n  return {\n    itemProps: {\n      role: 'presentation'\n    },\n    headingProps: heading ? {\n      id: headingId,\n      role: 'presentation'\n    } : {},\n    groupProps: {\n      role: 'group',\n      'aria-label': ariaLabel,\n      'aria-labelledby': heading ? headingId : undefined\n    }\n  };\n}","map":{"version":3,"names":["$f32afd5f225c3320$export$c3f9f39876e4bc7","props","heading","ariaLabel","headingId","$bAsD1$reactariautils","useId","itemProps","role","headingProps","id","groupProps","undefined"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\listbox\\dist\\packages\\@react-aria\\listbox\\src\\useListBoxSection.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {ReactNode} from 'react';\nimport {useId} from '@react-aria/utils';\n\nexport interface AriaListBoxSectionProps {\n  /** The heading for the section. */\n  heading?: ReactNode,\n  /** An accessibility label for the section. Required if `heading` is not present. */\n  'aria-label'?: string\n}\n\nexport interface ListBoxSectionAria {\n  /** Props for the wrapper list item. */\n  itemProps: DOMAttributes,\n\n  /** Props for the heading element, if any. */\n  headingProps: DOMAttributes,\n\n  /** Props for the group element. */\n  groupProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a section in a listbox.\n * See `useListBox` for more details about listboxes.\n * @param props - Props for the section.\n */\nexport function useListBoxSection(props: AriaListBoxSectionProps): ListBoxSectionAria {\n  let {heading, 'aria-label': ariaLabel} = props;\n  let headingId = useId();\n\n  return {\n    itemProps: {\n      role: 'presentation'\n    },\n    headingProps: heading ? {\n      // Techincally, listbox cannot contain headings according to ARIA.\n      // We hide the heading from assistive technology, using role=\"presentation\",\n      // and only use it as a visual label for the nested group.\n      id: headingId,\n      role: 'presentation'\n    } : {},\n    groupProps: {\n      role: 'group',\n      'aria-label': ariaLabel,\n      'aria-labelledby': heading ? headingId : undefined\n    }\n  };\n}\n"],"mappings":";;;;;;;;;;;;AAuCO,SAASA,yCAAkBC,KAA8B;EAC9D,IAAKC,OAAO,GAA6BD,KAAA,CAArCC,OAAA;IAAwBC,SAAS,GAAIF,KAAA,CAA3B;EACd,IAAIG,SAAA,GAAY,IAAAC,qBAAA,CAAAC,KAAI;EAEpB,OAAO;IACLC,SAAA,EAAW;MACTC,IAAA,EAAM;IACR;IACAC,YAAA,EAAcP,OAAA,GAAU;MAItBQ,EAAA,EAAIN,SAAA;MACJI,IAAA,EAAM;IACR,IAAI,CAAC;IACLG,UAAA,EAAY;MACVH,IAAA,EAAM;MACN,cAAcL,SAAA;MACd,mBAAmBD,OAAA,GAAUE,SAAA,GAAYQ;IAC3C;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}