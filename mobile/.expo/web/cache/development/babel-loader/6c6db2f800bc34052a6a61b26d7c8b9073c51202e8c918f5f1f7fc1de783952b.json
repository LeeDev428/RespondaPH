{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.v33xTheme = exports.themeTools = void 0;\nvar _base = _interopRequireDefault(require(\"./base\"));\nvar _components = _interopRequireDefault(require(\"./components\"));\nvar tools = _interopRequireWildcard(require(\"./tools\"));\nexports.themeTools = tools;\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) \"default\" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }\nvar config = {\n  useSystemColorMode: false,\n  initialColorMode: 'light',\n  accessibleColors: false\n};\nvar v33xTheme = exports.v33xTheme = Object.assign({}, _base.default, {\n  components: _components.default,\n  config: config\n});","map":{"version":3,"names":["_base","_interopRequireDefault","require","_components","tools","_interopRequireWildcard","config","useSystemColorMode","initialColorMode","accessibleColors","v33xTheme","exports","Object","assign","base","components"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\theme\\v33x-theme\\index.ts"],"sourcesContent":["import base from './base';\nimport components from './components';\nimport * as tools from './tools';\n//@ts-ignore\nimport type { ColorModeOptions } from './../core/color-mode/types';\n\nconst config: ColorModeOptions = {\n  useSystemColorMode: false, // TODO: implement this\n  initialColorMode: 'light',\n  accessibleColors: false,\n};\n\nconst v33xTheme = {\n  ...base,\n  components,\n  config,\n};\n\nexport type V33xTheme = typeof v33xTheme & { fontConfig: any };\n\nexport interface ICustomTheme {}\n\nexport interface IV33xTheme\n  extends ICustomTheme,\n    Omit<V33xTheme, keyof ICustomTheme> {}\n\nexport { v33xTheme, tools as themeTools };\n"],"mappings":";;;;;AAAA,IAAAA,KAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,WAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,KAAA,GAAAC,uBAAA,CAAAH,OAAA;;;AAIA,IAAMI,MAAwB,GAAG;EAC/BC,kBAAkB,EAAE,KADW;EAE/BC,gBAAgB,EAAE,OAFa;EAG/BC,gBAAgB,EAAE;AAHa,CAAjC;AAMA,IAAMC,SAAS,GAAAC,OAAA,CAAAD,SAAA,GAAAE,MAAA,CAAAC,MAAA,KACVC,aADa;EAEhBC,UAFgB,EAEhBA,mBAFgB;EAGhBT,MAAA,EAAAA;AAAA,EAHF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}