{"ast":null,"code":"var $2a8c0bb1629926c8$exports = require(\"./useEvent.main.js\");\nvar $78605a5d7424e31b$exports = require(\"./useLayoutEffect.main.js\");\nvar $4Zukt$react = require(\"react\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useLoadMore\", function () {\n  return $faa6ccd6fb62f877$export$7717c92ee915373e;\n});\nfunction $faa6ccd6fb62f877$export$7717c92ee915373e(props, ref) {\n  var isLoading = props.isLoading,\n    onLoadMore = props.onLoadMore,\n    _props$scrollOffset = props.scrollOffset,\n    scrollOffset = _props$scrollOffset === void 0 ? 1 : _props$scrollOffset,\n    items = props.items;\n  var isLoadingRef = (0, $4Zukt$react.useRef)(isLoading);\n  var prevProps = (0, $4Zukt$react.useRef)(props);\n  var onScroll = (0, $4Zukt$react.useCallback)(function () {\n    if (ref.current && !isLoadingRef.current && onLoadMore) {\n      var shouldLoadMore = ref.current.scrollHeight - ref.current.scrollTop - ref.current.clientHeight < ref.current.clientHeight * scrollOffset;\n      if (shouldLoadMore) {\n        isLoadingRef.current = true;\n        onLoadMore();\n      }\n    }\n  }, [onLoadMore, ref, scrollOffset]);\n  var lastItems = (0, $4Zukt$react.useRef)(items);\n  (0, $78605a5d7424e31b$exports.useLayoutEffect)(function () {\n    if (props !== prevProps.current) {\n      isLoadingRef.current = isLoading;\n      prevProps.current = props;\n    }\n    var shouldLoadMore = (ref === null || ref === void 0 ? void 0 : ref.current) && !isLoadingRef.current && onLoadMore && (!items || items !== lastItems.current) && ref.current.clientHeight === ref.current.scrollHeight;\n    if (shouldLoadMore) {\n      isLoadingRef.current = true;\n      onLoadMore === null || onLoadMore === void 0 ? void 0 : onLoadMore();\n    }\n    lastItems.current = items;\n  }, [isLoading, onLoadMore, props, ref, items]);\n  (0, $2a8c0bb1629926c8$exports.useEvent)(ref, 'scroll', onScroll);\n}","map":{"version":3,"names":["$faa6ccd6fb62f877$export$7717c92ee915373e","props","ref","isLoading","onLoadMore","_props$scrollOffset","scrollOffset","items","isLoadingRef","$4Zukt$react","useRef","prevProps","onScroll","useCallback","current","shouldLoadMore","scrollHeight","scrollTop","clientHeight","lastItems","$78605a5d7424e31b$exports","useLayoutEffect","$2a8c0bb1629926c8$exports","useEvent"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\utils\\dist\\packages\\@react-aria\\utils\\src\\useLoadMore.ts"],"sourcesContent":["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useCallback, useRef} from 'react';\nimport {useEvent} from './useEvent';\n\nimport {useLayoutEffect} from './useLayoutEffect';\n\nexport interface LoadMoreProps {\n  /** Whether data is currently being loaded. */\n  isLoading?: boolean,\n  /** Handler that is called when more items should be loaded, e.g. while scrolling near the bottom.  */\n  onLoadMore?: () => void,\n  /**\n   * The amount of offset from the bottom of your scrollable region that should trigger load more.\n   * Uses a percentage value relative to the scroll body's client height. Load more is then triggered\n   * when your current scroll position's distance from the bottom of the currently loaded list of items is less than\n   * or equal to the provided value. (e.g. 1 = 100% of the scroll region's height).\n   * @default 1\n   */\n  scrollOffset?: number,\n  /** The data currently loaded. */\n  items?: any\n}\n\nexport function useLoadMore(props: LoadMoreProps, ref: RefObject<HTMLElement | null>): void {\n  let {isLoading, onLoadMore, scrollOffset = 1, items} = props;\n\n  // Handle scrolling, and call onLoadMore when nearing the bottom.\n  let isLoadingRef = useRef(isLoading);\n  let prevProps = useRef(props);\n  let onScroll = useCallback(() => {\n    if (ref.current && !isLoadingRef.current && onLoadMore) {\n      let shouldLoadMore = ref.current.scrollHeight - ref.current.scrollTop - ref.current.clientHeight < ref.current.clientHeight * scrollOffset;\n\n      if (shouldLoadMore) {\n        isLoadingRef.current = true;\n        onLoadMore();\n      }\n    }\n  }, [onLoadMore, ref, scrollOffset]);\n\n  let lastItems = useRef(items);\n  useLayoutEffect(() => {\n    // Only update isLoadingRef if props object actually changed,\n    // not if a local state change occurred.\n    if (props !== prevProps.current) {\n      isLoadingRef.current = isLoading;\n      prevProps.current = props;\n    }\n\n    // TODO: Eventually this hook will move back into RAC during which we will accept the collection as a option to this hook.\n    // We will only load more if the collection has changed after the last load to prevent multiple onLoadMore from being called\n    // while the data from the last onLoadMore is being processed by RAC collection.\n    let shouldLoadMore = ref?.current\n      && !isLoadingRef.current\n      && onLoadMore\n      && (!items || items !== lastItems.current)\n      && ref.current.clientHeight === ref.current.scrollHeight;\n\n    if (shouldLoadMore) {\n      isLoadingRef.current = true;\n      onLoadMore?.();\n    }\n\n    lastItems.current = items;\n  }, [isLoading, onLoadMore, props, ref, items]);\n\n  // TODO: maybe this should still just return scroll props?\n  // Test against case where the ref isn't defined when this is called\n  // Think this was a problem when trying to attach to the scrollable body of the table in OnLoadMoreTableBodyScroll\n  useEvent(ref, 'scroll', onScroll);\n}\n"],"mappings":";;;;;;;;;;;;;;AAkCO,SAASA,0CAAYC,KAAoB,EAAEC,GAAkC;EAClF,IAAKC,SAAS,GAAyCF,KAAA,CAAnDE,SAAA;IAAYC,UAAU,GAA6BH,KAAA,CAAzCG,UAAA;IAAAC,mBAAA,GAAyCJ,KAAA,CAA7BK,YAAA;IAAEA,YAAA,GAAAD,mBAAA,cAAe,IAAAA,mBAAA;IAAGE,KAAK,GAAIN,KAAA,CAAZM,KAAA;EAG3C,IAAIC,YAAA,GAAe,IAAAC,YAAA,CAAAC,MAAK,EAAEP,SAAA;EAC1B,IAAIQ,SAAA,GAAY,IAAAF,YAAA,CAAAC,MAAK,EAAET,KAAA;EACvB,IAAIW,QAAA,GAAW,IAAAH,YAAA,CAAAI,WAAU,EAAE;IACzB,IAAIX,GAAA,CAAIY,OAAO,IAAI,CAACN,YAAA,CAAaM,OAAO,IAAIV,UAAA,EAAY;MACtD,IAAIW,cAAA,GAAiBb,GAAA,CAAIY,OAAO,CAACE,YAAY,GAAGd,GAAA,CAAIY,OAAO,CAACG,SAAS,GAAGf,GAAA,CAAIY,OAAO,CAACI,YAAY,GAAGhB,GAAA,CAAIY,OAAO,CAACI,YAAY,GAAGZ,YAAA;MAE9H,IAAIS,cAAA,EAAgB;QAClBP,YAAA,CAAaM,OAAO,GAAG;QACvBV,UAAA;MACF;IACF;EACF,GAAG,CAACA,UAAA,EAAYF,GAAA,EAAKI,YAAA,CAAa;EAElC,IAAIa,SAAA,GAAY,IAAAV,YAAA,CAAAC,MAAK,EAAEH,KAAA;EACvB,IAAAa,yBAAA,CAAAC,eAAc,EAAE;IAGd,IAAIpB,KAAA,KAAUU,SAAA,CAAUG,OAAO,EAAE;MAC/BN,YAAA,CAAaM,OAAO,GAAGX,SAAA;MACvBQ,SAAA,CAAUG,OAAO,GAAGb,KAAA;IACtB;IAKA,IAAIc,cAAA,GAAiB,CAAAb,GAAA,aAAAA,GAAA,uBAAAA,GAAA,CAAKY,OAAO,KAC5B,CAACN,YAAA,CAAaM,OAAO,IACrBV,UAAA,KACC,CAACG,KAAA,IAASA,KAAA,KAAUY,SAAA,CAAUL,OAAO,CAAD,IACrCZ,GAAA,CAAIY,OAAO,CAACI,YAAY,KAAKhB,GAAA,CAAIY,OAAO,CAACE,YAAY;IAE1D,IAAID,cAAA,EAAgB;MAClBP,YAAA,CAAaM,OAAO,GAAG;MACvBV,UAAA,aAAAA,UAAA,uBAAAA,UAAA;IACF;IAEAe,SAAA,CAAUL,OAAO,GAAGP,KAAA;EACtB,GAAG,CAACJ,SAAA,EAAWC,UAAA,EAAYH,KAAA,EAAOC,GAAA,EAAKK,KAAA,CAAM;EAK7C,IAAAe,yBAAA,CAAAC,QAAO,EAAErB,GAAA,EAAK,UAAUU,QAAA;AAC1B","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}