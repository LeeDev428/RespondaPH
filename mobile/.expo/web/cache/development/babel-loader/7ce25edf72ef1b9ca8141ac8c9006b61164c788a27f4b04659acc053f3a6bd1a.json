{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useScreenReaderEnabled = useScreenReaderEnabled;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nfunction useScreenReaderEnabled() {\n  var _React$useState = _react.default.useState(false),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    enabled = _React$useState2[0],\n    setEnabled = _React$useState2[1];\n  var mountedRef = _react.default.useRef(false);\n  var handleSetEnabled = function handleSetEnabled(value) {\n    if (mountedRef.current) {\n      setEnabled(value);\n    }\n  };\n  _react.default.useEffect(function () {\n    mountedRef.current = true;\n    function setInitialValue() {\n      return _setInitialValue.apply(this, arguments);\n    }\n    function _setInitialValue() {\n      _setInitialValue = (0, _asyncToGenerator2.default)(function* () {\n        var res = yield _reactNative.AccessibilityInfo.isScreenReaderEnabled();\n        handleSetEnabled(res);\n      });\n      return _setInitialValue.apply(this, arguments);\n    }\n    var handler = _reactNative.AccessibilityInfo.addEventListener('screenReaderChanged', function (event) {\n      handleSetEnabled(event);\n    });\n    setInitialValue();\n    return function () {\n      mountedRef.current = false;\n      _reactNative.AccessibilityInfo.removeEventListener('screenReaderChanged', handler);\n    };\n  });\n  return enabled;\n}","map":{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","useScreenReaderEnabled","_React$useState","React","useState","_React$useState2","_slicedToArray2","default","enabled","setEnabled","mountedRef","useRef","handleSetEnabled","value","current","useEffect","setInitialValue","_setInitialValue","apply","arguments","_asyncToGenerator2","res","AccessibilityInfo","isScreenReaderEnabled","handler","addEventListener","event","removeEventListener"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\hooks\\useScreenReaderEnabled.ts"],"sourcesContent":["import React from 'react';\nimport { AccessibilityInfo } from 'react-native';\n\nexport function useScreenReaderEnabled() {\n  const [enabled, setEnabled] = React.useState(false);\n  const mountedRef = React.useRef(false);\n\n  const handleSetEnabled = (value: boolean) => {\n    if (mountedRef.current) {\n      setEnabled(value);\n    }\n  };\n\n  React.useEffect(() => {\n    mountedRef.current = true;\n    async function setInitialValue() {\n      const res = await AccessibilityInfo.isScreenReaderEnabled();\n      handleSetEnabled(res);\n    }\n\n    let handler: any = AccessibilityInfo.addEventListener(\n      'screenReaderChanged',\n      (event: any) => {\n        handleSetEnabled(event);\n      }\n    );\n\n    setInitialValue();\n    return () => {\n      mountedRef.current = false;\n      AccessibilityInfo.removeEventListener('screenReaderChanged', handler);\n    };\n  });\n\n  return enabled;\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAEO,SAASE,sBAATA,CAAA,EAAkC;EACvC,IAAAC,eAAA,GAA8BC,cAAK,CAACC,QAAN,CAAe,KAAf,CAA9B;IAAAC,gBAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAL,eAAA;IAAOM,OAAD,GAAAH,gBAAA;IAAUI,UAAV,GAAAJ,gBAAA;EACN,IAAMK,UAAU,GAAGP,cAAK,CAACQ,MAAN,CAAa,KAAb,CAAnB;EAEA,IAAMC,gBAAgB,GAAI,SAApBA,gBAAgBA,CAAIC,KAAD,EAAoB;IAC3C,IAAIH,UAAU,CAACI,OAAf,EAAwB;MACtBL,UAAU,CAACI,KAAD,CAAV;IACD;EACF,CAJD;EAMAV,cAAK,CAACY,SAAN,CAAgB,YAAM;IACpBL,UAAU,CAACI,OAAX,GAAqB,IAArB;IAAA,SACeE,eAAfA,CAAA;MAAA,OAAAC,gBAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAAA,SAAAF,iBAAA;MAAAA,gBAAA,OAAAG,kBAAA,CAAAb,OAAA,eAAiC;QAC/B,IAAMc,GAAG,SAASC,8BAAiB,CAACC,qBAAlB,EAAlB;QACAX,gBAAgB,CAACS,GAAD,CAAhB;MACD;MAAA,OAAAJ,gBAAA,CAAAC,KAAA,OAAAC,SAAA;IAAA;IAED,IAAIK,OAAY,GAAGF,8BAAiB,CAACG,gBAAlB,CACjB,qBADiB,EAEhB,UAAAC,KAAD,EAAgB;MACdd,gBAAgB,CAACc,KAAD,CAAhB;IACD,CAJgB,CAAnB;IAOAV,eAAe;IACf,OAAO,YAAM;MACXN,UAAU,CAACI,OAAX,GAAqB,KAArB;MACAQ,8BAAiB,CAACK,mBAAlB,CAAsC,qBAAtC,EAA6DH,OAA7D;IACD,CAHD;EAID,CAnBD;EAqBA,OAAOhB,OAAP;AACD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}