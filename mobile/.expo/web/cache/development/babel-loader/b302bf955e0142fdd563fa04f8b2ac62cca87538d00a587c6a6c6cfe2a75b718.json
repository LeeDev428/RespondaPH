{"ast":null,"code":"var _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\nvar $kFCAu$react = require(\"react\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"VALID_VALIDITY_STATE\", function () {\n  return $5d10129a174740d4$export$aca958c65c314e6c;\n});\n$parcel$export(module.exports, \"DEFAULT_VALIDATION_RESULT\", function () {\n  return $5d10129a174740d4$export$dad6ae84456c676a;\n});\n$parcel$export(module.exports, \"FormValidationContext\", function () {\n  return $5d10129a174740d4$export$571b5131b7e65c11;\n});\n$parcel$export(module.exports, \"privateValidationStateProp\", function () {\n  return $5d10129a174740d4$export$a763b9476acd3eb;\n});\n$parcel$export(module.exports, \"useFormValidationState\", function () {\n  return $5d10129a174740d4$export$fc1a364ae1f3ff10;\n});\n$parcel$export(module.exports, \"mergeValidation\", function () {\n  return $5d10129a174740d4$export$75ee7c75d68f5b0e;\n});\nvar $5d10129a174740d4$export$aca958c65c314e6c = {\n  badInput: false,\n  customError: false,\n  patternMismatch: false,\n  rangeOverflow: false,\n  rangeUnderflow: false,\n  stepMismatch: false,\n  tooLong: false,\n  tooShort: false,\n  typeMismatch: false,\n  valueMissing: false,\n  valid: true\n};\nvar $5d10129a174740d4$var$CUSTOM_VALIDITY_STATE = Object.assign({}, $5d10129a174740d4$export$aca958c65c314e6c, {\n  customError: true,\n  valid: false\n});\nvar $5d10129a174740d4$export$dad6ae84456c676a = {\n  isInvalid: false,\n  validationDetails: $5d10129a174740d4$export$aca958c65c314e6c,\n  validationErrors: []\n};\nvar $5d10129a174740d4$export$571b5131b7e65c11 = (0, $kFCAu$react.createContext)({});\nvar $5d10129a174740d4$export$a763b9476acd3eb = '__formValidationState' + Date.now();\nfunction $5d10129a174740d4$export$fc1a364ae1f3ff10(props) {\n  if (props[$5d10129a174740d4$export$a763b9476acd3eb]) {\n    var _props$$5d10129a = props[$5d10129a174740d4$export$a763b9476acd3eb],\n      realtimeValidation = _props$$5d10129a.realtimeValidation,\n      displayValidation = _props$$5d10129a.displayValidation,\n      updateValidation = _props$$5d10129a.updateValidation,\n      resetValidation = _props$$5d10129a.resetValidation,\n      commitValidation = _props$$5d10129a.commitValidation;\n    return {\n      realtimeValidation: realtimeValidation,\n      displayValidation: displayValidation,\n      updateValidation: updateValidation,\n      resetValidation: resetValidation,\n      commitValidation: commitValidation\n    };\n  }\n  return $5d10129a174740d4$var$useFormValidationStateImpl(props);\n}\nfunction $5d10129a174740d4$var$useFormValidationStateImpl(props) {\n  var isInvalid = props.isInvalid,\n    validationState = props.validationState,\n    name = props.name,\n    value = props.value,\n    builtinValidation = props.builtinValidation,\n    validate = props.validate,\n    _props$validationBeha = props.validationBehavior,\n    validationBehavior = _props$validationBeha === void 0 ? 'aria' : _props$validationBeha;\n  if (validationState) isInvalid || (isInvalid = validationState === 'invalid');\n  var controlledError = isInvalid !== undefined ? {\n    isInvalid: isInvalid,\n    validationErrors: [],\n    validationDetails: $5d10129a174740d4$var$CUSTOM_VALIDITY_STATE\n  } : null;\n  var clientError = (0, $kFCAu$react.useMemo)(function () {\n    if (!validate || value == null) return null;\n    var validateErrors = $5d10129a174740d4$var$runValidate(validate, value);\n    return $5d10129a174740d4$var$getValidationResult(validateErrors);\n  }, [validate, value]);\n  if (builtinValidation === null || builtinValidation === void 0 ? void 0 : builtinValidation.validationDetails.valid) builtinValidation = undefined;\n  var serverErrors = (0, $kFCAu$react.useContext)($5d10129a174740d4$export$571b5131b7e65c11);\n  var serverErrorMessages = (0, $kFCAu$react.useMemo)(function () {\n    if (name) return Array.isArray(name) ? name.flatMap(function (name) {\n      return $5d10129a174740d4$var$asArray(serverErrors[name]);\n    }) : $5d10129a174740d4$var$asArray(serverErrors[name]);\n    return [];\n  }, [serverErrors, name]);\n  var _ref = (0, $kFCAu$react.useState)(serverErrors),\n    _ref2 = _slicedToArray(_ref, 2),\n    lastServerErrors = _ref2[0],\n    setLastServerErrors = _ref2[1];\n  var _ref3 = (0, $kFCAu$react.useState)(false),\n    _ref4 = _slicedToArray(_ref3, 2),\n    isServerErrorCleared = _ref4[0],\n    setServerErrorCleared = _ref4[1];\n  if (serverErrors !== lastServerErrors) {\n    setLastServerErrors(serverErrors);\n    setServerErrorCleared(false);\n  }\n  var serverError = (0, $kFCAu$react.useMemo)(function () {\n    return $5d10129a174740d4$var$getValidationResult(isServerErrorCleared ? [] : serverErrorMessages);\n  }, [isServerErrorCleared, serverErrorMessages]);\n  var nextValidation = (0, $kFCAu$react.useRef)($5d10129a174740d4$export$dad6ae84456c676a);\n  var _ref5 = (0, $kFCAu$react.useState)($5d10129a174740d4$export$dad6ae84456c676a),\n    _ref6 = _slicedToArray(_ref5, 2),\n    currentValidity = _ref6[0],\n    setCurrentValidity = _ref6[1];\n  var lastError = (0, $kFCAu$react.useRef)($5d10129a174740d4$export$dad6ae84456c676a);\n  var commitValidation = function commitValidation() {\n    if (!commitQueued) return;\n    setCommitQueued(false);\n    var error = clientError || builtinValidation || nextValidation.current;\n    if (!$5d10129a174740d4$var$isEqualValidation(error, lastError.current)) {\n      lastError.current = error;\n      setCurrentValidity(error);\n    }\n  };\n  var _ref7 = (0, $kFCAu$react.useState)(false),\n    _ref8 = _slicedToArray(_ref7, 2),\n    commitQueued = _ref8[0],\n    setCommitQueued = _ref8[1];\n  (0, $kFCAu$react.useEffect)(commitValidation);\n  var realtimeValidation = controlledError || serverError || clientError || builtinValidation || $5d10129a174740d4$export$dad6ae84456c676a;\n  var displayValidation = validationBehavior === 'native' ? controlledError || serverError || currentValidity : controlledError || serverError || clientError || builtinValidation || currentValidity;\n  return {\n    realtimeValidation: realtimeValidation,\n    displayValidation: displayValidation,\n    updateValidation: function updateValidation(value) {\n      if (validationBehavior === 'aria' && !$5d10129a174740d4$var$isEqualValidation(currentValidity, value)) setCurrentValidity(value);else nextValidation.current = value;\n    },\n    resetValidation: function resetValidation() {\n      var error = $5d10129a174740d4$export$dad6ae84456c676a;\n      if (!$5d10129a174740d4$var$isEqualValidation(error, lastError.current)) {\n        lastError.current = error;\n        setCurrentValidity(error);\n      }\n      if (validationBehavior === 'native') setCommitQueued(false);\n      setServerErrorCleared(true);\n    },\n    commitValidation: function commitValidation() {\n      if (validationBehavior === 'native') setCommitQueued(true);\n      setServerErrorCleared(true);\n    }\n  };\n}\nfunction $5d10129a174740d4$var$asArray(v) {\n  if (!v) return [];\n  return Array.isArray(v) ? v : [v];\n}\nfunction $5d10129a174740d4$var$runValidate(validate, value) {\n  if (typeof validate === 'function') {\n    var e = validate(value);\n    if (e && typeof e !== 'boolean') return $5d10129a174740d4$var$asArray(e);\n  }\n  return [];\n}\nfunction $5d10129a174740d4$var$getValidationResult(errors) {\n  return errors.length ? {\n    isInvalid: true,\n    validationErrors: errors,\n    validationDetails: $5d10129a174740d4$var$CUSTOM_VALIDITY_STATE\n  } : null;\n}\nfunction $5d10129a174740d4$var$isEqualValidation(a, b) {\n  if (a === b) return true;\n  return !!a && !!b && a.isInvalid === b.isInvalid && a.validationErrors.length === b.validationErrors.length && a.validationErrors.every(function (a, i) {\n    return a === b.validationErrors[i];\n  }) && Object.entries(a.validationDetails).every(function (_ref9) {\n    var _ref0 = _slicedToArray(_ref9, 2),\n      k = _ref0[0],\n      v = _ref0[1];\n    return b.validationDetails[k] === v;\n  });\n}\nfunction $5d10129a174740d4$export$75ee7c75d68f5b0e() {\n  var errors = new Set();\n  var isInvalid = false;\n  var validationDetails = Object.assign({}, $5d10129a174740d4$export$aca958c65c314e6c);\n  for (var _len = arguments.length, results = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n    results[_key2] = arguments[_key2];\n  }\n  for (var v of results) {\n    var _validationDetails, _key;\n    for (var e of v.validationErrors) errors.add(e);\n    isInvalid || (isInvalid = v.isInvalid);\n    for (var key in validationDetails) (_validationDetails = validationDetails)[_key = key] || (_validationDetails[_key] = v.validationDetails[key]);\n  }\n  validationDetails.valid = !isInvalid;\n  return {\n    isInvalid: isInvalid,\n    validationErrors: _toConsumableArray(errors),\n    validationDetails: validationDetails\n  };\n}","map":{"version":3,"names":["$5d10129a174740d4$export$aca958c65c314e6c","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","valid","$5d10129a174740d4$var$CUSTOM_VALIDITY_STATE","Object","assign","$5d10129a174740d4$export$dad6ae84456c676a","isInvalid","validationDetails","validationErrors","$5d10129a174740d4$export$571b5131b7e65c11","$kFCAu$react","createContext","$5d10129a174740d4$export$a763b9476acd3eb","Date","now","$5d10129a174740d4$export$fc1a364ae1f3ff10","props","_props$$5d10129a","realtimeValidation","displayValidation","updateValidation","resetValidation","commitValidation","$5d10129a174740d4$var$useFormValidationStateImpl","validationState","name","value","builtinValidation","validate","_props$validationBeha","validationBehavior","controlledError","undefined","clientError","useMemo","validateErrors","$5d10129a174740d4$var$runValidate","$5d10129a174740d4$var$getValidationResult","serverErrors","useContext","serverErrorMessages","Array","isArray","flatMap","$5d10129a174740d4$var$asArray","_ref","useState","_ref2","_slicedToArray","lastServerErrors","setLastServerErrors","_ref3","_ref4","isServerErrorCleared","setServerErrorCleared","serverError","nextValidation","useRef","_ref5","_ref6","currentValidity","setCurrentValidity","lastError","commitQueued","setCommitQueued","error","current","$5d10129a174740d4$var$isEqualValidation","_ref7","_ref8","useEffect","v","e","errors","length","a","b","every","i","entries","_ref9","_ref0","k","$5d10129a174740d4$export$75ee7c75d68f5b0e","Set","_len","arguments","results","_key2","_validationDetails","_key","add","key","_toConsumableArray"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-stately\\form\\dist\\packages\\@react-stately\\form\\src\\useFormValidationState.ts"],"sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Context, createContext, useContext, useEffect, useMemo, useRef, useState} from 'react';\nimport {Validation, ValidationErrors, ValidationFunction, ValidationResult} from '@react-types/shared';\n\nexport const VALID_VALIDITY_STATE: ValidityState = {\n  badInput: false,\n  customError: false,\n  patternMismatch: false,\n  rangeOverflow: false,\n  rangeUnderflow: false,\n  stepMismatch: false,\n  tooLong: false,\n  tooShort: false,\n  typeMismatch: false,\n  valueMissing: false,\n  valid: true\n};\n\nconst CUSTOM_VALIDITY_STATE: ValidityState = {\n  ...VALID_VALIDITY_STATE,\n  customError: true,\n  valid: false\n};\n\nexport const DEFAULT_VALIDATION_RESULT: ValidationResult = {\n  isInvalid: false,\n  validationDetails: VALID_VALIDITY_STATE,\n  validationErrors: []\n};\n\nexport const FormValidationContext: Context<ValidationErrors> = createContext<ValidationErrors>({});\n\nexport const privateValidationStateProp: string = '__formValidationState' + Date.now();\n\ninterface FormValidationProps<T> extends Validation<T> {\n  builtinValidation?: ValidationResult,\n  name?: string | string[],\n  value: T | null\n}\n\nexport interface FormValidationState {\n  /** Realtime validation results, updated as the user edits the value. */\n  realtimeValidation: ValidationResult,\n  /** Currently displayed validation results, updated when the user commits their changes. */\n  displayValidation: ValidationResult,\n  /** Updates the current validation result. Not displayed to the user until `commitValidation` is called. */\n  updateValidation(result: ValidationResult): void,\n  /** Resets the displayed validation state to valid when the user resets the form. */\n  resetValidation(): void,\n  /** Commits the realtime validation so it is displayed to the user. */\n  commitValidation(): void\n}\n\nexport function useFormValidationState<T>(props: FormValidationProps<T>): FormValidationState {\n  // Private prop for parent components to pass state to children.\n  if (props[privateValidationStateProp]) {\n    let {realtimeValidation, displayValidation, updateValidation, resetValidation, commitValidation} = props[privateValidationStateProp] as FormValidationState;\n    return {realtimeValidation, displayValidation, updateValidation, resetValidation, commitValidation};\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useFormValidationStateImpl(props);\n}\n\nfunction useFormValidationStateImpl<T>(props: FormValidationProps<T>): FormValidationState {\n  let {isInvalid, validationState, name, value, builtinValidation, validate, validationBehavior = 'aria'} = props;\n\n  // backward compatibility.\n  if (validationState) {\n    isInvalid ||= validationState === 'invalid';\n  }\n\n  // If the isInvalid prop is controlled, update validation result in realtime.\n  let controlledError: ValidationResult | null = isInvalid !== undefined ? {\n    isInvalid,\n    validationErrors: [],\n    validationDetails: CUSTOM_VALIDITY_STATE\n  } : null;\n\n  // Perform custom client side validation.\n  let clientError: ValidationResult | null = useMemo(() => {\n    if (!validate || value == null) {\n      return null;\n    }\n    let validateErrors = runValidate(validate, value);\n    return getValidationResult(validateErrors);\n  }, [validate, value]);\n\n  if (builtinValidation?.validationDetails.valid) {\n    builtinValidation = undefined;\n  }\n\n  // Get relevant server errors from the form.\n  let serverErrors = useContext(FormValidationContext);\n  let serverErrorMessages = useMemo(() => {\n    if (name) {\n      return Array.isArray(name) ? name.flatMap(name => asArray(serverErrors[name])) : asArray(serverErrors[name]);\n    }\n    return [];\n  }, [serverErrors, name]);\n\n  // Show server errors when the form gets a new value, and clear when the user changes the value.\n  let [lastServerErrors, setLastServerErrors] = useState(serverErrors);\n  let [isServerErrorCleared, setServerErrorCleared] = useState(false);\n  if (serverErrors !== lastServerErrors) {\n    setLastServerErrors(serverErrors);\n    setServerErrorCleared(false);\n  }\n\n  let serverError: ValidationResult | null = useMemo(() =>\n    getValidationResult(isServerErrorCleared ? [] : serverErrorMessages),\n    [isServerErrorCleared, serverErrorMessages]\n  );\n\n  // Track the next validation state in a ref until commitValidation is called.\n  let nextValidation = useRef(DEFAULT_VALIDATION_RESULT);\n  let [currentValidity, setCurrentValidity] = useState(DEFAULT_VALIDATION_RESULT);\n\n  let lastError = useRef(DEFAULT_VALIDATION_RESULT);\n  let commitValidation = () => {\n    if (!commitQueued) {\n      return;\n    }\n\n    setCommitQueued(false);\n    let error = clientError || builtinValidation || nextValidation.current;\n    if (!isEqualValidation(error, lastError.current)) {\n      lastError.current = error;\n      setCurrentValidity(error);\n    }\n  };\n\n  let [commitQueued, setCommitQueued] = useState(false);\n  useEffect(commitValidation);\n\n  // realtimeValidation is used to update the native input element's state based on custom validation logic.\n  // displayValidation is the currently displayed validation state that the user sees (e.g. on input change/form submit).\n  // With validationBehavior=\"aria\", all errors are displayed in realtime rather than on submit.\n  let realtimeValidation = controlledError || serverError || clientError || builtinValidation || DEFAULT_VALIDATION_RESULT;\n  let displayValidation = validationBehavior === 'native'\n    ? controlledError || serverError || currentValidity\n    : controlledError || serverError || clientError || builtinValidation || currentValidity;\n\n  return {\n    realtimeValidation,\n    displayValidation,\n    updateValidation(value) {\n      // If validationBehavior is 'aria', update in realtime. Otherwise, store in a ref until commit.\n      if (validationBehavior === 'aria' && !isEqualValidation(currentValidity, value)) {\n        setCurrentValidity(value);\n      } else {\n        nextValidation.current = value;\n      }\n    },\n    resetValidation() {\n      // Update the currently displayed validation state to valid on form reset,\n      // even if the native validity says it isn't. It'll show again on the next form submit.\n      let error = DEFAULT_VALIDATION_RESULT;\n      if (!isEqualValidation(error, lastError.current)) {\n        lastError.current = error;\n        setCurrentValidity(error);\n      }\n\n      // Do not commit validation after the next render. This avoids a condition where\n      // useSelect calls commitValidation inside an onReset handler.\n      if (validationBehavior === 'native') {\n        setCommitQueued(false);\n      }\n\n      setServerErrorCleared(true);\n    },\n    commitValidation() {\n      // Commit validation state so the user sees it on blur/change/submit. Also clear any server errors.\n      // Wait until after the next render to commit so that the latest value has been validated.\n      if (validationBehavior === 'native') {\n        setCommitQueued(true);\n      }\n      setServerErrorCleared(true);\n    }\n  };\n}\n\nfunction asArray<T>(v: T | T[]): T[] {\n  if (!v) {\n    return [];\n  }\n\n  return Array.isArray(v) ? v : [v];\n}\n\nfunction runValidate<T>(validate: ValidationFunction<T>, value: T): string[] {\n  if (typeof validate === 'function') {\n    let e = validate(value);\n    if (e && typeof e !== 'boolean') {\n      return asArray(e);\n    }\n  }\n\n  return [];\n}\n\nfunction getValidationResult(errors: string[]): ValidationResult | null {\n  return errors.length ? {\n    isInvalid: true,\n    validationErrors: errors,\n    validationDetails: CUSTOM_VALIDITY_STATE\n  } : null;\n}\n\nfunction isEqualValidation(a: ValidationResult | null, b: ValidationResult | null): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  return !!a && !!b\n    && a.isInvalid === b.isInvalid\n    && a.validationErrors.length === b.validationErrors.length\n    && a.validationErrors.every((a, i) => a === b.validationErrors[i])\n    && Object.entries(a.validationDetails).every(([k, v]) => b.validationDetails[k] === v);\n}\n\nexport function mergeValidation(...results: ValidationResult[]): ValidationResult {\n  let errors = new Set<string>();\n  let isInvalid = false;\n  let validationDetails = {\n    ...VALID_VALIDITY_STATE\n  };\n\n  for (let v of results) {\n    for (let e of v.validationErrors) {\n      errors.add(e);\n    }\n\n    // Only these properties apply for checkboxes.\n    isInvalid ||= v.isInvalid;\n    for (let key in validationDetails) {\n      validationDetails[key] ||= v.validationDetails[key];\n    }\n  }\n\n  validationDetails.valid = !isInvalid;\n  return {\n    isInvalid,\n    validationErrors: [...errors],\n    validationDetails\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}