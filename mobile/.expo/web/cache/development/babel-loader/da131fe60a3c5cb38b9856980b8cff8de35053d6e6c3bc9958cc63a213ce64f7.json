{"ast":null,"code":"var $625cf83917e112ad$exports = require(\"./utils.main.js\");\nvar $kDAhS$react = require(\"react\");\nvar $kDAhS$reactariautils = require(\"@react-aria/utils\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useFocusWithin\", function () {\n  return $d16842bbd0359d1b$export$420e68273165f4ec;\n});\nfunction $d16842bbd0359d1b$export$420e68273165f4ec(props) {\n  var isDisabled = props.isDisabled,\n    onBlurWithin = props.onBlurWithin,\n    onFocusWithin = props.onFocusWithin,\n    onFocusWithinChange = props.onFocusWithinChange;\n  var state = (0, $kDAhS$react.useRef)({\n    isFocusWithin: false\n  });\n  var _ref = (0, $kDAhS$reactariautils.useGlobalListeners)(),\n    addGlobalListener = _ref.addGlobalListener,\n    removeAllGlobalListeners = _ref.removeAllGlobalListeners;\n  var onBlur = (0, $kDAhS$react.useCallback)(function (e) {\n    if (!e.currentTarget.contains(e.target)) return;\n    if (state.current.isFocusWithin && !e.currentTarget.contains(e.relatedTarget)) {\n      state.current.isFocusWithin = false;\n      removeAllGlobalListeners();\n      if (onBlurWithin) onBlurWithin(e);\n      if (onFocusWithinChange) onFocusWithinChange(false);\n    }\n  }, [onBlurWithin, onFocusWithinChange, state, removeAllGlobalListeners]);\n  var onSyntheticFocus = (0, $625cf83917e112ad$exports.useSyntheticBlurEvent)(onBlur);\n  var onFocus = (0, $kDAhS$react.useCallback)(function (e) {\n    if (!e.currentTarget.contains(e.target)) return;\n    var ownerDocument = (0, $kDAhS$reactariautils.getOwnerDocument)(e.target);\n    var activeElement = (0, $kDAhS$reactariautils.getActiveElement)(ownerDocument);\n    if (!state.current.isFocusWithin && activeElement === (0, $kDAhS$reactariautils.getEventTarget)(e.nativeEvent)) {\n      if (onFocusWithin) onFocusWithin(e);\n      if (onFocusWithinChange) onFocusWithinChange(true);\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n      var currentTarget = e.currentTarget;\n      addGlobalListener(ownerDocument, 'focus', function (e) {\n        if (state.current.isFocusWithin && !(0, $kDAhS$reactariautils.nodeContains)(currentTarget, e.target)) {\n          var nativeEvent = new ownerDocument.defaultView.FocusEvent('blur', {\n            relatedTarget: e.target\n          });\n          (0, $625cf83917e112ad$exports.setEventTarget)(nativeEvent, currentTarget);\n          var event = (0, $625cf83917e112ad$exports.createSyntheticEvent)(nativeEvent);\n          onBlur(event);\n        }\n      }, {\n        capture: true\n      });\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus, addGlobalListener, onBlur]);\n  if (isDisabled) return {\n    focusWithinProps: {\n      onFocus: undefined,\n      onBlur: undefined\n    }\n  };\n  return {\n    focusWithinProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}","map":{"version":3,"names":["$d16842bbd0359d1b$export$420e68273165f4ec","props","isDisabled","onBlurWithin","onFocusWithin","onFocusWithinChange","state","$kDAhS$react","useRef","isFocusWithin","_ref","$kDAhS$reactariautils","useGlobalListeners","addGlobalListener","removeAllGlobalListeners","onBlur","useCallback","e","currentTarget","contains","target","current","relatedTarget","onSyntheticFocus","$625cf83917e112ad$exports","useSyntheticBlurEvent","onFocus","ownerDocument","getOwnerDocument","activeElement","getActiveElement","getEventTarget","nativeEvent","nodeContains","defaultView","FocusEvent","setEventTarget","event","createSyntheticEvent","capture","focusWithinProps","undefined"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useFocusWithin.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// Portions of the code in this file are based on code from react.\n// Original licensing for the following can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/facebook/react/tree/cc7c1aece46a6b69b41958d731e0fd27c94bfc6c/packages/react-interactions\n\nimport {createSyntheticEvent, setEventTarget, useSyntheticBlurEvent} from './utils';\nimport {DOMAttributes} from '@react-types/shared';\nimport {FocusEvent, useCallback, useRef} from 'react';\nimport {getActiveElement, getEventTarget, getOwnerDocument, nodeContains, useGlobalListeners} from '@react-aria/utils';\n\nexport interface FocusWithinProps {\n  /** Whether the focus within events should be disabled. */\n  isDisabled?: boolean,\n  /** Handler that is called when the target element or a descendant receives focus. */\n  onFocusWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the target element and all descendants lose focus. */\n  onBlurWithin?: (e: FocusEvent) => void,\n  /** Handler that is called when the the focus within state changes. */\n  onFocusWithinChange?: (isFocusWithin: boolean) => void\n}\n\nexport interface FocusWithinResult {\n  /** Props to spread onto the target element. */\n  focusWithinProps: DOMAttributes\n}\n\n/**\n * Handles focus events for the target and its descendants.\n */\nexport function useFocusWithin(props: FocusWithinProps): FocusWithinResult {\n  let {\n    isDisabled,\n    onBlurWithin,\n    onFocusWithin,\n    onFocusWithinChange\n  } = props;\n  let state = useRef({\n    isFocusWithin: false\n  });\n\n  let {addGlobalListener, removeAllGlobalListeners} = useGlobalListeners();\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    // Ignore events bubbling through portals.\n    if (!e.currentTarget.contains(e.target)) {\n      return;\n    }\n\n    // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n    // when moving focus inside the element. Only trigger if the currentTarget doesn't\n    // include the relatedTarget (where focus is moving).\n    if (state.current.isFocusWithin && !(e.currentTarget as Element).contains(e.relatedTarget as Element)) {\n      state.current.isFocusWithin = false;\n      removeAllGlobalListeners();\n\n      if (onBlurWithin) {\n        onBlurWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(false);\n      }\n    }\n  }, [onBlurWithin, onFocusWithinChange, state, removeAllGlobalListeners]);\n\n  let onSyntheticFocus = useSyntheticBlurEvent(onBlur);\n  let onFocus = useCallback((e: FocusEvent) => {\n    // Ignore events bubbling through portals.\n    if (!e.currentTarget.contains(e.target)) {\n      return;\n    }\n\n    // Double check that document.activeElement actually matches e.target in case a previously chained\n    // focus handler already moved focus somewhere else.\n    const ownerDocument = getOwnerDocument(e.target);\n    const activeElement = getActiveElement(ownerDocument);\n    if (!state.current.isFocusWithin && activeElement === getEventTarget(e.nativeEvent)) {\n      if (onFocusWithin) {\n        onFocusWithin(e);\n      }\n\n      if (onFocusWithinChange) {\n        onFocusWithinChange(true);\n      }\n\n      state.current.isFocusWithin = true;\n      onSyntheticFocus(e);\n\n      // Browsers don't fire blur events when elements are removed from the DOM.\n      // However, if a focus event occurs outside the element we're tracking, we\n      // can manually fire onBlur.\n      let currentTarget = e.currentTarget;\n      addGlobalListener(ownerDocument, 'focus', e => {\n        if (state.current.isFocusWithin && !nodeContains(currentTarget, e.target as Element)) {\n          let nativeEvent = new ownerDocument.defaultView!.FocusEvent('blur', {relatedTarget: e.target});\n          setEventTarget(nativeEvent, currentTarget);\n          let event = createSyntheticEvent<FocusEvent>(nativeEvent);\n          onBlur(event);\n        }\n      }, {capture: true});\n    }\n  }, [onFocusWithin, onFocusWithinChange, onSyntheticFocus, addGlobalListener, onBlur]);\n\n  if (isDisabled) {\n    return {\n      focusWithinProps: {\n        // These cannot be null, that would conflict in mergeProps\n        onFocus: undefined,\n        onBlur: undefined\n      }\n    };\n  }\n\n  return {\n    focusWithinProps: {\n      onFocus,\n      onBlur\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}