{"ast":null,"code":"var $9e20cff0af27e8cc$exports = require(\"./platform.main.js\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"isCtrlKeyPressed\", function () {\n  return $2308dc377e184bb0$export$16792effe837dba3;\n});\n$parcel$export(module.exports, \"willOpenKeyboard\", function () {\n  return $2308dc377e184bb0$export$c57958e35f31ed73;\n});\nfunction $2308dc377e184bb0$export$16792effe837dba3(e) {\n  if ((0, $9e20cff0af27e8cc$exports.isMac)()) return e.metaKey;\n  return e.ctrlKey;\n}\nvar $2308dc377e184bb0$var$nonTextInputTypes = new Set(['checkbox', 'radio', 'range', 'color', 'file', 'image', 'button', 'submit', 'reset']);\nfunction $2308dc377e184bb0$export$c57958e35f31ed73(target) {\n  return target instanceof HTMLInputElement && !$2308dc377e184bb0$var$nonTextInputTypes.has(target.type) || target instanceof HTMLTextAreaElement || target instanceof HTMLElement && target.isContentEditable;\n}","map":{"version":3,"names":["$2308dc377e184bb0$export$16792effe837dba3","e","$9e20cff0af27e8cc$exports","isMac","metaKey","ctrlKey","$2308dc377e184bb0$var$nonTextInputTypes","Set","$2308dc377e184bb0$export$c57958e35f31ed73","target","HTMLInputElement","has","type","HTMLTextAreaElement","HTMLElement","isContentEditable"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\utils\\dist\\packages\\@react-aria\\utils\\src\\keyboard.tsx"],"sourcesContent":["/*\n * Copyright 2024 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isMac} from './platform';\n\ninterface Event {\n  altKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean\n}\n\nexport function isCtrlKeyPressed(e: Event): boolean {\n  if (isMac()) {\n    return e.metaKey;\n  }\n\n  return e.ctrlKey;\n}\n\n// HTML input types that do not cause the software keyboard to appear.\nconst nonTextInputTypes = new Set([\n  'checkbox',\n  'radio',\n  'range',\n  'color',\n  'file',\n  'image',\n  'button',\n  'submit',\n  'reset'\n]);\n\nexport function willOpenKeyboard(target: Element) {\n  return (\n    (target instanceof HTMLInputElement && !nonTextInputTypes.has(target.type)) ||\n    target instanceof HTMLTextAreaElement ||\n    (target instanceof HTMLElement && target.isContentEditable)\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;AAoBO,SAASA,0CAAiBC,CAAQ;EACvC,IAAI,IAAAC,yBAAA,CAAAC,KAAI,KACN,OAAOF,CAAA,CAAEG,OAAO;EAGlB,OAAOH,CAAA,CAAEI,OAAO;AAClB;AAGA,IAAMC,uCAAA,GAAoB,IAAIC,GAAA,CAAI,CAChC,YACA,SACA,SACA,SACA,QACA,SACA,UACA,UACA,QACD;AAEM,SAASC,0CAAiBC,MAAe;EAC9C,OACEA,MAAC,YAAkBC,gBAAA,IAAoB,CAACJ,uCAAA,CAAkBK,GAAG,CAACF,MAAA,CAAOG,IAAI,KACzEH,MAAA,YAAkBI,mBAAA,IACjBJ,MAAA,YAAkBK,WAAA,IAAeL,MAAA,CAAOM,iBAAiB;AAE9D","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}