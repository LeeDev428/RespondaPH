{"ast":null,"code":"var $5Zch8$react = require(\"react\");\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"Item\", function () {\n  return $c870f3b549c61b6b$export$6d08773d2e66f8f2;\n});\nfunction $c870f3b549c61b6b$var$Item(props) {\n  return null;\n}\n$c870f3b549c61b6b$var$Item.getCollectionNode = function* getCollectionNode(props, context) {\n  var childItems = props.childItems,\n    title = props.title,\n    children = props.children;\n  var rendered = props.title || props.children;\n  var textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n  if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning) && process.env.NODE_ENV !== 'production') console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n  yield {\n    type: 'item',\n    props: props,\n    rendered: rendered,\n    textValue: textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: $c870f3b549c61b6b$var$hasChildItems(props),\n    childNodes: function* childNodes() {\n      if (childItems) for (var child of childItems) yield {\n        type: 'item',\n        value: child\n      };else if (title) {\n        var items = [];\n        (0, $parcel$interopDefault($5Zch8$react)).Children.forEach(children, function (child) {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n        yield* items;\n      }\n    }\n  };\n};\nfunction $c870f3b549c61b6b$var$hasChildItems(props) {\n  if (props.hasChildItems != null) return props.hasChildItems;\n  if (props.childItems) return true;\n  if (props.title && (0, $parcel$interopDefault($5Zch8$react)).Children.count(props.children) > 0) return true;\n  return false;\n}\nvar $c870f3b549c61b6b$export$6d08773d2e66f8f2 = $c870f3b549c61b6b$var$Item;","map":{"version":3,"names":["$c870f3b549c61b6b$var$Item","props","getCollectionNode","context","childItems","title","children","rendered","textValue","suppressTextValueWarning","process","env","NODE_ENV","console","warn","type","hasChildNodes","$c870f3b549c61b6b$var$hasChildItems","childNodes","child","value","items","$parcel$interopDefault","$5Zch8$react","Children","forEach","push","element","hasChildItems","count","$c870f3b549c61b6b$export$6d08773d2e66f8f2"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\menu\\node_modules\\@react-stately\\collections\\dist\\packages\\@react-stately\\collections\\src\\Item.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ItemElement, ItemProps} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {JSX, ReactElement} from 'react';\n\nfunction Item<T>(props: ItemProps<T>): ReactElement | null { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nItem.getCollectionNode = function* getCollectionNode<T>(props: ItemProps<T>, context: any): Generator<PartialNode<T>> {\n  let {childItems, title, children} = props;\n\n  let rendered = props.title || props.children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n\n  // suppressTextValueWarning is used in components like Tabs, which don't have type to select support.\n  if (!textValue && !context?.suppressTextValueWarning && process.env.NODE_ENV !== 'production') {\n    console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n  }\n\n  yield {\n    type: 'item',\n    props: props,\n    rendered,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: hasChildItems(props),\n    *childNodes() {\n      if (childItems) {\n        for (let child of childItems) {\n          yield {\n            type: 'item',\n            value: child\n          };\n        }\n      } else if (title) {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child as ItemElement<T>\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\nfunction hasChildItems<T>(props: ItemProps<T>) {\n  if (props.hasChildItems != null) {\n    return props.hasChildItems;\n  }\n\n  if (props.childItems) {\n    return true;\n  }\n\n  if (props.title && React.Children.count(props.children) > 0) {\n    return true;\n  }\n\n  return false;\n}\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Item = Item as <T>(props: ItemProps<T>) => JSX.Element;\nexport {_Item as Item};\n"],"mappings":";;;;;;;;;;;;;;;AAgBA,SAASA,2BAAQC,KAAmB;EAClC,OAAO;AACT;AAEAD,0BAAA,CAAKE,iBAAiB,GAAG,UAAUA,kBAAqBD,KAAmB,EAAEE,OAAY;EACvF,IAAKC,UAAU,GAAqBH,KAAA,CAAhCG,UAAA;IAAaC,KAAK,GAAcJ,KAAA,CAArBI,KAAA;IAASC,QAAQ,GAAIL,KAAA,CAAdK,QAAA;EAEtB,IAAIC,QAAA,GAAWN,KAAA,CAAMI,KAAK,IAAIJ,KAAA,CAAMK,QAAQ;EAC5C,IAAIE,SAAA,GAAYP,KAAA,CAAMO,SAAS,KAAK,OAAOD,QAAA,KAAa,WAAWA,QAAA,GAAW,EAAC,KAAMN,KAAK,CAAC,aAAa,IAAI;EAG5G,IAAI,CAACO,SAAA,IAAa,EAACL,OAAA,aAAAA,OAAA,uBAAAA,OAAA,CAASM,wBAAwB,KAAIC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,cAC/EC,OAAA,CAAQC,IAAI,CAAC;EAGf,MAAM;IACJC,IAAA,EAAM;IACNd,KAAA,EAAOA,KAAA;cACPM,QAAA;eACAC,SAAA;IACA,cAAcP,KAAK,CAAC,aAAa;IACjCe,aAAA,EAAeC,mCAAA,CAAchB,KAAA;IAC5BiB,UAAA,YAAAA,WAAA;MACC,IAAId,UAAA,EACF,KAAK,IAAIe,KAAA,IAASf,UAAA,EAChB,MAAM;QACJW,IAAA,EAAM;QACNK,KAAA,EAAOD;MACT,OAEG,IAAId,KAAA,EAAO;QAChB,IAAIgB,KAAA,GAA0B,EAAE;QAChC,IAAAC,sBAAA,CAAAC,YAAA,CAAI,EAAEC,QAAQ,CAACC,OAAO,CAACnB,QAAA,EAAU,UAAAa,KAAA;UAC/BE,KAAA,CAAMK,IAAI,CAAC;YACTX,IAAA,EAAM;YACNY,OAAA,EAASR;UACX;QACF;QAEA,OAAOE,KAAA;MACT;IACF;EACF;AACF;AAEA,SAASJ,oCAAiBhB,KAAmB;EAC3C,IAAIA,KAAA,CAAM2B,aAAa,IAAI,MACzB,OAAO3B,KAAA,CAAM2B,aAAa;EAG5B,IAAI3B,KAAA,CAAMG,UAAU,EAClB,OAAO;EAGT,IAAIH,KAAA,CAAMI,KAAK,IAAI,IAAAiB,sBAAA,CAAAC,YAAA,CAAI,EAAEC,QAAQ,CAACK,KAAK,CAAC5B,KAAA,CAAMK,QAAQ,IAAI,GACxD,OAAO;EAGT,OAAO;AACT;AAGA,IAAIwB,yCAAA,GAAQ9B,0BAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}