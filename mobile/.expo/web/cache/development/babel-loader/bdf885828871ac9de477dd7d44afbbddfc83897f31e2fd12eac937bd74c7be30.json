{"ast":null,"code":"var $j3sn1$reactariainteractions = require(\"@react-aria/interactions\");\nvar $j3sn1$react = require(\"react\");\nvar $j3sn1$reactariautils = require(\"@react-aria/utils\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useFormValidation\", function () {\n  return $9da8e3f192aba981$export$b8473d3665f3a75a;\n});\nfunction $9da8e3f192aba981$export$b8473d3665f3a75a(props, state, ref) {\n  var validationBehavior = props.validationBehavior,\n    focus = props.focus;\n  (0, $j3sn1$reactariautils.useLayoutEffect)(function () {\n    if (validationBehavior === 'native' && (ref === null || ref === void 0 ? void 0 : ref.current) && !ref.current.disabled) {\n      var errorMessage = state.realtimeValidation.isInvalid ? state.realtimeValidation.validationErrors.join(' ') || 'Invalid value.' : '';\n      ref.current.setCustomValidity(errorMessage);\n      if (!ref.current.hasAttribute('title')) ref.current.title = '';\n      if (!state.realtimeValidation.isInvalid) state.updateValidation($9da8e3f192aba981$var$getNativeValidity(ref.current));\n    }\n  });\n  var isIgnoredReset = (0, $j3sn1$react.useRef)(false);\n  var onReset = (0, $j3sn1$reactariautils.useEffectEvent)(function () {\n    if (!isIgnoredReset.current) state.resetValidation();\n  });\n  var onInvalid = (0, $j3sn1$reactariautils.useEffectEvent)(function (e) {\n    var _ref_current;\n    if (!state.displayValidation.isInvalid) state.commitValidation();\n    var form = ref === null || ref === void 0 ? void 0 : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.form;\n    if (!e.defaultPrevented && ref && form && $9da8e3f192aba981$var$getFirstInvalidInput(form) === ref.current) {\n      var _ref_current1;\n      if (focus) focus();else (_ref_current1 = ref.current) === null || _ref_current1 === void 0 ? void 0 : _ref_current1.focus();\n      (0, $j3sn1$reactariainteractions.setInteractionModality)('keyboard');\n    }\n    e.preventDefault();\n  });\n  var onChange = (0, $j3sn1$reactariautils.useEffectEvent)(function () {\n    state.commitValidation();\n  });\n  (0, $j3sn1$react.useEffect)(function () {\n    var input = ref === null || ref === void 0 ? void 0 : ref.current;\n    if (!input) return;\n    var form = input.form;\n    var reset = form === null || form === void 0 ? void 0 : form.reset;\n    if (form) form.reset = function () {\n        isIgnoredReset.current = !window.event || window.event.type === 'message' && window.event.target instanceof MessagePort;\n        reset === null || reset === void 0 ? void 0 : reset.call(form);\n        isIgnoredReset.current = false;\n      };\n    input.addEventListener('invalid', onInvalid);\n    input.addEventListener('change', onChange);\n    form === null || form === void 0 ? void 0 : form.addEventListener('reset', onReset);\n    return function () {\n      input.removeEventListener('invalid', onInvalid);\n      input.removeEventListener('change', onChange);\n      form === null || form === void 0 ? void 0 : form.removeEventListener('reset', onReset);\n      if (form) form.reset = reset;\n    };\n  }, [ref, onInvalid, onChange, onReset, validationBehavior]);\n}\nfunction $9da8e3f192aba981$var$getValidity(input) {\n  var validity = input.validity;\n  return {\n    badInput: validity.badInput,\n    customError: validity.customError,\n    patternMismatch: validity.patternMismatch,\n    rangeOverflow: validity.rangeOverflow,\n    rangeUnderflow: validity.rangeUnderflow,\n    stepMismatch: validity.stepMismatch,\n    tooLong: validity.tooLong,\n    tooShort: validity.tooShort,\n    typeMismatch: validity.typeMismatch,\n    valueMissing: validity.valueMissing,\n    valid: validity.valid\n  };\n}\nfunction $9da8e3f192aba981$var$getNativeValidity(input) {\n  return {\n    isInvalid: !input.validity.valid,\n    validationDetails: $9da8e3f192aba981$var$getValidity(input),\n    validationErrors: input.validationMessage ? [input.validationMessage] : []\n  };\n}\nfunction $9da8e3f192aba981$var$getFirstInvalidInput(form) {\n  for (var i = 0; i < form.elements.length; i++) {\n    var element = form.elements[i];\n    if (!element.validity.valid) return element;\n  }\n  return null;\n}","map":{"version":3,"names":["$9da8e3f192aba981$export$b8473d3665f3a75a","props","state","ref","validationBehavior","focus","$j3sn1$reactariautils","useLayoutEffect","current","disabled","errorMessage","realtimeValidation","isInvalid","validationErrors","join","setCustomValidity","hasAttribute","title","updateValidation","$9da8e3f192aba981$var$getNativeValidity","isIgnoredReset","$j3sn1$react","useRef","onReset","useEffectEvent","resetValidation","onInvalid","e","_ref_current","displayValidation","commitValidation","form","defaultPrevented","$9da8e3f192aba981$var$getFirstInvalidInput","_ref_current1","$j3sn1$reactariainteractions","setInteractionModality","preventDefault","onChange","useEffect","input","reset","window","event","type","target","MessagePort","call","addEventListener","removeEventListener","$9da8e3f192aba981$var$getValidity","validity","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","valid","validationDetails","validationMessage","i","elements","length","element"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\form\\dist\\packages\\@react-aria\\form\\src\\useFormValidation.ts"],"sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FormValidationState} from '@react-stately/form';\nimport {RefObject, Validation, ValidationResult} from '@react-types/shared';\nimport {setInteractionModality} from '@react-aria/interactions';\nimport {useEffect, useRef} from 'react';\nimport {useEffectEvent, useLayoutEffect} from '@react-aria/utils';\n\ntype ValidatableElement = HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement;\n\ninterface FormValidationProps<T> extends Validation<T> {\n  focus?: () => void\n}\n\nexport function useFormValidation<T>(props: FormValidationProps<T>, state: FormValidationState, ref: RefObject<ValidatableElement | null> | undefined): void {\n  let {validationBehavior, focus} = props;\n\n  // This is a useLayoutEffect so that it runs before the useEffect in useFormValidationState, which commits the validation change.\n  useLayoutEffect(() => {\n    if (validationBehavior === 'native' && ref?.current && !ref.current.disabled) {\n      let errorMessage = state.realtimeValidation.isInvalid ? state.realtimeValidation.validationErrors.join(' ') || 'Invalid value.' : '';\n      ref.current.setCustomValidity(errorMessage);\n\n      // Prevent default tooltip for validation message.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=605277\n      if (!ref.current.hasAttribute('title')) {\n        ref.current.title = '';\n      }\n\n      if (!state.realtimeValidation.isInvalid) {\n        state.updateValidation(getNativeValidity(ref.current));\n      }\n    }\n  });\n\n  let isIgnoredReset = useRef(false);\n  let onReset = useEffectEvent(() => {\n    if (!isIgnoredReset.current) {\n      state.resetValidation();\n    }\n  });\n\n  let onInvalid = useEffectEvent((e: Event) => {\n    // Only commit validation if we are not already displaying one.\n    // This avoids clearing server errors that the user didn't actually fix.\n    if (!state.displayValidation.isInvalid) {\n      state.commitValidation();\n    }\n\n    // Auto focus the first invalid input in a form, unless the error already had its default prevented.\n    let form = ref?.current?.form;\n    if (!e.defaultPrevented && ref && form && getFirstInvalidInput(form) === ref.current) {\n      if (focus) {\n        focus();\n      } else {\n        ref.current?.focus();\n      }\n\n      // Always show focus ring.\n      setInteractionModality('keyboard');\n    }\n\n    // Prevent default browser error UI from appearing.\n    e.preventDefault();\n  });\n\n  let onChange = useEffectEvent(() => {\n    state.commitValidation();\n  });\n\n  useEffect(() => {\n    let input = ref?.current;\n    if (!input) {\n      return;\n    }\n\n    let form = input.form;\n\n    let reset = form?.reset;\n    if (form) {\n      // Try to detect React's automatic form reset behavior so we don't clear\n      // validation errors that are returned by server actions.\n      // To do this, we ignore programmatic form resets that occur outside a user event.\n      // This is best-effort. There may be false positives, e.g. setTimeout.\n      form.reset = () => {\n        // React uses MessageChannel for scheduling, so ignore 'message' events.\n        isIgnoredReset.current = !window.event || (window.event.type === 'message' && window.event.target instanceof MessagePort);\n        reset?.call(form);\n        isIgnoredReset.current = false;\n      };\n    }\n\n    input.addEventListener('invalid', onInvalid);\n    input.addEventListener('change', onChange);\n    form?.addEventListener('reset', onReset);\n    return () => {\n      input!.removeEventListener('invalid', onInvalid);\n      input!.removeEventListener('change', onChange);\n      form?.removeEventListener('reset', onReset);\n      if (form) {\n        // @ts-ignore\n        form.reset = reset;\n      }\n    };\n  }, [ref, onInvalid, onChange, onReset, validationBehavior]);\n}\n\nfunction getValidity(input: ValidatableElement) {\n  // The native ValidityState object is live, meaning each property is a getter that returns the current state.\n  // We need to create a snapshot of the validity state at the time this function is called to avoid unpredictable React renders.\n  let validity = input.validity;\n  return {\n    badInput: validity.badInput,\n    customError: validity.customError,\n    patternMismatch: validity.patternMismatch,\n    rangeOverflow: validity.rangeOverflow,\n    rangeUnderflow: validity.rangeUnderflow,\n    stepMismatch: validity.stepMismatch,\n    tooLong: validity.tooLong,\n    tooShort: validity.tooShort,\n    typeMismatch: validity.typeMismatch,\n    valueMissing: validity.valueMissing,\n    valid: validity.valid\n  };\n}\n\nfunction getNativeValidity(input: ValidatableElement): ValidationResult {\n  return {\n    isInvalid: !input.validity.valid,\n    validationDetails: getValidity(input),\n    validationErrors: input.validationMessage ? [input.validationMessage] : []\n  };\n}\n\nfunction getFirstInvalidInput(form: HTMLFormElement): ValidatableElement | null {\n  for (let i = 0; i < form.elements.length; i++) {\n    let element = form.elements[i] as ValidatableElement;\n    if (!element.validity.valid) {\n      return element;\n    }\n  }\n\n  return null;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}