{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.atomic = atomic;\nexports.stringifyValueWithProperty = stringifyValueWithProperty;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _hash = _interopRequireDefault(require(\"../useResponsiveQuery/hash\"));\nvar _prefixStyles = _interopRequireDefault(require(\"../react-native-web-fucntions/prefixStyles\"));\nvar _normalizeValueWithProperty = _interopRequireDefault(require(\"./normalizeValueWithProperty\"));\nvar _createReactDOMStyle = _interopRequireDefault(require(\"../react-native-web-fucntions/createReactDOMStyle\"));\nvar _hyphenateStyleName = _interopRequireDefault(require(\"../react-native-web-fucntions/hyphenateStyleName\"));\nvar _PROPERTIES_FLIP;\nvar borderTopLeftRadius = 'borderTopLeftRadius';\nvar borderTopRightRadius = 'borderTopRightRadius';\nvar borderBottomLeftRadius = 'borderBottomLeftRadius';\nvar borderBottomRightRadius = 'borderBottomRightRadius';\nvar borderLeftColor = 'borderLeftColor';\nvar borderLeftStyle = 'borderLeftStyle';\nvar borderLeftWidth = 'borderLeftWidth';\nvar borderRightColor = 'borderRightColor';\nvar borderRightStyle = 'borderRightStyle';\nvar borderRightWidth = 'borderRightWidth';\nvar right = 'right';\nvar marginLeft = 'marginLeft';\nvar marginRight = 'marginRight';\nvar paddingLeft = 'paddingLeft';\nvar paddingRight = 'paddingRight';\nvar left = 'left';\nvar PROPERTIES_VALUE = ['clear', 'float', 'textAlign'];\nvar PROPERTIES_FLIP = (_PROPERTIES_FLIP = {}, (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)(_PROPERTIES_FLIP, borderTopLeftRadius, borderTopRightRadius), borderTopRightRadius, borderTopLeftRadius), borderBottomLeftRadius, borderBottomRightRadius), borderBottomRightRadius, borderBottomLeftRadius), borderLeftColor, borderRightColor), borderLeftStyle, borderRightStyle), borderLeftWidth, borderRightWidth), borderRightColor, borderLeftColor), borderRightStyle, borderLeftStyle), borderRightWidth, borderLeftWidth), (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)(_PROPERTIES_FLIP, left, right), marginLeft, marginRight), marginRight, marginLeft), paddingLeft, paddingRight), paddingRight, paddingLeft), right, left));\nvar PROPERTIES_I18N = {\n  borderTopStartRadius: borderTopLeftRadius,\n  borderTopEndRadius: borderTopRightRadius,\n  borderBottomStartRadius: borderBottomLeftRadius,\n  borderBottomEndRadius: borderBottomRightRadius,\n  borderStartColor: borderLeftColor,\n  borderStartStyle: borderLeftStyle,\n  borderStartWidth: borderLeftWidth,\n  borderEndColor: borderRightColor,\n  borderEndStyle: borderRightStyle,\n  borderEndWidth: borderRightWidth,\n  end: right,\n  marginStart: marginLeft,\n  marginEnd: marginRight,\n  paddingStart: paddingLeft,\n  paddingEnd: paddingRight,\n  start: left\n};\nvar customGroup = {\n  borderColor: 2,\n  borderRadius: 2,\n  borderStyle: 2,\n  borderWidth: 2,\n  display: 2,\n  flex: 2,\n  margin: 2,\n  overflow: 2,\n  overscrollBehavior: 2,\n  padding: 2,\n  marginHorizontal: 2.1,\n  marginVertical: 2.1,\n  paddingHorizontal: 2.1,\n  paddingVertical: 2.1\n};\nvar atomicGroup = 2.2;\nvar cache = new Map();\nfunction atomic(style) {\n  var compiledStyle = {\n    $$css: true\n  };\n  var compiledRules = [];\n  function atomicCompile(prop, value) {\n    var valueString = stringifyValueWithProperty(value, prop);\n    var cacheKey = prop + valueString;\n    var cachedResult = cache.get(cacheKey);\n    var identifier;\n    if (cachedResult != null) {\n      identifier = cachedResult[0];\n      compiledRules.push(cachedResult[1]);\n    } else {\n      identifier = createIdentifier('r', prop, value);\n      var order = customGroup[prop] || atomicGroup;\n      var rules = createAtomicRules(identifier, prop, value);\n      var orderedRules = [rules, order];\n      compiledRules.push(orderedRules);\n      cache.set(cacheKey, [identifier, orderedRules]);\n    }\n    return identifier;\n  }\n  Object.keys(style).sort().forEach(function (prop) {\n    var value = style[prop];\n    if (value != null) {\n      var localizeableValue;\n      if (PROPERTIES_VALUE.indexOf(prop) > -1) {\n        var _left = atomicCompile(prop, 'left');\n        var _right = atomicCompile(prop, 'right');\n        if (value === 'start') {\n          localizeableValue = [_left, _right];\n        } else if (value === 'end') {\n          localizeableValue = [_right, _left];\n        }\n      }\n      var propPolyfill = PROPERTIES_I18N[prop];\n      if (propPolyfill != null) {\n        var ltr = atomicCompile(propPolyfill, value);\n        var rtl = atomicCompile(PROPERTIES_FLIP[propPolyfill], value);\n        localizeableValue = [ltr, rtl];\n      }\n      if (prop === 'transitionProperty') {\n        var values = Array.isArray(value) ? value : [value];\n        var polyfillIndices = [];\n        for (var i = 0; i < values.length; i++) {\n          var val = values[i];\n          if (typeof val === 'string' && PROPERTIES_I18N[val] != null) {\n            polyfillIndices.push(i);\n          }\n        }\n        if (polyfillIndices.length > 0) {\n          var ltrPolyfillValues = (0, _toConsumableArray2.default)(values);\n          var rtlPolyfillValues = (0, _toConsumableArray2.default)(values);\n          polyfillIndices.forEach(function (i) {\n            var ltrVal = ltrPolyfillValues[i];\n            if (typeof ltrVal === 'string') {\n              var ltrPolyfill = PROPERTIES_I18N[ltrVal];\n              var rtlPolyfill = PROPERTIES_FLIP[ltrPolyfill];\n              ltrPolyfillValues[i] = ltrPolyfill;\n              rtlPolyfillValues[i] = rtlPolyfill;\n              var _ltr = atomicCompile(prop, ltrPolyfillValues);\n              var _rtl = atomicCompile(prop, rtlPolyfillValues);\n              localizeableValue = [_ltr, _rtl];\n            }\n          });\n        }\n      }\n      if (localizeableValue == null) {\n        localizeableValue = atomicCompile(prop, value);\n      } else {\n        compiledStyle['$$css$localize'] = true;\n      }\n      compiledStyle[prop] = localizeableValue;\n    }\n  });\n  return [compiledStyle, compiledRules];\n}\nfunction stringifyValueWithProperty(value, property) {\n  var normalizedValue = (0, _normalizeValueWithProperty.default)(value, property);\n  return typeof normalizedValue !== 'string' ? JSON.stringify(normalizedValue || '') : normalizedValue;\n}\nfunction createIdentifier(prefix, name, value) {\n  var hashedString = (0, _hash.default)(name + stringifyValueWithProperty(value, name));\n  return process.env.NODE_ENV !== 'production' ? \"\".concat(prefix, \"-\").concat(name, \"-\").concat(hashedString) : \"\".concat(prefix, \"-\").concat(hashedString);\n}\nfunction createAtomicRules(identifier, property, value) {\n  var rules = [];\n  var selector = \".\".concat(identifier);\n  switch (property) {\n    case 'animationKeyframes':\n      {\n        var _processKeyframesValu = processKeyframesValue(value),\n          _processKeyframesValu2 = (0, _slicedToArray2.default)(_processKeyframesValu, 2),\n          animationNames = _processKeyframesValu2[0],\n          keyframesRules = _processKeyframesValu2[1];\n        var block = createDeclarationBlock({\n          animationName: animationNames.join(',')\n        });\n        rules.push.apply(rules, [\"\".concat(selector).concat(block)].concat((0, _toConsumableArray2.default)(keyframesRules)));\n        break;\n      }\n    case 'placeholderTextColor':\n      {\n        var _block = createDeclarationBlock({\n          color: value,\n          opacity: 1\n        });\n        rules.push(\"\".concat(selector, \"::-webkit-input-placeholder\").concat(_block), \"\".concat(selector, \"::-moz-placeholder\").concat(_block), \"\".concat(selector, \":-ms-input-placeholder\").concat(_block), \"\".concat(selector, \"::placeholder\").concat(_block));\n        break;\n      }\n    case 'pointerEvents':\n      {\n        var finalValue = value;\n        if (value === 'auto' || value === 'box-only') {\n          finalValue = 'auto!important';\n          if (value === 'box-only') {\n            var _block2 = createDeclarationBlock({\n              pointerEvents: 'none'\n            });\n            rules.push(\"\".concat(selector, \">*\").concat(_block2));\n          }\n        } else if (value === 'none' || value === 'box-none') {\n          finalValue = 'none!important';\n          if (value === 'box-none') {\n            var _block3 = createDeclarationBlock({\n              pointerEvents: 'auto'\n            });\n            rules.push(\"\".concat(selector, \">*\").concat(_block3));\n          }\n        }\n        var _block4 = createDeclarationBlock({\n          pointerEvents: finalValue\n        });\n        rules.push(\"\".concat(selector).concat(_block4));\n        break;\n      }\n    case 'scrollbarWidth':\n      {\n        if (value === 'none') {\n          rules.push(\"\".concat(selector, \"::-webkit-scrollbar{display:none}\"));\n        }\n        var _block5 = createDeclarationBlock({\n          scrollbarWidth: value\n        });\n        rules.push(\"\".concat(selector).concat(_block5));\n        break;\n      }\n    default:\n      {\n        var _block6 = createDeclarationBlock((0, _defineProperty2.default)({}, property, value));\n        rules.push(\"\".concat(selector).concat(_block6));\n        break;\n      }\n  }\n  return rules;\n}\nfunction createDeclarationBlock(style) {\n  var domStyle = (0, _prefixStyles.default)((0, _createReactDOMStyle.default)(style));\n  var declarationsString = Object.keys(domStyle).map(function (property) {\n    var value = domStyle[property];\n    var prop = (0, _hyphenateStyleName.default)(property);\n    if (Array.isArray(value)) {\n      return value.map(function (v) {\n        return \"\".concat(prop, \":\").concat(v);\n      }).join(';');\n    } else {\n      return \"\".concat(prop, \":\").concat(value);\n    }\n  }).sort().join(';');\n  return \"{\".concat(declarationsString, \";}\");\n}\nfunction processKeyframesValue(keyframesValue) {\n  if (typeof keyframesValue === 'number') {\n    throw new Error(\"Invalid CSS keyframes type: \".concat(typeof keyframesValue));\n  }\n  var animationNames = [];\n  var rules = [];\n  var value = Array.isArray(keyframesValue) ? keyframesValue : [keyframesValue];\n  value.forEach(function (keyframes) {\n    if (typeof keyframes === 'string') {\n      animationNames.push(keyframes);\n    } else {\n      var _createKeyframes = createKeyframes(keyframes),\n        _createKeyframes2 = (0, _slicedToArray2.default)(_createKeyframes, 2),\n        identifier = _createKeyframes2[0],\n        keyframesRules = _createKeyframes2[1];\n      animationNames.push(identifier);\n      rules.push.apply(rules, (0, _toConsumableArray2.default)(keyframesRules));\n    }\n  });\n  return [animationNames, rules];\n}\nfunction createKeyframes(keyframes) {\n  var prefixes = ['-webkit-', ''];\n  var identifier = createIdentifier('r', 'animation', keyframes);\n  var steps = '{' + Object.keys(keyframes).map(function (stepName) {\n    var rule = keyframes[stepName];\n    var block = createDeclarationBlock(rule);\n    return \"\".concat(stepName).concat(block);\n  }).join('') + '}';\n  var rules = prefixes.map(function (prefix) {\n    return \"@\".concat(prefix, \"keyframes \").concat(identifier).concat(steps);\n  });\n  return [identifier, rules];\n}","map":{"version":3,"names":["_hash","_interopRequireDefault","require","_prefixStyles","_normalizeValueWithProperty","_createReactDOMStyle","_hyphenateStyleName","_PROPERTIES_FLIP","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderLeftColor","borderLeftStyle","borderLeftWidth","borderRightColor","borderRightStyle","borderRightWidth","right","marginLeft","marginRight","paddingLeft","paddingRight","left","PROPERTIES_VALUE","PROPERTIES_FLIP","_defineProperty2","default","PROPERTIES_I18N","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderStartColor","borderStartStyle","borderStartWidth","borderEndColor","borderEndStyle","borderEndWidth","end","marginStart","marginEnd","paddingStart","paddingEnd","start","customGroup","borderColor","borderRadius","borderStyle","borderWidth","display","flex","margin","overflow","overscrollBehavior","padding","marginHorizontal","marginVertical","paddingHorizontal","paddingVertical","atomicGroup","cache","Map","atomic","style","compiledStyle","$$css","compiledRules","atomicCompile","prop","value","valueString","stringifyValueWithProperty","cacheKey","cachedResult","get","identifier","push","createIdentifier","order","rules","createAtomicRules","orderedRules","set","Object","keys","sort","forEach","localizeableValue","indexOf","propPolyfill","ltr","rtl","values","Array","isArray","polyfillIndices","i","length","val","ltrPolyfillValues","_toConsumableArray2","rtlPolyfillValues","ltrVal","ltrPolyfill","rtlPolyfill","property","normalizedValue","normalizeValueWithProperty","JSON","stringify","prefix","name","hashedString","hash","process","env","NODE_ENV","concat","selector","_processKeyframesValu","processKeyframesValue","_processKeyframesValu2","_slicedToArray2","animationNames","keyframesRules","block","createDeclarationBlock","animationName","join","apply","color","opacity","finalValue","pointerEvents","scrollbarWidth","domStyle","prefixStyles","createReactDOMStyle","declarationsString","map","hyphenateStyleName","v","keyframesValue","Error","keyframes","_createKeyframes","createKeyframes","_createKeyframes2","prefixes","steps","stepName","rule"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\utils\\react-native-web-fucntions\\atomic.ts"],"sourcesContent":["/* eslint-disable */\n//@ts-nocheck\n// This functions is taken from react native web\n\nimport hash from '../useResponsiveQuery/hash';\nimport prefixStyles from '../react-native-web-fucntions/prefixStyles';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\nimport createReactDOMStyle from '../react-native-web-fucntions/createReactDOMStyle';\nimport hyphenateStyleName from '../react-native-web-fucntions/hyphenateStyleName';\ntype Value = Object | Array<any> | string | number;\ntype Style = { [key: string]: Value };\ntype Rule = string;\ntype Rules = Array<Rule>;\ntype RulesData = [Rules, number];\ntype CompiledStyle = {\n  //@ts-ignore\n  $$css: boolean;\n  //@ts-ignore\n  $$css$localize?: boolean;\n  [key: string]: string | Array<string>;\n};\nconst borderTopLeftRadius = 'borderTopLeftRadius';\nconst borderTopRightRadius = 'borderTopRightRadius';\nconst borderBottomLeftRadius = 'borderBottomLeftRadius';\nconst borderBottomRightRadius = 'borderBottomRightRadius';\nconst borderLeftColor = 'borderLeftColor';\nconst borderLeftStyle = 'borderLeftStyle';\nconst borderLeftWidth = 'borderLeftWidth';\nconst borderRightColor = 'borderRightColor';\nconst borderRightStyle = 'borderRightStyle';\nconst borderRightWidth = 'borderRightWidth';\nconst right = 'right';\nconst marginLeft = 'marginLeft';\nconst marginRight = 'marginRight';\nconst paddingLeft = 'paddingLeft';\nconst paddingRight = 'paddingRight';\nconst left = 'left';\nconst PROPERTIES_VALUE: any = ['clear', 'float', 'textAlign'];\n// Map of LTR property names to their BiDi equivalent.\nconst PROPERTIES_FLIP: { [key: string]: string } = {\n  [borderTopLeftRadius]: borderTopRightRadius,\n  [borderTopRightRadius]: borderTopLeftRadius,\n  [borderBottomLeftRadius]: borderBottomRightRadius,\n  [borderBottomRightRadius]: borderBottomLeftRadius,\n  [borderLeftColor]: borderRightColor,\n  [borderLeftStyle]: borderRightStyle,\n  [borderLeftWidth]: borderRightWidth,\n  [borderRightColor]: borderLeftColor,\n  [borderRightStyle]: borderLeftStyle,\n  [borderRightWidth]: borderLeftWidth,\n  [left]: right,\n  [marginLeft]: marginRight,\n  [marginRight]: marginLeft,\n  [paddingLeft]: paddingRight,\n  [paddingRight]: paddingLeft,\n  [right]: left,\n};\n// Map of I18N property names to their LTR equivalent.\nconst PROPERTIES_I18N: any = {\n  borderTopStartRadius: borderTopLeftRadius,\n  borderTopEndRadius: borderTopRightRadius,\n  borderBottomStartRadius: borderBottomLeftRadius,\n  borderBottomEndRadius: borderBottomRightRadius,\n  borderStartColor: borderLeftColor,\n  borderStartStyle: borderLeftStyle,\n  borderStartWidth: borderLeftWidth,\n  borderEndColor: borderRightColor,\n  borderEndStyle: borderRightStyle,\n  borderEndWidth: borderRightWidth,\n  end: right,\n  marginStart: marginLeft,\n  marginEnd: marginRight,\n  paddingStart: paddingLeft,\n  paddingEnd: paddingRight,\n  start: left,\n};\ntype CompilerOutput = [CompiledStyle, Array<RulesData>];\nconst customGroup: { [key: string]: number } = {\n  borderColor: 2,\n  borderRadius: 2,\n  borderStyle: 2,\n  borderWidth: 2,\n  display: 2,\n  flex: 2,\n  margin: 2,\n  overflow: 2,\n  overscrollBehavior: 2,\n  padding: 2,\n  marginHorizontal: 2.1,\n  marginVertical: 2.1,\n  paddingHorizontal: 2.1,\n  paddingVertical: 2.1,\n};\nconst atomicGroup = 2.2;\nconst cache = new Map();\nexport function atomic(style: Style): CompilerOutput {\n  //@ts-ignore\n  const compiledStyle: CompiledStyle = { $$css: true };\n  const compiledRules: any = [];\n\n  function atomicCompile(prop: any, value: any) {\n    const valueString = stringifyValueWithProperty(value, prop);\n    const cacheKey = prop + valueString;\n    const cachedResult = cache.get(cacheKey);\n    let identifier;\n    if (cachedResult != null) {\n      identifier = cachedResult[0];\n      compiledRules.push(cachedResult[1]);\n    } else {\n      identifier = createIdentifier('r', prop, value);\n      const order = customGroup[prop] || atomicGroup;\n      const rules = createAtomicRules(identifier, prop, value);\n      const orderedRules = [rules, order];\n      compiledRules.push(orderedRules);\n      cache.set(cacheKey, [identifier, orderedRules]);\n    }\n    return identifier;\n  }\n\n  Object.keys(style)\n    .sort()\n    .forEach((prop) => {\n      const value = style[prop];\n      if (value != null) {\n        let localizeableValue;\n        // BiDi flip values\n        if (PROPERTIES_VALUE.indexOf(prop) > -1) {\n          const left = atomicCompile(prop, 'left');\n          const right = atomicCompile(prop, 'right');\n          if (value === 'start') {\n            localizeableValue = [left, right];\n          } else if (value === 'end') {\n            localizeableValue = [right, left];\n          }\n        }\n        // BiDi flip properties\n        const propPolyfill = PROPERTIES_I18N[prop];\n        if (propPolyfill != null) {\n          const ltr = atomicCompile(propPolyfill, value);\n          const rtl = atomicCompile(PROPERTIES_FLIP[propPolyfill], value);\n          localizeableValue = [ltr, rtl];\n        }\n        // BiDi flip transitionProperty value\n        if (prop === 'transitionProperty') {\n          const values = Array.isArray(value) ? value : [value];\n          const polyfillIndices = [];\n\n          for (let i = 0; i < values.length; i++) {\n            const val = values[i];\n            if (typeof val === 'string' && PROPERTIES_I18N[val] != null) {\n              polyfillIndices.push(i);\n            }\n          }\n\n          if (polyfillIndices.length > 0) {\n            const ltrPolyfillValues = [...values];\n            const rtlPolyfillValues = [...values];\n            polyfillIndices.forEach((i) => {\n              const ltrVal = ltrPolyfillValues[i];\n              if (typeof ltrVal === 'string') {\n                const ltrPolyfill = PROPERTIES_I18N[ltrVal];\n                const rtlPolyfill = PROPERTIES_FLIP[ltrPolyfill];\n                ltrPolyfillValues[i] = ltrPolyfill;\n                rtlPolyfillValues[i] = rtlPolyfill;\n                const ltr = atomicCompile(prop, ltrPolyfillValues);\n                const rtl = atomicCompile(prop, rtlPolyfillValues);\n                localizeableValue = [ltr, rtl];\n              }\n            });\n          }\n        }\n\n        if (localizeableValue == null) {\n          localizeableValue = atomicCompile(prop, value);\n        } else {\n          compiledStyle['$$css$localize'] = true;\n        }\n\n        compiledStyle[prop] = localizeableValue;\n      }\n    });\n\n  return [compiledStyle, compiledRules];\n}\n\n/**\n * Create a value string that normalizes different input values with a common\n * output.\n */\nexport function stringifyValueWithProperty(\n  value: Value,\n  property?: string\n): string {\n  // e.g., 0 => '0px', 'black' => 'rgba(0,0,0,1)'\n  const normalizedValue = normalizeValueWithProperty(value, property);\n  return typeof normalizedValue !== 'string'\n    ? JSON.stringify(normalizedValue || '')\n    : normalizedValue;\n}\n\n/**\n * An identifier is associated with a unique set of styles.\n */\nfunction createIdentifier(prefix: string, name: string, value: Value): string {\n  const hashedString = hash(name + stringifyValueWithProperty(value, name));\n  return process.env.NODE_ENV !== 'production'\n    ? `${prefix}-${name}-${hashedString}`\n    : `${prefix}-${hashedString}`;\n}\n\n/**\n * Create the Atomic CSS rules needed for a given StyleSheet rule.\n * Translates StyleSheet declarations to CSS.\n */\nfunction createAtomicRules(\n  identifier: string,\n  property: any,\n  value: any\n): Rules {\n  const rules = [];\n  const selector = `.${identifier}`;\n\n  // Handle non-standard properties and object values that require multiple\n  // CSS rules to be created.\n  switch (property) {\n    case 'animationKeyframes': {\n      const [animationNames, keyframesRules] = processKeyframesValue(value);\n      const block = createDeclarationBlock({\n        animationName: animationNames.join(','),\n      });\n      rules.push(`${selector}${block}`, ...keyframesRules);\n      break;\n    }\n\n    // Equivalent to using '::placeholder'\n    case 'placeholderTextColor': {\n      const block = createDeclarationBlock({ color: value, opacity: 1 });\n      rules.push(\n        `${selector}::-webkit-input-placeholder${block}`,\n        `${selector}::-moz-placeholder${block}`,\n        `${selector}:-ms-input-placeholder${block}`,\n        `${selector}::placeholder${block}`\n      );\n      break;\n    }\n\n    // Polyfill for additional 'pointer-events' values\n    // See d13f78622b233a0afc0c7a200c0a0792c8ca9e58\n    case 'pointerEvents': {\n      let finalValue = value;\n      if (value === 'auto' || value === 'box-only') {\n        finalValue = 'auto!important';\n        if (value === 'box-only') {\n          const block = createDeclarationBlock({ pointerEvents: 'none' });\n          rules.push(`${selector}>*${block}`);\n        }\n      } else if (value === 'none' || value === 'box-none') {\n        finalValue = 'none!important';\n        if (value === 'box-none') {\n          const block = createDeclarationBlock({ pointerEvents: 'auto' });\n          rules.push(`${selector}>*${block}`);\n        }\n      }\n      const block = createDeclarationBlock({ pointerEvents: finalValue });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n\n    // Polyfill for draft spec\n    // https://drafts.csswg.org/css-scrollbars-1/\n    case 'scrollbarWidth': {\n      if (value === 'none') {\n        rules.push(`${selector}::-webkit-scrollbar{display:none}`);\n      }\n      const block = createDeclarationBlock({ scrollbarWidth: value });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n\n    default: {\n      const block = createDeclarationBlock({ [property]: value });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n  }\n\n  return rules;\n}\n\n/**\n * Creates a CSS declaration block from a StyleSheet object.\n */\nfunction createDeclarationBlock(style: Style): string {\n  const domStyle: any = prefixStyles(createReactDOMStyle(style));\n  const declarationsString = Object.keys(domStyle)\n    .map((property) => {\n      const value = domStyle[property];\n      const prop = hyphenateStyleName(property);\n      // The prefixer may return an array of values:\n      // { display: [ '-webkit-flex', 'flex' ] }\n      // to represent \"fallback\" declarations\n      // { display: -webkit-flex; display: flex; }\n      if (Array.isArray(value)) {\n        return value.map((v) => `${prop}:${v}`).join(';');\n      } else {\n        return `${prop}:${value}`;\n      }\n    })\n    // Once properties are hyphenated, this will put the vendor\n    // prefixed and short-form properties first in the list.\n    .sort()\n    .join(';');\n\n  return `{${declarationsString};}`;\n}\n\n/**\n * Create CSS keyframes rules and names from a StyleSheet keyframes object.\n */\nfunction processKeyframesValue(keyframesValue: any) {\n  if (typeof keyframesValue === 'number') {\n    throw new Error(`Invalid CSS keyframes type: ${typeof keyframesValue}`);\n  }\n\n  const animationNames: any = [];\n  const rules: any = [];\n  const value = Array.isArray(keyframesValue)\n    ? keyframesValue\n    : [keyframesValue];\n\n  value.forEach((keyframes) => {\n    if (typeof keyframes === 'string') {\n      // Support external animation libraries (identifiers only)\n      animationNames.push(keyframes);\n    } else {\n      // Create rules for each of the keyframes\n      const [identifier, keyframesRules] = createKeyframes(keyframes);\n      animationNames.push(identifier);\n      rules.push(...keyframesRules);\n    }\n  });\n\n  return [animationNames, rules];\n}\n\n/**\n * Create individual CSS keyframes rules.\n */\nfunction createKeyframes(keyframes: any): [string, Rules] {\n  const prefixes = ['-webkit-', ''];\n  const identifier = createIdentifier('r', 'animation', keyframes);\n\n  const steps =\n    '{' +\n    Object.keys(keyframes)\n      .map((stepName) => {\n        const rule = keyframes[stepName];\n        const block = createDeclarationBlock(rule);\n        return `${stepName}${block}`;\n      })\n      .join('') +\n    '}';\n\n  const rules = prefixes.map((prefix) => {\n    return `@${prefix}keyframes ${identifier}${steps}`;\n  });\n  return [identifier, rules];\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}