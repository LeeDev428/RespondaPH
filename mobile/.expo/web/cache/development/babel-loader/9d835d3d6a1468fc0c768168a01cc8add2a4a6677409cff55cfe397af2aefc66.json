{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDimensionsWithEnable = exports.getResponsiveStylesImpl = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _reactNative = require(\"react-native\");\nvar _react = _interopRequireDefault(require(\"react\"));\nvar getResponsiveStylesImpl = exports.getResponsiveStylesImpl = function getResponsiveStylesImpl(width) {\n  return function (queries) {\n    if (typeof width === 'number') {\n      var styles = queries.initial ? [_reactNative.StyleSheet.create({\n        initial: _reactNative.StyleSheet.flatten(queries.initial)\n      }).initial] : [];\n      if (queries.query) {\n        queries.query.forEach(function (queryRule) {\n          if (queryRule.style) {\n            var flattenQueryStyle = _reactNative.StyleSheet.flatten(queryRule.style);\n            if (typeof queryRule.maxWidth === 'number' && typeof queryRule.minWidth === 'number') {\n              if (width >= queryRule.minWidth && width <= queryRule.maxWidth) {\n                styles.push(_reactNative.StyleSheet.create({\n                  rangeStyle: flattenQueryStyle\n                }).rangeStyle);\n              }\n            } else if (typeof queryRule.minWidth === 'number') {\n              if (width >= queryRule.minWidth) {\n                styles.push(_reactNative.StyleSheet.create({\n                  minWidthStyle: flattenQueryStyle\n                }).minWidthStyle);\n              }\n            } else if (typeof queryRule.maxWidth === 'number') {\n              if (width <= queryRule.maxWidth) {\n                styles.push(_reactNative.StyleSheet.create({\n                  maxWidthStyle: flattenQueryStyle\n                }).maxWidthStyle);\n              }\n            }\n          }\n        });\n        return {\n          styles: styles\n        };\n      }\n    }\n    return {};\n  };\n};\nvar useDimensionsWithEnable = exports.useDimensionsWithEnable = function useDimensionsWithEnable(_ref) {\n  var enable = _ref.enable;\n  var _React$useState = _react.default.useState(function () {\n      return _reactNative.Dimensions.get('window');\n    }),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    dimensions = _React$useState2[0],\n    setDimensions = _React$useState2[1];\n  _react.default.useEffect(function () {\n    if (enable) {\n      var handleChange = function handleChange(_ref2) {\n        var window = _ref2.window;\n        if (dimensions.width !== window.width || dimensions.height !== window.height || dimensions.scale !== window.scale || dimensions.fontScale !== window.fontScale) {\n          setDimensions(window);\n        }\n      };\n      _reactNative.Dimensions.addEventListener('change', handleChange);\n      handleChange({\n        window: _reactNative.Dimensions.get('window')\n      });\n      return function () {\n        _reactNative.Dimensions.removeEventListener('change', handleChange);\n      };\n    }\n    return function () {};\n  }, [dimensions, enable]);\n  return dimensions;\n};","map":{"version":3,"names":["_reactNative","require","_react","_interopRequireDefault","getResponsiveStylesImpl","exports","width","queries","styles","initial","StyleSheet","create","flatten","query","forEach","queryRule","style","flattenQueryStyle","maxWidth","minWidth","push","rangeStyle","minWidthStyle","maxWidthStyle","useDimensionsWithEnable","_ref","enable","_React$useState","React","useState","Dimensions","get","_React$useState2","_slicedToArray2","default","dimensions","setDimensions","useEffect","handleChange","_ref2","window","height","scale","fontScale","addEventListener","removeEventListener"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\utils\\useResponsiveQuery\\common.ts"],"sourcesContent":["import type {\n  GetResponsiveStylesParams,\n  GetResponsiveStylesReturnType,\n} from './types';\nimport { Dimensions, ScaledSize, StyleSheet } from 'react-native';\nimport React from 'react';\n\nexport const getResponsiveStylesImpl = (width: number) => (\n  queries: GetResponsiveStylesParams\n): GetResponsiveStylesReturnType => {\n  if (typeof width === 'number') {\n    let styles = queries.initial\n      ? [\n          StyleSheet.create({ initial: StyleSheet.flatten(queries.initial) })\n            .initial,\n        ]\n      : [];\n\n    if (queries.query) {\n      queries.query.forEach((queryRule) => {\n        if (queryRule.style) {\n          const flattenQueryStyle = StyleSheet.flatten(queryRule.style);\n\n          if (\n            typeof queryRule.maxWidth === 'number' &&\n            typeof queryRule.minWidth === 'number'\n          ) {\n            if (width >= queryRule.minWidth && width <= queryRule.maxWidth) {\n              styles.push(\n                StyleSheet.create({ rangeStyle: flattenQueryStyle }).rangeStyle\n              );\n            }\n          } else if (typeof queryRule.minWidth === 'number') {\n            if (width >= queryRule.minWidth) {\n              styles.push(\n                StyleSheet.create({ minWidthStyle: flattenQueryStyle })\n                  .minWidthStyle\n              );\n            }\n          } else if (typeof queryRule.maxWidth === 'number') {\n            if (width <= queryRule.maxWidth) {\n              styles.push(\n                StyleSheet.create({ maxWidthStyle: flattenQueryStyle })\n                  .maxWidthStyle\n              );\n            }\n          }\n        }\n      });\n      return { styles };\n    }\n  }\n\n  return {};\n};\n\n// The below implementation is taken from React Native's source and added a flag to conditionally attach/remove listeners\nexport const useDimensionsWithEnable = ({ enable }: { enable?: boolean }) => {\n  const [dimensions, setDimensions] = React.useState(() =>\n    Dimensions.get('window')\n  );\n\n  React.useEffect(() => {\n    if (enable) {\n      function handleChange({ window }: { window: ScaledSize }) {\n        if (\n          dimensions.width !== window.width ||\n          dimensions.height !== window.height ||\n          dimensions.scale !== window.scale ||\n          dimensions.fontScale !== window.fontScale\n        ) {\n          setDimensions(window);\n        }\n      }\n      Dimensions.addEventListener('change', handleChange);\n      // We might have missed an update between calling `get` in render and\n      // `addEventListener` in this handler, so we set it here. If there was\n      // no change, React will filter out this update as a no-op.\n      handleChange({ window: Dimensions.get('window') });\n\n      return () => {\n        Dimensions.removeEventListener('change', handleChange);\n      };\n    }\n    return () => {};\n  }, [dimensions, enable]);\n  return dimensions;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}