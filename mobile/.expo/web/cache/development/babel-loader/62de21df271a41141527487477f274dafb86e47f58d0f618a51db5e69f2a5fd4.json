{"ast":null,"code":"var $78605a5d7424e31b$exports = require(\"./useLayoutEffect.main.js\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useSyncRef\", function () {\n  return $6fc733991a9f977c$export$4debdb1a3f0fa79e;\n});\nfunction $6fc733991a9f977c$export$4debdb1a3f0fa79e(context, ref) {\n  (0, $78605a5d7424e31b$exports.useLayoutEffect)(function () {\n    if (context && context.ref && ref) {\n      context.ref.current = ref.current;\n      return function () {\n        if (context.ref) context.ref.current = null;\n      };\n    }\n  });\n}","map":{"version":3,"names":["$6fc733991a9f977c$export$4debdb1a3f0fa79e","context","ref","$78605a5d7424e31b$exports","useLayoutEffect","current"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\utils\\dist\\packages\\@react-aria\\utils\\src\\useSyncRef.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {MutableRefObject} from 'react';\nimport {RefObject} from '@react-types/shared';\nimport {useLayoutEffect} from './';\n\ninterface ContextValue<T> {\n  ref?: MutableRefObject<T | null>\n}\n\n// Syncs ref from context with ref passed to hook\nexport function useSyncRef<T>(context?: ContextValue<T> | null, ref?: RefObject<T | null>): void {\n  useLayoutEffect(() => {\n    if (context && context.ref && ref) {\n      context.ref.current = ref.current;\n      return () => {\n        if (context.ref) {\n          context.ref.current = null;\n        }\n      };\n    }\n  });\n}\n"],"mappings":";;;;;;;;;;;;AAqBO,SAASA,0CAAcC,OAAgC,EAAEC,GAAyB;EACvF,IAAAC,yBAAA,CAAAC,eAAc,EAAE;IACd,IAAIH,OAAA,IAAWA,OAAA,CAAQC,GAAG,IAAIA,GAAA,EAAK;MACjCD,OAAA,CAAQC,GAAG,CAACG,OAAO,GAAGH,GAAA,CAAIG,OAAO;MACjC,OAAO;QACL,IAAIJ,OAAA,CAAQC,GAAG,EACbD,OAAA,CAAQC,GAAG,CAACG,OAAO,GAAG;MAE1B;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}