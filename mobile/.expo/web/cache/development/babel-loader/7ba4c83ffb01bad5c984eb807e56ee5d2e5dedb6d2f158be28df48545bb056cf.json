{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useResponsiveSSRProps = useResponsiveSSRProps;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = require(\"react\");\nvar _useTheme = require(\"../hooks/useTheme\");\nvar _NativeBaseContext = require(\"../core/NativeBaseContext\");\nvar _tools = require(\"../theme/tools\");\nfunction useResponsiveSSRProps(incomingProps) {\n  var _useState = (0, _react.useState)(false),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    modified = _useState2[0],\n    setModified = _useState2[1];\n  var theme = (0, _useTheme.useTheme)();\n  var responsivePropsExists = (0, _tools.isResponsiveAnyProp)(incomingProps, theme);\n  var isSSR = (0, _NativeBaseContext.useNativeBaseConfig)('useBreakpointResolvedProps').isSSR;\n  var modifiedProps = incomingProps;\n  if (responsivePropsExists && isSSR && !modified) {\n    modifiedProps = Object.assign({}, modifiedProps, {\n      key: Math.random()\n    });\n  }\n  (0, _react.useEffect)(function () {\n    if (responsivePropsExists && isSSR) {\n      setModified(true);\n    }\n  }, [responsivePropsExists, isSSR]);\n  return modifiedProps;\n}","map":{"version":3,"names":["_react","require","_useTheme","_NativeBaseContext","_tools","useResponsiveSSRProps","incomingProps","_useState","useState","_useState2","_slicedToArray2","default","modified","setModified","theme","useTheme","responsivePropsExists","isResponsiveAnyProp","isSSR","useNativeBaseConfig","modifiedProps","Object","assign","key","Math","random","useEffect"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\native-base\\lib\\module\\hooks\\useResponsiveSSRProps.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTheme } from '../hooks/useTheme';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { isResponsiveAnyProp } from '../theme/tools';\n\nexport function useResponsiveSSRProps(incomingProps: any) {\n  const [modified, setModified] = useState(false);\n  const theme = useTheme();\n\n  const responsivePropsExists = isResponsiveAnyProp(incomingProps, theme);\n  const isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n\n  let modifiedProps = incomingProps;\n  if (responsivePropsExists && isSSR && !modified) {\n    modifiedProps = { ...modifiedProps, key: Math.random() };\n  }\n  useEffect((): any => {\n    if (responsivePropsExists && isSSR) {\n      setModified(true);\n    }\n  }, [responsivePropsExists, isSSR]);\n\n  return modifiedProps;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,SAAA,GAAAD,OAAA;AACA,IAAAE,kBAAA,GAAAF,OAAA;AACA,IAAAG,MAAA,GAAAH,OAAA;AAEO,SAASI,qBAATA,CAA+BC,aAA/B,EAAmD;EACxD,IAAAC,SAAA,GAAgC,IAAAC,eAAQ,EAAC,KAAD,CAAxC;IAAAC,UAAA,OAAAC,eAAA,CAAAC,OAAA,EAAAJ,SAAA;IAAOK,QAAD,GAAAH,UAAA;IAAWI,WAAX,GAAAJ,UAAA;EACN,IAAMK,KAAK,GAAG,IAAAC,kBAAQ,GAAtB;EAEA,IAAMC,qBAAqB,GAAG,IAAAC,0BAAmB,EAACX,aAAD,EAAgBQ,KAAhB,CAAjD;EACA,IAAMI,KAAK,GAAG,IAAAC,sCAAmB,EAAC,4BAAD,CAAnB,CAAkDD,KAAhE;EAEA,IAAIE,aAAa,GAAGd,aAApB;EACA,IAAIU,qBAAqB,IAAIE,KAAzB,IAAkC,CAACN,QAAvC,EAAiD;IAC/CQ,aAAa,GAAAC,MAAA,CAAAC,MAAA,KAAQF,aAAL;MAAoBG,GAAG,EAAEC,IAAI,CAACC,MAAL;IAAA,EAAzC;EACD;EACD,IAAAC,gBAAS,EAAC,YAAW;IACnB,IAAIV,qBAAqB,IAAIE,KAA7B,EAAoC;MAClCL,WAAW,CAAC,IAAD,CAAX;IACD;EACF,CAJQ,EAIN,CAACG,qBAAD,EAAwBE,KAAxB,CAJM,CAAT;EAMA,OAAOE,aAAP;AACD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}