{"ast":null,"code":"var $87beb89ab4a308fd$exports = require(\"./utils.main.js\");\nvar $bOFHO$reactariautils = require(\"@react-aria/utils\");\nvar $bOFHO$reactstatelycollections = require(\"@react-stately/collections\");\nvar $bOFHO$reactariainteractions = require(\"@react-aria/interactions\");\nvar $bOFHO$reactariaselection = require(\"@react-aria/selection\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useOption\", function () {\n  return $c164f9f79f4cef2d$export$497855f14858aa34;\n});\nfunction $c164f9f79f4cef2d$export$497855f14858aa34(props, state, ref) {\n  var _item_props, _item_props1;\n  var key = props.key;\n  var data = (0, $87beb89ab4a308fd$exports.listData).get(state);\n  var _props_isDisabled;\n  var isDisabled = (_props_isDisabled = props.isDisabled) !== null && _props_isDisabled !== void 0 ? _props_isDisabled : state.selectionManager.isDisabled(key);\n  var _props_isSelected;\n  var isSelected = (_props_isSelected = props.isSelected) !== null && _props_isSelected !== void 0 ? _props_isSelected : state.selectionManager.isSelected(key);\n  var _props_shouldSelectOnPressUp;\n  var shouldSelectOnPressUp = (_props_shouldSelectOnPressUp = props.shouldSelectOnPressUp) !== null && _props_shouldSelectOnPressUp !== void 0 ? _props_shouldSelectOnPressUp : data === null || data === void 0 ? void 0 : data.shouldSelectOnPressUp;\n  var _props_shouldFocusOnHover;\n  var shouldFocusOnHover = (_props_shouldFocusOnHover = props.shouldFocusOnHover) !== null && _props_shouldFocusOnHover !== void 0 ? _props_shouldFocusOnHover : data === null || data === void 0 ? void 0 : data.shouldFocusOnHover;\n  var _props_shouldUseVirtualFocus;\n  var shouldUseVirtualFocus = (_props_shouldUseVirtualFocus = props.shouldUseVirtualFocus) !== null && _props_shouldUseVirtualFocus !== void 0 ? _props_shouldUseVirtualFocus : data === null || data === void 0 ? void 0 : data.shouldUseVirtualFocus;\n  var _props_isVirtualized;\n  var isVirtualized = (_props_isVirtualized = props.isVirtualized) !== null && _props_isVirtualized !== void 0 ? _props_isVirtualized : data === null || data === void 0 ? void 0 : data.isVirtualized;\n  var labelId = (0, $bOFHO$reactariautils.useSlotId)();\n  var descriptionId = (0, $bOFHO$reactariautils.useSlotId)();\n  var optionProps = {\n    role: 'option',\n    'aria-disabled': isDisabled || undefined,\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined\n  };\n  if (!((0, $bOFHO$reactariautils.isMac)() && (0, $bOFHO$reactariautils.isWebKit)())) {\n    optionProps['aria-label'] = props['aria-label'];\n    optionProps['aria-labelledby'] = labelId;\n    optionProps['aria-describedby'] = descriptionId;\n  }\n  var item = state.collection.getItem(key);\n  if (isVirtualized) {\n    var index = Number(item === null || item === void 0 ? void 0 : item.index);\n    optionProps['aria-posinset'] = Number.isNaN(index) ? undefined : index + 1;\n    optionProps['aria-setsize'] = (0, $bOFHO$reactstatelycollections.getItemCount)(state.collection);\n  }\n  var onAction = (data === null || data === void 0 ? void 0 : data.onAction) ? function () {\n    var _data_onAction;\n    return data === null || data === void 0 ? void 0 : (_data_onAction = data.onAction) === null || _data_onAction === void 0 ? void 0 : _data_onAction.call(data, key);\n  } : undefined;\n  var id = (0, $87beb89ab4a308fd$exports.getItemId)(state, key);\n  var _ref = (0, $bOFHO$reactariaselection.useSelectableItem)({\n      selectionManager: state.selectionManager,\n      key: key,\n      ref: ref,\n      shouldSelectOnPressUp: shouldSelectOnPressUp,\n      allowsDifferentPressOrigin: shouldSelectOnPressUp && shouldFocusOnHover,\n      isVirtualized: isVirtualized,\n      shouldUseVirtualFocus: shouldUseVirtualFocus,\n      isDisabled: isDisabled,\n      onAction: onAction || (item === null || item === void 0 ? void 0 : (_item_props = item.props) === null || _item_props === void 0 ? void 0 : _item_props.onAction) ? (0, $bOFHO$reactariautils.chain)(item === null || item === void 0 ? void 0 : (_item_props1 = item.props) === null || _item_props1 === void 0 ? void 0 : _item_props1.onAction, onAction) : undefined,\n      linkBehavior: data === null || data === void 0 ? void 0 : data.linkBehavior,\n      UNSTABLE_itemBehavior: data === null || data === void 0 ? void 0 : data['UNSTABLE_itemBehavior'],\n      id: id\n    }),\n    itemProps = _ref.itemProps,\n    isPressed = _ref.isPressed,\n    isFocused = _ref.isFocused,\n    hasAction = _ref.hasAction,\n    allowsSelection = _ref.allowsSelection;\n  var _ref2 = (0, $bOFHO$reactariainteractions.useHover)({\n      isDisabled: isDisabled || !shouldFocusOnHover,\n      onHoverStart: function onHoverStart() {\n        if (!(0, $bOFHO$reactariainteractions.isFocusVisible)()) {\n          state.selectionManager.setFocused(true);\n          state.selectionManager.setFocusedKey(key);\n        }\n      }\n    }),\n    hoverProps = _ref2.hoverProps;\n  var domProps = (0, $bOFHO$reactariautils.filterDOMProps)(item === null || item === void 0 ? void 0 : item.props);\n  delete domProps.id;\n  var linkProps = (0, $bOFHO$reactariautils.useLinkProps)(item === null || item === void 0 ? void 0 : item.props);\n  return {\n    optionProps: Object.assign({}, optionProps, (0, $bOFHO$reactariautils.mergeProps)(domProps, itemProps, hoverProps, linkProps), {\n      id: id\n    }),\n    labelProps: {\n      id: labelId\n    },\n    descriptionProps: {\n      id: descriptionId\n    },\n    isFocused: isFocused,\n    isFocusVisible: isFocused && state.selectionManager.isFocused && (0, $bOFHO$reactariainteractions.isFocusVisible)(),\n    isSelected: isSelected,\n    isDisabled: isDisabled,\n    isPressed: isPressed,\n    allowsSelection: allowsSelection,\n    hasAction: hasAction\n  };\n}","map":{"version":3,"names":["$c164f9f79f4cef2d$export$497855f14858aa34","props","state","ref","_item_props","_item_props1","key","data","$87beb89ab4a308fd$exports","listData","get","_props_isDisabled","isDisabled","selectionManager","_props_isSelected","isSelected","_props_shouldSelectOnPressUp","shouldSelectOnPressUp","_props_shouldFocusOnHover","shouldFocusOnHover","_props_shouldUseVirtualFocus","shouldUseVirtualFocus","_props_isVirtualized","isVirtualized","labelId","$bOFHO$reactariautils","useSlotId","descriptionId","optionProps","role","undefined","selectionMode","isMac","isWebKit","item","collection","getItem","index","Number","isNaN","$bOFHO$reactstatelycollections","getItemCount","onAction","_data_onAction","call","id","getItemId","_ref","$bOFHO$reactariaselection","useSelectableItem","allowsDifferentPressOrigin","chain","linkBehavior","UNSTABLE_itemBehavior","itemProps","isPressed","isFocused","hasAction","allowsSelection","_ref2","$bOFHO$reactariainteractions","useHover","onHoverStart","isFocusVisible","setFocused","setFocusedKey","hoverProps","domProps","filterDOMProps","linkProps","useLinkProps","Object","assign","mergeProps","labelProps","descriptionProps"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\listbox\\dist\\packages\\@react-aria\\listbox\\src\\useOption.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {chain, filterDOMProps, isMac, isWebKit, mergeProps, useLinkProps, useSlotId} from '@react-aria/utils';\nimport {DOMAttributes, FocusableElement, Key, RefObject} from '@react-types/shared';\nimport {getItemCount} from '@react-stately/collections';\nimport {getItemId, listData} from './utils';\nimport {isFocusVisible, useHover} from '@react-aria/interactions';\nimport {ListState} from '@react-stately/list';\nimport {SelectableItemStates, useSelectableItem} from '@react-aria/selection';\n\nexport interface OptionAria extends SelectableItemStates {\n  /** Props for the option element. */\n  optionProps: DOMAttributes,\n\n  /** Props for the main text element inside the option. */\n  labelProps: DOMAttributes,\n\n  /** Props for the description text element inside the option, if any. */\n  descriptionProps: DOMAttributes,\n\n  /** Whether the option is currently focused. */\n  isFocused: boolean,\n\n  /** Whether the option is keyboard focused. */\n  isFocusVisible: boolean\n}\n\nexport interface AriaOptionProps {\n  /**\n   * Whether the option is disabled.\n   * @deprecated\n   */\n  isDisabled?: boolean,\n\n  /**\n   * Whether the option is selected.\n   * @deprecated\n   */\n  isSelected?: boolean,\n\n  /** A screen reader only label for the option. */\n  'aria-label'?: string,\n\n  /** The unique key for the option. */\n  key: Key,\n\n  /**\n   * Whether selection should occur on press up instead of press down.\n   * @deprecated\n   */\n  shouldSelectOnPressUp?: boolean,\n\n  /**\n   * Whether the option should be focused when the user hovers over it.\n   * @deprecated\n   */\n  shouldFocusOnHover?: boolean,\n\n  /**\n   * Whether the option is contained in a virtual scrolling listbox.\n   * @deprecated\n   */\n  isVirtualized?: boolean,\n\n  /**\n   * Whether the option should use virtual focus instead of being focused directly.\n   * @deprecated\n   */\n  shouldUseVirtualFocus?: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for an option in a listbox.\n * See `useListBox` for more details about listboxes.\n * @param props - Props for the option.\n * @param state - State for the listbox, as returned by `useListState`.\n */\nexport function useOption<T>(props: AriaOptionProps, state: ListState<T>, ref: RefObject<FocusableElement | null>): OptionAria {\n  let {\n    key\n  } = props;\n\n  let data = listData.get(state);\n\n  let isDisabled = props.isDisabled ?? state.selectionManager.isDisabled(key);\n  let isSelected = props.isSelected ?? state.selectionManager.isSelected(key);\n  let shouldSelectOnPressUp = props.shouldSelectOnPressUp ?? data?.shouldSelectOnPressUp;\n  let shouldFocusOnHover = props.shouldFocusOnHover ?? data?.shouldFocusOnHover;\n  let shouldUseVirtualFocus = props.shouldUseVirtualFocus ?? data?.shouldUseVirtualFocus;\n  let isVirtualized = props.isVirtualized ?? data?.isVirtualized;\n\n  let labelId = useSlotId();\n  let descriptionId = useSlotId();\n\n  let optionProps = {\n    role: 'option',\n    'aria-disabled': isDisabled || undefined,\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined\n  };\n\n  // Safari with VoiceOver on macOS misreads options with aria-labelledby or aria-label as simply \"text\".\n  // We should not map slots to the label and description on Safari and instead just have VoiceOver read the textContent.\n  // https://bugs.webkit.org/show_bug.cgi?id=209279\n  if (!(isMac() && isWebKit())) {\n    optionProps['aria-label'] = props['aria-label'];\n    optionProps['aria-labelledby'] = labelId;\n    optionProps['aria-describedby'] = descriptionId;\n  }\n\n  let item = state.collection.getItem(key);\n  if (isVirtualized) {\n    let index = Number(item?.index);\n    optionProps['aria-posinset'] = Number.isNaN(index) ? undefined : index + 1;\n    optionProps['aria-setsize'] = getItemCount(state.collection);\n  }\n\n  let onAction = data?.onAction ? () => data?.onAction?.(key) : undefined;\n  let id = getItemId(state, key);\n  let {itemProps, isPressed, isFocused, hasAction, allowsSelection} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key,\n    ref,\n    shouldSelectOnPressUp,\n    allowsDifferentPressOrigin: shouldSelectOnPressUp && shouldFocusOnHover,\n    isVirtualized,\n    shouldUseVirtualFocus,\n    isDisabled,\n    onAction: onAction || item?.props?.onAction ? chain(item?.props?.onAction, onAction) : undefined,\n    linkBehavior: data?.linkBehavior,\n    // @ts-ignore\n    UNSTABLE_itemBehavior: data?.['UNSTABLE_itemBehavior'],\n    id\n  });\n\n  let {hoverProps} = useHover({\n    isDisabled: isDisabled || !shouldFocusOnHover,\n    onHoverStart() {\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocused(true);\n        state.selectionManager.setFocusedKey(key);\n      }\n    }\n  });\n\n  let domProps = filterDOMProps(item?.props);\n  delete domProps.id;\n  let linkProps = useLinkProps(item?.props);\n\n  return {\n    optionProps: {\n      ...optionProps,\n      ...mergeProps(domProps, itemProps, hoverProps, linkProps),\n      id\n    },\n    labelProps: {\n      id: labelId\n    },\n    descriptionProps: {\n      id: descriptionId\n    },\n    isFocused,\n    isFocusVisible: isFocused && state.selectionManager.isFocused && isFocusVisible(),\n    isSelected,\n    isDisabled,\n    isPressed,\n    allowsSelection,\n    hasAction\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}