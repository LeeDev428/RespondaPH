{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FocusScope = void 0;\nObject.defineProperty(exports, \"useFocusManager\", {\n  enumerable: true,\n  get: function get() {\n    return _focus.useFocusManager;\n  }\n});\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _focus = require(\"@react-aria/focus\");\nvar _excluded = [\"children\", \"contain\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar FocusScope = exports.FocusScope = function FocusScope(_ref) {\n  var children = _ref.children,\n    contain = _ref.contain,\n    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  return _react.default.createElement(_focus.FocusScope, _extends({\n    contain: contain\n  }, props), children);\n};","map":{"version":3,"names":["_react","_interopRequireDefault","require","_focus","_excluded","FocusScope","exports","_ref","children","contain","props","_objectWithoutProperties2","default","React","createElement","AriaFocusScope","_extends"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-native-aria\\focus\\lib\\module\\FocusScope.web.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  FocusScope as AriaFocusScope,\n  useFocusManager,\n} from '@react-aria/focus';\nimport type { FocusScopeProps } from './FocusScope';\nconst FocusScope = ({ children, contain, ...props }: FocusScopeProps) => {\n  /* Todo: stoping mounted and unMounted everytime contain is change */\n  // if (contain === false) return <></>;\n\n  return (\n    <AriaFocusScope contain={contain} {...props}>\n      {children}\n    </AriaFocusScope>\n  );\n};\n\nexport { FocusScope, useFocusManager };\n"],"mappings":";;;;;;;;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAAA,IAAAE,SAAA;;;;;;;;;;;;;;;AAKA,IAAMC,UAAU,GAAAC,OAAA,CAAAD,UAAA,GAAG,SAAbA,UAAUA,CAAAE,IAAA,EAAyD;EAAA,IAAnDC,QAAF,GAAAD,IAAA,CAAEC,QAAF;IAAYC,OAAZ,GAAAF,IAAA,CAAYE,OAAZ;IAAwBC,KAAA,OAAAC,yBAAA,CAAAC,OAAA,EAAAL,IAAA,EAAAH,SAAA;EAI1C,OACES,cAAA,CAAAC,aAAA,CAACC,iBAAD,EAAAC,QAAA;IAAgBP,OAAO,EAAEA;EAAzB,GAAsCC,KAAtC,GACGF,QADH,CADF;AAKD,CATD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}