{"ast":null,"code":"var $jo4fw$react = require(\"react\");\nvar $jo4fw$reactariautils = require(\"@react-aria/utils\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useScrollWheel\", function () {\n  return $a3dbce0aed7087e2$export$2123ff2b87c81ca;\n});\nfunction $a3dbce0aed7087e2$export$2123ff2b87c81ca(props, ref) {\n  var onScroll = props.onScroll,\n    isDisabled = props.isDisabled;\n  var onScrollHandler = (0, $jo4fw$react.useCallback)(function (e) {\n    if (e.ctrlKey) return;\n    e.preventDefault();\n    e.stopPropagation();\n    if (onScroll) onScroll({\n      deltaX: e.deltaX,\n      deltaY: e.deltaY\n    });\n  }, [onScroll]);\n  (0, $jo4fw$reactariautils.useEvent)(ref, 'wheel', isDisabled ? undefined : onScrollHandler);\n}","map":{"version":3,"names":["$a3dbce0aed7087e2$export$2123ff2b87c81ca","props","ref","onScroll","isDisabled","onScrollHandler","$jo4fw$react","useCallback","e","ctrlKey","preventDefault","stopPropagation","deltaX","deltaY","$jo4fw$reactariautils","useEvent","undefined"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\interactions\\dist\\packages\\@react-aria\\interactions\\src\\useScrollWheel.ts"],"sourcesContent":["/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, ScrollEvents} from '@react-types/shared';\nimport {useCallback} from 'react';\nimport {useEvent} from '@react-aria/utils';\n\nexport interface ScrollWheelProps extends ScrollEvents {\n  /** Whether the scroll listener should be disabled. */\n  isDisabled?: boolean\n}\n\n// scroll wheel needs to be added not passively so it's cancelable, small helper hook to remember that\nexport function useScrollWheel(props: ScrollWheelProps, ref: RefObject<HTMLElement | null>): void {\n  let {onScroll, isDisabled} = props;\n  let onScrollHandler = useCallback((e) => {\n    // If the ctrlKey is pressed, this is a zoom event, do nothing.\n    if (e.ctrlKey) {\n      return;\n    }\n\n    // stop scrolling the page\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (onScroll) {\n      onScroll({deltaX: e.deltaX, deltaY: e.deltaY});\n    }\n  }, [onScroll]);\n\n  useEvent(ref, 'wheel', isDisabled ? undefined : onScrollHandler);\n}\n"],"mappings":";;;;;;;;;;;;;AAsBO,SAASA,yCAAeC,KAAuB,EAAEC,GAAkC;EACxF,IAAKC,QAAQ,GAAgBF,KAAA,CAAzBE,QAAA;IAAWC,UAAU,GAAIH,KAAA,CAAhBG,UAAA;EACb,IAAIC,eAAA,GAAkB,IAAAC,YAAA,CAAAC,WAAU,EAAE,UAACC,CAAA;IAEjC,IAAIA,CAAA,CAAEC,OAAO,EACX;IAIFD,CAAA,CAAEE,cAAc;IAChBF,CAAA,CAAEG,eAAe;IAEjB,IAAIR,QAAA,EACFA,QAAA,CAAS;MAACS,MAAA,EAAQJ,CAAA,CAAEI,MAAM;MAAEC,MAAA,EAAQL,CAAA,CAAEK;IAAM;EAEhD,GAAG,CAACV,QAAA,CAAS;EAEb,IAAAW,qBAAA,CAAAC,QAAO,EAAEb,GAAA,EAAK,SAASE,UAAA,GAAaY,SAAA,GAAYX,eAAA;AAClD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}