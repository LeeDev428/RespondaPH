{"ast":null,"code":"var _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\nvar _excluded = [\"triggerRef\", \"popoverRef\", \"groupRef\", \"isNonModal\", \"isKeyboardDismissDisabled\", \"shouldCloseOnInteractOutside\"];\nvar $08ef1685902b6011$exports = require(\"./ariaHideOutside.main.js\");\nvar $cd94b4896dd97759$exports = require(\"./useOverlayPosition.main.js\");\nvar $82711f9cb668ecdb$exports = require(\"./useOverlay.main.js\");\nvar $5c2f5cd01815d369$exports = require(\"./usePreventScroll.main.js\");\nvar $jkVOI$reactariautils = require(\"@react-aria/utils\");\nvar $jkVOI$react = require(\"react\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"usePopover\", function () {\n  return $6c2dfcdee3e15e20$export$542a6fd13ac93354;\n});\nfunction $6c2dfcdee3e15e20$export$542a6fd13ac93354(props, state) {\n  var triggerRef = props.triggerRef,\n    popoverRef = props.popoverRef,\n    groupRef = props.groupRef,\n    isNonModal = props.isNonModal,\n    isKeyboardDismissDisabled = props.isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside = props.shouldCloseOnInteractOutside,\n    otherProps = _objectWithoutProperties(props, _excluded);\n  var isSubmenu = otherProps['trigger'] === 'SubmenuTrigger';\n  var _ref = (0, $82711f9cb668ecdb$exports.useOverlay)({\n      isOpen: state.isOpen,\n      onClose: state.close,\n      shouldCloseOnBlur: true,\n      isDismissable: !isNonModal || isSubmenu,\n      isKeyboardDismissDisabled: isKeyboardDismissDisabled,\n      shouldCloseOnInteractOutside: shouldCloseOnInteractOutside\n    }, groupRef !== null && groupRef !== void 0 ? groupRef : popoverRef),\n    overlayProps = _ref.overlayProps,\n    underlayProps = _ref.underlayProps;\n  var _ref2 = (0, $cd94b4896dd97759$exports.useOverlayPosition)(Object.assign({}, otherProps, {\n      targetRef: triggerRef,\n      overlayRef: popoverRef,\n      isOpen: state.isOpen,\n      onClose: isNonModal && !isSubmenu ? state.close : null\n    })),\n    positionProps = _ref2.overlayProps,\n    arrowProps = _ref2.arrowProps,\n    placement = _ref2.placement,\n    origin = _ref2.triggerAnchorPoint;\n  (0, $5c2f5cd01815d369$exports.usePreventScroll)({\n    isDisabled: isNonModal || !state.isOpen\n  });\n  (0, $jkVOI$react.useEffect)(function () {\n    if (state.isOpen && popoverRef.current) {\n      var _groupRef_current, _groupRef_current1;\n      if (isNonModal) return (0, $08ef1685902b6011$exports.keepVisible)((_groupRef_current = groupRef === null || groupRef === void 0 ? void 0 : groupRef.current) !== null && _groupRef_current !== void 0 ? _groupRef_current : popoverRef.current);else return (0, $08ef1685902b6011$exports.ariaHideOutside)([(_groupRef_current1 = groupRef === null || groupRef === void 0 ? void 0 : groupRef.current) !== null && _groupRef_current1 !== void 0 ? _groupRef_current1 : popoverRef.current], {\n        shouldUseInert: true\n      });\n    }\n  }, [isNonModal, state.isOpen, popoverRef, groupRef]);\n  return {\n    popoverProps: (0, $jkVOI$reactariautils.mergeProps)(overlayProps, positionProps),\n    arrowProps: arrowProps,\n    underlayProps: underlayProps,\n    placement: placement,\n    triggerAnchorPoint: origin\n  };\n}","map":{"version":3,"names":["$6c2dfcdee3e15e20$export$542a6fd13ac93354","props","state","triggerRef","popoverRef","groupRef","isNonModal","isKeyboardDismissDisabled","shouldCloseOnInteractOutside","otherProps","_objectWithoutProperties","_excluded","isSubmenu","_ref","$82711f9cb668ecdb$exports","useOverlay","isOpen","onClose","close","shouldCloseOnBlur","isDismissable","overlayProps","underlayProps","_ref2","$cd94b4896dd97759$exports","useOverlayPosition","Object","assign","targetRef","overlayRef","positionProps","arrowProps","placement","origin","triggerAnchorPoint","$5c2f5cd01815d369$exports","usePreventScroll","isDisabled","$jkVOI$react","useEffect","current","_groupRef_current","_groupRef_current1","$08ef1685902b6011$exports","keepVisible","ariaHideOutside","shouldUseInert","popoverProps","$jkVOI$reactariautils","mergeProps"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\overlays\\dist\\packages\\@react-aria\\overlays\\src\\usePopover.ts"],"sourcesContent":["/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ariaHideOutside, keepVisible} from './ariaHideOutside';\nimport {AriaPositionProps, useOverlayPosition} from './useOverlayPosition';\nimport {DOMAttributes, RefObject} from '@react-types/shared';\nimport {mergeProps} from '@react-aria/utils';\nimport {OverlayTriggerState} from '@react-stately/overlays';\nimport {PlacementAxis} from '@react-types/overlays';\nimport {useEffect} from 'react';\nimport {useOverlay} from './useOverlay';\nimport {usePreventScroll} from './usePreventScroll';\n\nexport interface AriaPopoverProps extends Omit<AriaPositionProps, 'isOpen' | 'onClose' | 'targetRef' | 'overlayRef'> {\n  /**\n   * The ref for the element which the popover positions itself with respect to.\n   */\n  triggerRef: RefObject<Element | null>,\n  /**\n   * The ref for the popover element.\n   */\n  popoverRef: RefObject<Element | null>,\n  /** A ref for the popover arrow element. */\n  arrowRef?: RefObject<Element | null>,\n  /**\n   * An optional ref for a group of popovers, e.g. submenus.\n   * When provided, this element is used to detect outside interactions\n   * and hiding elements from assistive technologies instead of the popoverRef.\n   */\n  groupRef?: RefObject<Element | null>,\n  /**\n   * Whether the popover is non-modal, i.e. elements outside the popover may be\n   * interacted with by assistive technologies.\n   *\n   * Most popovers should not use this option as it may negatively impact the screen\n   * reader experience. Only use with components such as combobox, which are designed\n   * to handle this situation carefully.\n   */\n  isNonModal?: boolean,\n  /**\n   * Whether pressing the escape key to close the popover should be disabled.\n   *\n   * Most popovers should not use this option. When set to true, an alternative\n   * way to close the popover with a keyboard must be provided.\n   *\n   * @default false\n   */\n  isKeyboardDismissDisabled?: boolean,\n  /**\n   * When user interacts with the argument element outside of the popover ref,\n   * return true if onClose should be called. This gives you a chance to filter\n   * out interaction with elements that should not dismiss the popover.\n   * By default, onClose will always be called on interaction outside the popover ref.\n   */\n  shouldCloseOnInteractOutside?: (element: Element) => boolean\n}\n\nexport interface PopoverAria {\n  /** Props for the popover element. */\n  popoverProps: DOMAttributes,\n  /** Props for the popover tip arrow if any. */\n  arrowProps: DOMAttributes,\n  /** Props to apply to the underlay element, if any. */\n  underlayProps: DOMAttributes,\n  /** Placement of the popover with respect to the trigger. */\n  placement: PlacementAxis | null,\n  /** The origin of the target in the overlay's coordinate system. Useful for animations. */\n  triggerAnchorPoint: {x: number, y: number} | null\n}\n\n/**\n * Provides the behavior and accessibility implementation for a popover component.\n * A popover is an overlay element positioned relative to a trigger.\n */\nexport function usePopover(props: AriaPopoverProps, state: OverlayTriggerState): PopoverAria {\n  let {\n    triggerRef,\n    popoverRef,\n    groupRef,\n    isNonModal,\n    isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside,\n    ...otherProps\n  } = props;\n\n  let isSubmenu = otherProps['trigger'] === 'SubmenuTrigger';\n\n  let {overlayProps, underlayProps} = useOverlay(\n    {\n      isOpen: state.isOpen,\n      onClose: state.close,\n      shouldCloseOnBlur: true,\n      isDismissable: !isNonModal || isSubmenu,\n      isKeyboardDismissDisabled,\n      shouldCloseOnInteractOutside\n    },\n    groupRef ?? popoverRef\n  );\n\n  let {overlayProps: positionProps, arrowProps, placement, triggerAnchorPoint: origin} = useOverlayPosition({\n    ...otherProps,\n    targetRef: triggerRef,\n    overlayRef: popoverRef,\n    isOpen: state.isOpen,\n    onClose: isNonModal && !isSubmenu ? state.close : null\n  });\n\n  usePreventScroll({\n    isDisabled: isNonModal || !state.isOpen\n  });\n\n  useEffect(() => {\n    if (state.isOpen && popoverRef.current) {\n      if (isNonModal) {\n        return keepVisible(groupRef?.current ?? popoverRef.current);\n      } else {\n        return ariaHideOutside([groupRef?.current ?? popoverRef.current], {shouldUseInert: true});\n      }\n    }\n  }, [isNonModal, state.isOpen, popoverRef, groupRef]);\n\n  return {\n    popoverProps: mergeProps(overlayProps, positionProps),\n    arrowProps,\n    underlayProps,\n    placement,\n    triggerAnchorPoint: origin\n  };\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAmFO,SAASA,0CAAWC,KAAuB,EAAEC,KAA0B;EAC5E,IACEC,UAAU,GAORF,KAAA,CARAE,UAAA;IAEFC,UAAU,GAMRH,KAAA,CAPQG,UAAA;IAEVC,QAAQ,GAKNJ,KAAA,CANQI,QAAA;IAEVC,UAAU,GAIRL,KAAA,CALMK,UAAA;IAERC,yBAAyB,GAGvBN,KAAA,CAJQM,yBAAA;IAEVC,4BAA4B,GAE1BP,KAAA,CAHuBO,4BAAA;IAEtBC,UAAA,GAAAC,wBAAA,CACDT,KAAA,EAAAU,SAAA;EAEJ,IAAIC,SAAA,GAAYH,UAAU,CAAC,UAAU,KAAK;EAE1C,IAAAI,IAAA,GAAoC,IAAAC,yBAAA,CAAAC,UAAS,EAC3C;MACEC,MAAA,EAAQd,KAAA,CAAMc,MAAM;MACpBC,OAAA,EAASf,KAAA,CAAMgB,KAAK;MACpBC,iBAAA,EAAmB;MACnBC,aAAA,EAAe,CAACd,UAAA,IAAcM,SAAA;iCAC9BL,yBAAA;oCACAC;IACF,GACAH,QAAA,aAAAA,QAAA,cAAAA,QAAA,GAAYD,UAAA;IATTiB,YAAY,GAAAR,IAAA,CAAbQ,YAAA;IAAeC,aAAa,GAAAT,IAAA,CAAfS,aAAA;EAYjB,IAAAC,KAAA,GAAuF,IAAAC,yBAAA,CAAAC,kBAAiB,EAAAC,MAAA,CAAAC,MAAA,KACnGlB,UAAU;MACbmB,SAAA,EAAWzB,UAAA;MACX0B,UAAA,EAAYzB,UAAA;MACZY,MAAA,EAAQd,KAAA,CAAMc,MAAM;MACpBC,OAAA,EAASX,UAAA,IAAc,CAACM,SAAA,GAAYV,KAAA,CAAMgB,KAAK,GAAG;IAAA,EACpD;IANmBY,aAAa,GAAAP,KAAA,CAA3BF,YAAA;IAA6BU,UAAU,GAAAR,KAAA,CAAZQ,UAAA;IAAcC,SAAS,GAAAT,KAAA,CAAXS,SAAA;IAAiCC,MAAM,GAAAV,KAAA,CAA1BW,kBAAA;EAQzD,IAAAC,yBAAA,CAAAC,gBAAe,EAAE;IACfC,UAAA,EAAY/B,UAAA,IAAc,CAACJ,KAAA,CAAMc;EACnC;EAEA,IAAAsB,YAAA,CAAAC,SAAQ,EAAE;IACR,IAAIrC,KAAA,CAAMc,MAAM,IAAIZ,UAAA,CAAWoC,OAAO,EAAE;UAEjBC,iBAAA,EAEKC,kBAAA;MAH1B,IAAIpC,UAAA,EACF,OAAO,IAAAqC,yBAAA,CAAAC,WAAU,EAAE,CAAAH,iBAAA,GAAApC,QAAA,aAAAA,QAAA,uBAAAA,QAAA,CAAUmC,OAAO,cAAjBC,iBAAA,cAAAA,iBAAA,GAAqBrC,UAAA,CAAWoC,OAAO,OAE1D,OAAO,IAAAG,yBAAA,CAAAE,eAAc,EAAE,CAAC,CAAAH,kBAAA,GAAArC,QAAA,aAAAA,QAAA,uBAAAA,QAAA,CAAUmC,OAAO,cAAjBE,kBAAA,cAAAA,kBAAA,GAAqBtC,UAAA,CAAWoC,OAAO,CAAC,EAAE;QAACM,cAAA,EAAgB;MAAI;IAE3F;EACF,GAAG,CAACxC,UAAA,EAAYJ,KAAA,CAAMc,MAAM,EAAEZ,UAAA,EAAYC,QAAA,CAAS;EAEnD,OAAO;IACL0C,YAAA,EAAc,IAAAC,qBAAA,CAAAC,UAAS,EAAE5B,YAAA,EAAcS,aAAA;gBACvCC,UAAA;mBACAT,aAAA;eACAU,SAAA;IACAE,kBAAA,EAAoBD;EACtB;AACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}