{"ast":null,"code":"var $47fa5ec5ff482271$exports = require(\"./context.main.js\");\nvar $3UK6J$react = require(\"react\");\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n$parcel$export(module.exports, \"useListFormatter\", function () {\n  return $cb6a3e7d490e97a4$export$a2f47a3d2973640;\n});\nfunction $cb6a3e7d490e97a4$export$a2f47a3d2973640() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _ref = (0, $47fa5ec5ff482271$exports.useLocale)(),\n    locale = _ref.locale;\n  return (0, $3UK6J$react.useMemo)(function () {\n    return new Intl.ListFormat(locale, options);\n  }, [locale, options]);\n}","map":{"version":3,"names":["$cb6a3e7d490e97a4$export$a2f47a3d2973640","options","arguments","length","undefined","_ref","$47fa5ec5ff482271$exports","useLocale","locale","$3UK6J$react","useMemo","Intl","ListFormat"],"sources":["D:\\Programming\\Systems\\Hybrid-Systems\\RespondaPH\\mobile\\node_modules\\@react-aria\\i18n\\dist\\packages\\@react-aria\\i18n\\src\\useListFormatter.tsx"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useLocale} from './context';\nimport {useMemo} from 'react';\n\n/**\n * Provides localized list formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the list formatter for performance.\n * @param options - Formatting options.\n */\nexport function useListFormatter(options: Intl.ListFormatOptions = {}): Intl.ListFormat {\n  let {locale} = useLocale();\n  return useMemo(() => new Intl.ListFormat(locale, options), [locale, options]);\n}\n"],"mappings":";;;;;;;;;;;;;AAoBO,SAASA,yCAAA,EAAqD;EAAA,IAApCC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAkC,CAAC,CAAC;EACnE,IAAAG,IAAA,GAAe,IAAAC,yBAAA,CAAAC,SAAQ;IAAlBC,MAAM,GAAAH,IAAA,CAAPG,MAAA;EACJ,OAAO,IAAAC,YAAA,CAAAC,OAAM,EAAE;IAAA,OAAM,IAAIC,IAAA,CAAKC,UAAU,CAACJ,MAAA,EAAQP,OAAA;EAAA,GAAU,CAACO,MAAA,EAAQP,OAAA,CAAQ;AAC9E","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}